/* SCHEMA PRODUCED DATE - TIME :10/12/2023 - 15:08:40 */
#pragma section acct
/* Definition ACCT created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __acct
typedef struct __acct
{
   char                            acct_num[19];
} acct_def;
#define acct_def_Size 19
#pragma section acct_typ
/* Definition ACCT-TYP created on 10/12/2023 at 15:08 */
typedef char                            acct_typ_def[2];
#pragma section addr_iso
/* Definition ADDR-ISO created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __addr_iso
typedef struct __addr_iso
{
   char                            name[22];
   char                            city[13];
   char                            st[3];
   char                            cntry[2];
} addr_iso_def;
#define addr_iso_def_Size 40
#pragma section afm_term_nam
/* Definition AFM-TERM-NAM created on 10/12/2023 at 15:08 */
/*           An internal Pathway terminal name obtained from            !00262C07 */
/*           the SCOBOL TERMINALFILENAME procedure.                     !00262C08 */
typedef char                            afm_term_nam_def[24];
#pragma section afm_ts
/* Definition AFM-TS created on 10/12/2023 at 15:08 */
/*           This field defines a standard Tandem Julian time stamp.    !00262C0L */
typedef long long                       afm_ts_def;
#pragma section afm_user_id
/* Definition AFM-USER-ID created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __afm_user_id
typedef struct __afm_user_id
{
/*             The group number of the operator that performed the      !00262C0Z */
/*             last file maintenance application.  This value is        !00262C10 */
/*             taken from the information given when the operator       !00262C11 */
/*             last logged on to BASE24.                                !00262C12 */
   short                           grp_num;
/*             The user number of the operator that performed the       !00262C16 */
/*             last file maintenance application.  This value is        !00262C17 */
/*             taken from the information given when the operator       !00262C18 */
/*             last logged on to BASE24.                                !00262C19 */
   __int32_t                       user_num;
} afm_user_id_def;
#define afm_user_id_def_Size 6
#pragma section alias
/* Definition ALIAS created on 10/12/2023 at 15:08 */
typedef char                            alias_def[16];
#pragma section base_seg
/* Definition BASE-SEG created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __base_seg
typedef struct __base_seg
{
   short                           lgth;
   union
   {
      struct
      {
         short                           left_word;
         short                           right_word;
      } seg_map_r;
      __int32_t                       seg_map;
   } u_seg_map_r;
} base_seg_def;
#define base_seg_def_Size 6
#pragma section binary_acct
/* Definition BINARY-ACCT created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __binary_acct
typedef struct __binary_acct
{
   struct
   {
      short                           lgth;
      long long                       num1;
      long long                       num2;
      char                            fill1;
   } extnd_acct_num;
} binary_acct_def;
#define binary_acct_def_Size 19
#pragma section brch
/* Definition BRCH created on 10/12/2023 at 15:08 */
typedef char                            brch_def[4];
#pragma section byte_addr
/* Definition BYTE-ADDR created on 10/12/2023 at 15:08 */
#include <tnsint.h>
/*           This field defines an address pointer for use in           !00397C08 */
/*           other DDLs.                                                !00397C09 */
typedef __int32_t                       byte_addr_def;
#pragma section coid
/* Definition COID created on 10/12/2023 at 15:08 */
typedef char                            coid_def[19];
#pragma section crd_key
/* Definition CRD-KEY created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __crd_key
/*           Cardholder data from the file being read,                  !00404M07 */
/*           logged to the OMF following a record read.                 !00404M08 */
typedef struct __crd_key
{
/*           The logical network of the card issuer.                    !00404M0C */
   char                            ln[4];
/*           The FIID of the card issuer.                               !00404M0G */
   char                            fiid[4];
/*           The cardholder's primary account number (PAN)              !00404M0K */
/*           for card initiated transactions.                           !00404M0L */
   char                            pan[19];
/*           The member number associated with cardholder's             !00404M0P */
/*           account number.                                            !00404M0Q */
   char                            mbr_num[3];
/*           The account type associated with the card.                 !00404M0U */
   char                            acct_typ[2];
} crd_key_def;
#define crd_key_def_Size 32
#pragma section crncy_cde
/* Definition CRNCY-CDE created on 10/12/2023 at 15:08 */
typedef char                            crncy_cde_def[3];
#pragma section crncy_cde_x
/* Definition CRNCY-CDE-X created on 10/12/2023 at 15:08 */
typedef char                            crncy_cde_x_def[3];
#pragma section dat
/* Definition DAT created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __dat
typedef struct __dat
{
   char                            yy[2];
   char                            mm[2];
   char                            dd[2];
} dat_def;
#define dat_def_Size 6
#pragma section emv_term_cap
/* Definition EMV-TERM-CAP created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __emv_term_cap
/*           EMV Terminal Capabilities.  Indicates the card data        !00436D09 */
/*           input, CVM, and security capabilities of the terminal,     !00436D0A */
/*           as shown below.  Where the bit setting is not specified,   !00436D0B */
/*           a bit setting of '1' indicates the meaning specified,      !00436D0C */
/*           a bit setting of '0' indicates the opposite.  Additions    !00436D0D */
/*           in the defined bits below should also be added to the      !00436D0E */
/*           EMV-TERM-CAP-COBOL Definition.                             !00436D0F */
/*                                                                      !00436D0G */
/*           Because of the way TAL handles bit operations on string    !00436F01 */
/*           variables, the TAL code references the EMV bits as         !00436F02 */
/*           defined in the column TAL Reference as Implemented.        !00436F03 */
/*           This field is binary.                                      !00436D0H */
typedef struct __emv_term_cap
{
/*           Byte 1 (Card Data Input Capability)                        !00436D0L */
/*             EMV Bit                                 TAL Reference    !00436F07 */
/*             Position   Meaning                      as Implemented   !00436F08 */
/*             --------   -----------------------      --------------   !00436F09 */
/*                8       Manual key entry                    8         !00436F0A */
/*                7       Magnetic stripe                     9         !00436F0B */
/*                6       IC with contacts                   10         !00436F0C */
/*                5       Reserved for future use            11         !00436F0D */
/*                4       Reserved for future use            12         !00436F0E */
/*                3       Reserved for future use            13         !00436F0F */
/*                2       Reserved for future use            14         !00436F0G */
/*                1       Reserved for future use            15         !00436F0H */
   char                            crd_data_input;
/*           Byte 2 (CVM Capability)                                    !00436F0K */
/*             EMV Bit                                 TAL Reference    !00436F0L */
/*             Position   Meaning                      as Implemented   !00436F0M */
/*             --------   --------------------------   --------------   !00436F0N */
/*                8       Plaintext PIN for ICC               8         !00436F0O */
/*                          verification                                !00436F0P */
/*                7       Enciphered PIN for online           9         !00436F0Q */
/*                          verification                                !00436F0R */
/*                6       Signature (paper)                  10         !00436F0S */
/*                5       Enciphered PIN for offline         11         !00436F0T */
/*                          verification                                !00436F0U */
/*                4       No CVM required                    12         !00436L01 */
/*                3       Reserved for future use            13         !00436F0W */
/*                2       Reserved for future use            14         !00436F0X */
/*                1       Reserved for future use            15         !00436F0Y */
   char                            cvm;
/*           Byte 3 (Security Capability)                               !00436D1F */
/*             EMV Bit                                TAL Reference     !00436F16 */
/*             Position  Meaning                      as Implemented    !00436F17 */
/*             --------  ---------------------------  --------------    !00436F18 */
/*                8      Static data authentication          8          !00436F19 */
/*                7      Dynamic data authentication         9          !00436F1A */
/*                6      Card capture                       10          !00436F1B */
/*                5      Reserved for future use            11          !00436F1C */
/*                4      Combined data authentication       12          !00436L06 */
/*                3      Reserved for future use            13          !00436F1E */
/*                2      Reserved for future use            14          !00436F1F */
/*                1      Reserved for future use            15          !00436F1G */
   char                            sec;
/*           This field ensures word-alignment.                         !00436D1U */
   char                            user_fld1_emv_term_cap;
} emv_term_cap_def;
#define emv_term_cap_def_Size 4
#pragma section emv_term_cap_cobol
/* Definition EMV-TERM-CAP-COBOL created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __emv_term_cap_cobol
/*           EMV Terminal Capabilities defined as bytes to be used in   !00436D2A */
/*           COBOL programs.  An entry is defined for each bit defined  !00436D2B */
/*           in the EMV-TERM-CAP Definition.                            !00436D2C */
typedef struct __emv_term_cap_cobol
{
   char                            key_entry;
   char                            mag_stripe;
   char                            ic_contacts;
   char                            reserved1;
   char                            reserved2;
   char                            reserved3;
   char                            plaintext_pin;
   char                            enciphr_pin_onl;
   char                            signature;
   char                            enciphr_pin_offl;
   char                            no_cvm_reqd;
   char                            reserved4;
   char                            static_data_auth;
   char                            dyn_data_auth;
   char                            card_capture;
   char                            reserved5;
   char                            combnd_data_auth;
   char                            reserved6;
} emv_term_cap_cobol_def;
#define emv_term_cap_cobol_def_Size 18
#pragma section err_cde
/* Definition ERR-CDE created on 10/12/2023 at 15:08 */
typedef char                            err_cde_def[3];
#pragma section fcb
/* Definition FCB created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __fcb
typedef struct __fcb
{
   short                           filenum;
   short                           num_writes;
   short                           file_type;
   short                           rec_lgth;
   short                           blk_size;
   short                           num_parts;
   short                           recs_per_blk;
   long long                       max_file_size;
   short                           dp_ver;
   short                           prev_pct;
   short                           cur_pct;
   short                           init_flag;
   short                           file_frmt;
   __int32_t                       rec_lgth_frmt_2;
   __int32_t                       blk_size_frmt_2;
} fcb_def;
#define fcb_def_Size 40
#pragma section fiid
/* Definition FIID created on 10/12/2023 at 15:08 */
typedef char                            fiid_def[4];
#pragma section file_req
/* Definition FILE-REQ created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __file_req
typedef struct __file_req
{
   char                            fname[35];
   char                            fill1;
   short                           pri_ext;
   short                           sec_ext;
   short                           iblock_size;
   short                           block_size;
   short                           file_cde;
} file_req_def;
#define file_req_def_Size 46
#pragma section fname
/* Definition FNAME created on 10/12/2023 at 15:08 */
typedef char                            fname_def[35];
#pragma section id_num
/* Definition ID-NUM created on 10/12/2023 at 15:08 */
typedef char                            id_num_def[11];
#pragma section key_loc
/* Definition KEY-LOC created on 10/12/2023 at 15:08 */
/*           A key locator is an identifier used as key information     !00563L06 */
/*           to access a BASE24-es Transaction Security Services        !00563L07 */
/*           (TSS) database file.                                       !00563L08 */
typedef char                            key_loc_def[16];
#pragma section keyi
/* Definition KEYI created on 10/12/2023 at 15:08 */
typedef char                            keyi_def[8];
#pragma section keyx
/* Definition KEYX created on 10/12/2023 at 15:08 */
typedef char                            keyx_def[16];
#pragma section last_afm
/* Definition LAST-AFM created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __last_afm
/*           This field describes the last on-line file maintenance     !00577C04 */
/*           update applied to this record.  This includes the user     !00577C05 */
/*           who did the update, the time at which it was done, the     !00577C06 */
/*           type of update, and the terminal originating the update    !00577C07 */
/*           transaction.                                               !00577C08 */
typedef struct __last_afm
{
/*          This structure contains the pertinent data regarding any    !00577C0C */
/*          AFM file maintenance activity.                              !00577C0D */
   struct
   {
/*           Julian timestamp (date/time) of the last AFM function      !00577C0H */
/*           performed to the data record.                              !00577C0I */
      long long                       afm_ts;
/*           Record maintenance function:                               !00577C0M */
/*                                                                      !00577C0N */
/*                0 - Add                                               !00577C0O */
/*                1 - Image "before" modify                             !00577C0P */
/*                2 - Image "after" modify                              !00577C0Q */
/*                3 - Purge                                             !00577C0R */
      short                           updt_typ;
/*           Only used by Pathway servers.  Non-Pathway servers         !00577C0V */
/*           default USER-ID to zeros.                                  !00577C0W */
      struct
      {
/*             The group number of the operator that performed the      !00262C0Z */
/*             last file maintenance application.  This value is        !00262C10 */
/*             taken from the information given when the operator       !00262C11 */
/*             last logged on to BASE24.                                !00262C12 */
         short                           grp_num;
/*             The user number of the operator that performed the       !00262C16 */
/*             last file maintenance application.  This value is        !00262C17 */
/*             taken from the information given when the operator       !00262C18 */
/*             last logged on to BASE24.                                !00262C19 */
         __int32_t                       user_num;
      } user_id;
/*           This field contains the terminal ID where the              !00577C10 */
/*           record maintenance occurred. Used only by Pathway          !00577C11 */
/*           servers. Non-Pathway servers default TERM-NAM              !00577C12 */
/*           field to blanks.                                           !00577C13 */
      char                            term_nam[24];
   } fm;
} last_afm_def;
#define last_afm_def_Size 40
#pragma section last_fm
/* Definition LAST-FM created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __last_fm
/*           This field describes the last on-line file maintenance    !!00585 */
/*           update applied to this record.  This includes the user    !!00586 */
/*           who did the update, the time at which it was done, the    !!00587 */
/*           type of update and the terminal originating the update    !!00588 */
/*           transaction.                                              !!00589 */
typedef struct __last_fm
{
/*                                                                     !!00593 */
/*             The date and time of the last file maintenence          !!00594 */
/*             application.                                            !!00595 */
/*                                                                     !!00596 */
   short                           fm_timestamp[3];
/*             The group number of the operator that performed the last!!00599 */
/*             file maintenance application.  This value is taken from !!00600 */
/*             the information given when the operator last logged on  !!00601 */
/*             to BASE24.                                              !!00602 */
/*                                                                     !!00603 */
   short                           fm_user_grp;
/*             The user number of the operator that performed the last !!00607 */
/*             file maintenance application.  This value is taken from !!00608 */
/*             the information given when the operator last logged on  !!00609 */
/*             to BASE24.                                              !!00610 */
/*                                                                     !!00611 */
   __int32_t                       fm_user_num;
/*                                                                     !!00614 */
/*             The type of file maintenance that was last applied to   !!00615 */
/*             the record.  Valid values are:                          !!00616 */
/*                                                                     !!00617 */
/*             A =  Add                                                !!00618 */
/*             B =  Change "before" image                              !!00619 */
/*             C =  Change "after" image                               !!00620 */
/*             D =  Delete                                             !!00621 */
/*             S =  Logon security check                               !!00622 */
/*             O =  Entry into operator functions                      !!00623 */
   char                            updt_typ;
/*                                                                     !!00628 */
/*             This field is not used.                                 !!00629 */
/*                                                                     !!00630 */
   char                            sta_num[4];
   char                            fill1;
} last_fm_def;
#define last_fm_def_Size 18
#pragma section last_tran
/* Definition LAST-TRAN created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __last_tran
/*           This field occurs in every record which is                !!00640 */
/*           updated by the on-line system to ensure                   !!00641 */
/*           against multiple or incomplete updates due to             !!00642 */
/*           process failure and restart.                              !!00643 */
typedef struct __last_tran
{
/*                                                                     !!00647 */
/*             The date and time the last transaction accessed the     !!00648 */
/*             record.                                                 !!00649 */
/*                                                                     !!00650 */
   short                           lt_timestamp[3];
/*                                                                     !!00652 */
/*             This field is zero filled.                              !!00653 */
/*                                                                     !!00654 */
   short                           nonstop_id;
/*                                                                     !!00656 */
/*             The number of the last process to access this record,   !!00657 */
/*             as assigned in the Network Environment File (NEF).      !!00658 */
/*                                                                     !!00659 */
   short                           pro_num;
} last_tran_def;
#define last_tran_def_Size 10
#pragma section ln
/* Definition LN created on 10/12/2023 at 15:08 */
typedef char                            ln_def[4];
#pragma section loc
/* Definition LOC created on 10/12/2023 at 15:08 */
typedef char                            loc_def[25];
#pragma section mail_device_def
/* Definition MAIL-DEVICE-DEF created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __mail_device_def
typedef struct __mail_device_def
{
   char                            compl_cde[2];
   char                            delivery_mde;
   char                            category_nam[16];
   struct
   {
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } msg_dat;
      char                            msg_id[4];
   } txt_id;
   char                            status_flg;
   char                            filler_0[8];
} mail_device_def;
#define mail_device_def_Size 38
#pragma section mail_conf_def
/* Definition MAIL-CONF-DEF created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __mail_conf_def
typedef struct __mail_conf_def
{
   struct
   {
      char                            unsolicited_msg;
      char                            term_compl_unsolicited_msg;
      char                            term_compl_stored_msg;
      char                            timout_resp_to_term;
      char                            pos_neg_confirmations;
      char                            scroll_thru;
      char                            ofst_reset;
      char                            filler_0;
   } option_flags;
   char                            mail_pro_nam[16];
   struct
   {
      struct
      {
         char                            compl_cde[2];
         char                            delivery_mde;
         char                            category_nam[16];
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } msg_dat;
            char                            msg_id[4];
         } txt_id;
         char                            status_flg;
         char                            filler_1[8];
      } inbound;
      struct
      {
         char                            compl_cde[2];
         char                            delivery_mde;
         char                            category_nam[16];
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } msg_dat;
            char                            msg_id[4];
         } txt_id;
         char                            status_flg;
         char                            filler_2[8];
      } outbound;
   } mail_msg;
} mail_conf_def;
#define mail_conf_def_Size 100
#pragma section mbr_num
/* Definition MBR-NUM created on 10/12/2023 at 15:08 */
typedef char                            mbr_num_def[3];
#pragma section mlf_rec
/* Definition MLF-REC created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __mlf_rec
/*           Maintenance Log File record, logged to the                 !00885M07 */
/*           OMF following a record read or delete.                     !00885M08 */
typedef struct __mlf_rec
{
/*           The FIID of the switch to which the                        !00885M0C */
/*           record belongs.                                            !00885M0D */
   char                            fiid[4];
/*           The date when the record was added to the MLF.             !00885M0H */
   char                            swi_dat[6];
/*           The time when the record was added to the MLF.             !00885M0L */
   char                            swi_tim[8];
/*           The cardholder's primary account number (PAN)              !00885M0P */
/*           for card initiated transactions.                           !00885M0Q */
   char                            pan[19];
/*           The member number associated with cardholder's             !00885M0U */
/*           account number.                                            !00885M0V */
   char                            mbr_num[3];
} mlf_rec_def;
#define mlf_rec_def_Size 40
#pragma section name
/* Definition NAME created on 10/12/2023 at 15:08 */
typedef char                            name_def[22];
#pragma section pan
/* Definition PAN created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __pan
typedef struct __pan
{
   char                            num[19];
} pan_def;
#define pan_def_Size 19
#pragma section phone_num
/* Definition PHONE-NUM created on 10/12/2023 at 15:08 */
typedef char                            phone_num_def[20];
#pragma section pin
/* Definition PIN created on 10/12/2023 at 15:08 */
typedef char                            pin_def[16];
#pragma section posn
/* Definition POSN created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __posn
typedef struct __posn
{
   char                            altkey_tag[2];
   char                            altkey[74];
   char                            prikey[74];
} posn_def;
#define posn_def_Size 150
#pragma section postal_cde
/* Definition POSTAL-CDE created on 10/12/2023 at 15:08 */
typedef char                            postal_cde_def[10];
#pragma section prfl
/* Definition PRFL created on 10/12/2023 at 15:08 */
/*           This defines a general profile.  A profile is an           !00949C05 */
/*           identifier used to define a specific configuration         !00949C06 */
/*           (e.g., transaction profile, retailer profile).  Left       !00949C07 */
/*           justified, blank filled, no embedded spaces.               !00949C08 */
typedef char                            prfl_def[16];
#pragma section proc_cde
/* Definition PROC-CDE created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __proc_cde
/*          This field defines the Processing Codes, as defined in      !00949C0M */
/*          ISO 8583 (1993) - Financial Transaction Card Originated     !00949C0N */
/*          Messages - Interchange Message Specification.  The          !00949C0O */
/*          Processing Code consists of the Transaction Code, the       !00949C0P */
/*          From Account Type and the To Account Type which             !00949C0Q */
/*          describes the effect of a transaction on the customer       !00949C0R */
/*          account and the accounts affected.                          !00949C0S */
/*                                                                      !00949C0T */
/*          TXN-CDE describes the specific transaction.                 !00949C0U */
/*                                                                      !00949C0V */
/*          ACCT1-TYP describes the Account Type affected for Debits    !00949C0W */
/*          and Inquiries, and the "from" Account for Transfers.        !00949C0X */
/*                                                                      !00949C0Y */
/*          ACCT2-TYP describes the Account Type affected for Credits   !00949C0Z */
/*          and the "to" Account for Transfers.                         !00949C10 */
typedef struct __proc_cde
{
   char                            txn_cde[2];
/*          From account type.                                          !00949C16 */
   char                            acct1_typ[2];
/*          To account type.                                            !00949C1A */
   char                            acct2_typ[2];
} proc_cde_def;
#define proc_cde_def_Size 6
#pragma section prod_id
/* Definition PROD-ID created on 10/12/2023 at 15:08 */
typedef char                            prod_id_def[2];
#pragma section prod_ind
/* Definition PROD-IND created on 10/12/2023 at 15:08 */
typedef char                            prod_ind_def[32];
#pragma section prod_ind_ext
/* Definition PROD-IND-EXT created on 10/12/2023 at 15:08 */
typedef char                            prod_ind_ext_def[256];
#pragma section prod_name
/* Definition PROD-NAME created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __prod_name
typedef struct __prod_name
{
   char                            name[4];
} prod_name_def;
#define prod_name_def_Size 4
#pragma section regn
/* Definition REGN created on 10/12/2023 at 15:08 */
typedef char                            regn_def[4];
#pragma section resp_cde
/* Definition RESP-CDE created on 10/12/2023 at 15:08 */
typedef char                            resp_cde_def[3];
#pragma section sdcb
/* Definition SDCB created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __sdcb
typedef struct __sdcb
{
   char                            pro_name[16];
   short                           sec_dev_typ;
   short                           access_typ;
   long long                       reinstate_tim;
   short                           dev_idx;
   short                           dev_cnt;
   struct
   {
      union
      {
         char                            dnames[24];
         short                           dname[12];
      } u_dnames;
      short                           filenum;
      union
      {
         char                            sec_dev_subtyp[2];
         short                           km0_version;
      } u_sec_dev_subtyp;
      short                           fail_cnt;
      long long                       nxt_reinstate_timestamp;
   } dev[20];
   short                           notify_interval;
   __int32_t                       timeout;
   short                           monitor_threshold;
   short                           pri_dev_rqst_cnt;
   short                           secutils_seg_id;
   __int32_t                       secutils_seg_addr;
} sdcb_def;
#define sdcb_def_Size 808
#pragma section seg_lgth
/* Definition SEG-LGTH created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __seg_lgth
typedef struct __seg_lgth
{
   short                           lgth;
   struct
   {
      short                           id;
      __int32_t                       b24_rsrvd;
   } seg_data;
} seg_lgth_def;
#define seg_lgth_def_Size 8
#pragma section segx_lgth
/* Definition SEGX-LGTH created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __segx_lgth
typedef struct __segx_lgth
{
   char                            lgth[4];
   struct
   {
      char                            id[4];
      char                            b24_rsrvd[8];
   } seg_data;
} segx_lgth_def;
#define segx_lgth_def_Size 16
#pragma section set_rec1
/* Definition SET-REC1 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_rec1
typedef struct __set_rec1
{
   char                            typ[4];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            prod_id[2];
   char                            rel_num[2];
   short                           dpc_num;
   short                           term_tim_ofst;
   char                            term_id[16];
   struct
   {
      char                            rttn[11];
      struct
      {
         char                            acct_num[19];
      } acct;
      char                            nam[40];
      char                            user_fld1;
   } retl;
   char                            setl_typ;
   char                            bal_flg;
   char                            user_fld2;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   char                            tran_tim[6];
   char                            ob_flg;
   char                            ach_comp_id[10];
   char                            billing_info[10];
   char                            auth_crncy_cde[3];
   char                            auth_conv_rate[8];
   char                            setl_crncy_cde[3];
   char                            setl_conv_rate[8];
} set_rec1_def;
#define set_rec1_def_Size 163
#pragma section set_rec2
/* Definition SET-REC2 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_rec2
typedef struct __set_rec2
{
   struct
   {
      struct
      {
         short                           db_cnt;
         long long                       db;
         short                           cr_cnt;
         long long                       cr;
         short                           adj_cnt;
         long long                       adj;
      } dc_tot;
      struct
      {
         short                           db_cnt;
         long long                       db;
         short                           cr_cnt;
         long long                       cr;
         short                           adj_cnt;
         long long                       adj;
      } tot;
      struct
      {
         short                           db_cnt;
         long long                       db;
         short                           cr_cnt;
         long long                       cr;
         short                           adj_cnt;
         long long                       adj;
      } cn_dc_tot;
      struct
      {
         short                           db_cnt;
         long long                       db;
         short                           cr_cnt;
         long long                       cr;
         short                           adj_cnt;
         long long                       adj;
      } cn_tot;
   } stl;
} set_rec2_def;
#define set_rec2_def_Size 120
#pragma section set_rec3
/* Definition SET-REC3 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_rec3
typedef struct __set_rec3
{
   short                           num_srv;
   struct
   {
      char                            typ[2];
      short                           db_cnt;
      long long                       db;
      short                           cr_cnt;
      long long                       cr;
      short                           adj_cnt;
      long long                       adj;
   } srv[17];
} set_rec3_def;
#define set_rec3_def_Size 546
#pragma section set_rec4
/* Definition SET-REC4 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_rec4
typedef struct __set_rec4
{
   struct
   {
      char                            typ[2];
      short                           db_cnt;
      long long                       db;
      short                           cr_cnt;
      long long                       cr;
      short                           adj_cnt;
      long long                       adj;
   } srv[13];
} set_rec4_def;
#define set_rec4_def_Size 416
#pragma section set_rec5
/* Definition SET-REC5 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_rec5
typedef struct __set_rec5
{
   short                           db_cnt;
   long long                       db_amt;
   short                           cr_cnt;
   long long                       cr_amt;
   short                           adj_cnt;
   long long                       adj_amt;
   short                           cash_cnt;
   long long                       cash_amt;
   short                           chk_cnt;
   long long                       chk_amt;
} set_rec5_def;
#define set_rec5_def_Size 50
#pragma section set_rec6
/* Definition SET-REC6 created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __set_rec6
typedef struct __set_rec6
{
   char                            totals_typ;
   char                            setl_id[25];
   char                            card_typ[2];
   struct
   {
      __int32_t                       db_cnt;
      long long                       db;
      __int32_t                       cr_cnt;
      long long                       cr;
      __int32_t                       adj_cnt;
      long long                       adj;
   } dc_tot;
   struct
   {
      __int32_t                       db_cnt;
      long long                       db;
      __int32_t                       cr_cnt;
      long long                       cr;
      __int32_t                       adj_cnt;
      long long                       adj;
   } tot;
   char                            filler_0[20];
} set_rec6_def;
#define set_rec6_def_Size 120
#pragma section set_rec7
/* Definition SET-REC7 created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __set_rec7
typedef struct __set_rec7
{
   char                            totals_typ;
   char                            setl_id[25];
   short                           num_srv;
   struct
   {
      char                            typ[2];
      __int32_t                       db_cnt;
      long long                       db;
      __int32_t                       cr_cnt;
      long long                       cr;
      __int32_t                       adj_cnt;
      long long                       adj;
   } srv[13];
   char                            filler_0[29];
} set_rec7_def;
#define set_rec7_def_Size 551
#pragma section fset_recx1
/* Definition FSET-RECX1 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __fset_recx1
typedef struct __fset_recx1
{
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            term_id[16];
   char                            setl_typ;
   char                            bal_flg;
   char                            batch_num[3];
   char                            shift_num[3];
   char                            day_num[3];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   char                            tran_tim[6];
   char                            ob_flg;
   char                            srv_tot[18];
} fset_recx1_def;
#define fset_recx1_def_Size 64
#pragma section set_recx1a
/* Definition SET-RECX1A created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_recx1a
typedef struct __set_recx1a
{
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            dpc_num[4];
   char                            term_id[16];
   struct
   {
      char                            rttn[11];
      char                            acct[28];
      char                            nam[40];
   } retl;
   char                            setl_typ;
   char                            bal_flg;
   char                            batch_num[3];
   char                            shift_num[3];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   char                            tran_tim[6];
   char                            ob_flg;
   char                            ach_comp_id[10];
   char                            billing_info[10];
   char                            auth_crncy_cde[3];
   char                            auth_conv_rate[8];
   char                            setl_crncy_cde[3];
   char                            setl_conv_rate[8];
} set_recx1a_def;
#define set_recx1a_def_Size 168
#pragma section set_recx1b
/* Definition SET-RECX1B created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_recx1b
typedef struct __set_recx1b
{
   struct
   {
      struct
      {
         char                            db_cnt[4];
         char                            db[18];
         char                            cr_cnt[4];
         char                            cr[18];
         char                            adj_cnt[4];
         char                            adj[18];
      } dc_tot;
      struct
      {
         char                            db_cnt[4];
         char                            db[18];
         char                            cr_cnt[4];
         char                            cr[18];
         char                            adj_cnt[4];
         char                            adj[18];
      } tot;
      struct
      {
         char                            db_cnt[4];
         char                            db[18];
         char                            cr_cnt[4];
         char                            cr[18];
         char                            adj_cnt[4];
         char                            adj[18];
      } cn_dc_tot;
      struct
      {
         char                            db_cnt[4];
         char                            db[18];
         char                            cr_cnt[4];
         char                            cr[18];
         char                            adj_cnt[4];
         char                            adj[18];
      } cn_tot;
   } stl;
} set_recx1b_def;
#define set_recx1b_def_Size 264
#pragma section set_recx2
/* Definition SET-RECX2 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_recx2
typedef struct __set_recx2
{
   char                            num_srv[4];
   struct
   {
      char                            typ[2];
      char                            db_cnt[4];
      char                            db[18];
      char                            cr_cnt[4];
      char                            cr[18];
      char                            adj_cnt[4];
      char                            adj[18];
   } srv[10];
} set_recx2_def;
#define set_recx2_def_Size 684
#pragma section set_recx5
/* Definition SET-RECX5 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __set_recx5
typedef struct __set_recx5
{
   char                            db_cnt[4];
   char                            db_amt[18];
   char                            cr_cnt[4];
   char                            cr_amt[18];
   char                            adj_cnt[4];
   char                            adj_amt[18];
   char                            cash_cnt[4];
   char                            cash_amt[18];
   char                            chk_cnt[4];
   char                            chk_amt[18];
} set_recx5_def;
#define set_recx5_def_Size 110
#pragma section ssn
/* Definition SSN created on 10/12/2023 at 15:08 */
typedef char                            ssn_def[9];
#pragma section sym_name
/* Definition SYM-NAME created on 10/12/2023 at 15:08 */
typedef char                            sym_name_def[16];
#pragma section tdf_prikey
/* Definition TDF-PRIKEY created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __tdf_prikey
typedef struct __tdf_prikey
{
   char                            id[16];
} tdf_prikey_def;
#define tdf_prikey_def_Size 16
#pragma section tim
/* Definition TIM created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __tim
typedef struct __tim
{
   char                            hh[2];
   char                            mm[2];
   char                            ss[2];
   char                            tt[2];
} tim_def;
#define tim_def_Size 8
#pragma section tlf_base_tkn
/* Definition TLF-BASE-TKN created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlf_base_tkn
/*             TLF Token - Binary format                                !01744C05 */
/*                                                                      !01744C06 */
/*             The TLF Token contains the transaction log file          !01744C07 */
/*             name, the RBA, and alternate key data of the             !01744C08 */
/*             record written to the transaction log file.  This        !01744C09 */
/*             data is used by device handlers and AUTH to build        !01744C0A */
/*             a reversal message when the last transaction data        !01744C0B */
/*             is no longer known by the device handler.                !01744C0C */
/*             The fields in the TLF Token are described below.         !01744C0E */
typedef struct __tlf_base_tkn
{
/*             The Relative Byte Address (RBA) of the record in         !01744C0I */
/*             a transaction log file where the transaction was         !01744C0J */
/*             logged. For format 2 files, the RBA is 64 bits. For      !01744F02 */
/*             format 1 files, the RBA is 32 bits.                      !01744F03 */
   union
   {
      long long                       rba_64bit;
      __int32_t                       rba[2];
   } u_rba_64bit;
/*             The name of the Transaction Log File where               !01744C0O */
/*             the transaction was logged.                              !01744C0P */
   char                            tlf_nam[35];
/*             The token data retrieval option.  When the device        !01744C0T */
/*             handler is processing a reversal, this field indicates   !01744C0U */
/*             where the token data should be retrieved.  Valid values  !01744C0V */
/*             are:                                                     !01744C0W */
/*                                                                      !01744C0X */
/*             0 = no tokens included in the reversal message.          !01744C0Y */
/*             1 = TDF. Token data retrieved from the terminal data     !01744C0Z */
/*                      file, and appended to the reversal message.     !01744C10 */
/*             2 = TLF. Token data retrieved from the Transaction Log   !01744C11 */
/*                      File, and appended to the reversal message.     !01744C12 */
   char                            tkn_retrv_opt;
/*             The alternate key data of the record logged to a         !01744C16 */
/*             transaction log file.                                    !01744C17 */
   union
   {
      char                            key_data[30];
/*             The alternate key data used by BASE24-atm.               !01744C1B */
      struct
      {
/*             The values in the following fields identify the card     !01744C1F */
/*             issuer and cardholder associated with the transaction.   !01744C1G */
         struct
         {
/*             The logical network associated with the card issuer.     !01744C1K */
            char                            ln[4];
/*             The FIID of the card issuer.                             !01744C1O */
            char                            fiid[4];
/*             The cardholder's Primary Account Number (PAN) for        !01744C1S */
/*             card initiated transactions.                             !01744C1T */
            char                            pan[19];
/*             The member number associated with the cardholder's       !01744C1X */
/*             account number.                                          !01744C1Y */
            char                            mbr_num[3];
         } crd;
      } atm_key;
/*             The alternate key data used by BASE24-pos.               !01744C22 */
      struct
      {
/*             The values in the following fields identify the card     !01744C26 */
/*             issuer and cardholder associated with the transaction.   !01744C27 */
         struct
         {
/*             The logical network associated with the card issuer.     !01744C2B */
            char                            ln[4];
/*             The FIID of the card issuer.                             !01744C2F */
            char                            fiid[4];
/*             The values in the following fields identify the card     !01744C2J */
/*             used in the transaction.                                 !01744C2K */
            struct
            {
/*             The card number identifying the card used in the         !01744C2O */
/*             transaction.                                             !01744C2P */
               char                            crd_num[19];
/*             The member number associated with the card used in the   !01744C2T */
/*             transaction.                                             !01744C2U */
               char                            mbr_num[3];
            } card;
         } crd;
      } pos_key;
   } u_key_data;
/*             This flag indicator whether the transaction log file     !01744F07 */
/*             is a format 1 or format 2 file.                          !01744F08 */
   short                           file_frmt;
/*             Reserved for future use.                                 !01744F0D */
   char                            user_fld1[10];
} tlf_base_tkn_def;
#define tlf_base_tkn_def_Size 86
#pragma section tlf_base_tknx
/* Definition TLF-BASE-TKNX created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __tlf_base_tknx
/*             TLF Token - ASCII format                                 !01744C3A */
/*                                                                      !01744C3B */
/*             Please refer to the binary definition of the             !01744C3C */
/*             TLF Token for field descriptions.                        !01744C3D */
typedef struct __tlf_base_tknx
{
   char                            rba[19];
   char                            tlf_nam[35];
   char                            tkn_retrv_opt;
   union
   {
      char                            key_data[30];
      struct
      {
         struct
         {
            char                            ln[4];
            char                            fiid[4];
            char                            pan[19];
            char                            mbr_num[3];
         } crd;
      } atm_key;
      struct
      {
         struct
         {
            char                            ln[4];
            char                            fiid[4];
            struct
            {
               char                            crd_num[19];
               char                            mbr_num[3];
            } card;
         } crd;
      } pos_key;
   } u_key_data;
   char                            file_frmt[5];
   char                            user_fld1[10];
} tlf_base_tknx_def;
#define tlf_base_tknx_def_Size 100
#pragma section tlf_tkn_dev_data_part_1
/* Definition TLF-TKN-DEV-DATA-PART-1 created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlf_tkn_dev_data_part_1
/*             This is the data from the TLF Token that is              !01744F0Y */
/*             saved in the device dependent data area of the           !01744F0Z */
/*             terminal data files.                                     !01744F10 */
typedef struct __tlf_tkn_dev_data_part_1
{
/*             The Relative Byte Address (RBA) of the record in         !01744F14 */
/*             a transaction log file, a format 1 file, where           !01744F15 */
/*             the transaction was logged.                              !01744F16 */
   __int32_t                       rba;
/*             The name of the Transaction Log File where               !01744F1A */
/*             the transaction was logged.                              !01744F1B */
   char                            tlf_nam[35];
/*             The token data retrieval option.  When the device        !01744F1F */
/*             handler is processing a reversal, this field indicates   !01744F1G */
/*             where the token data should be retrieved.  Valid values  !01744F1H */
/*             are:                                                     !01744F1I */
/*                                                                      !01744F1J */
/*             0 = no tokens included in the reversal message.          !01744F1K */
/*             1 = TDF. Token data retrieved from the terminal data     !01744F1L */
/*                      file, and appended to the reversal message.     !01744F1M */
/*             2 = TLF. Token data retrieved from the Transaction Log   !01744F1N */
/*                      File, and appended to the reversal message.     !01744F1O */
   char                            tkn_retrv_opt;
/*             The alternate key data of the record logged to a         !01744F1S */
/*             transaction log file.                                    !01744F1T */
   union
   {
      char                            key_data[30];
/*             The alternate key data used by BASE24-atm.               !01744F1X */
      struct
      {
/*             The values in the following fields identify the card     !01744F21 */
/*             issuer and cardholder associated with the transaction.   !01744F22 */
         struct
         {
/*             The logical network associated with the card issuer.     !01744F26 */
            char                            ln[4];
/*             The FIID of the card issuer.                             !01744F2A */
            char                            fiid[4];
/*             The cardholder's Primary Account Number (PAN) for        !01744F2E */
/*             card initiated transactions.                             !01744F2F */
            char                            pan[19];
/*             The member number associated with the cardholder's       !01744F2J */
/*             account number.                                          !01744F2K */
            char                            mbr_num[3];
         } crd;
      } atm_key;
/*             The alternate key data used by BASE24-pos.               !01744F2O */
      struct
      {
/*             The values in the following fields identify the card     !01744F2S */
/*             issuer and cardholder associated with the transaction.   !01744F2T */
         struct
         {
/*             The logical network associated with the card issuer.     !01744F2X */
            char                            ln[4];
/*             The FIID of the card issuer.                             !01744F31 */
            char                            fiid[4];
/*             The values in the following fields identify the card     !01744F35 */
/*             used in the transaction.                                 !01744F36 */
            struct
            {
/*             The card number identifying the card used in the         !01744F3A */
/*             transaction.                                             !01744F3B */
               char                            crd_num[19];
/*             The member number associated with the card used in the   !01744F3F */
/*             transaction.                                             !01744F3G */
               char                            mbr_num[3];
            } card;
         } crd;
      } pos_key;
   } u_key_data;
} tlf_tkn_dev_data_part_1_def;
#define tlf_tkn_dev_data_part_1_def_Size 70
#pragma section tlf_tkn_dev_data_part_2
/* Definition TLF-TKN-DEV-DATA-PART-2 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __tlf_tkn_dev_data_part_2
/*             Format 2 files were introduced after format 1            !01744F3U */
/*             files, and therefore this is the additional data         !01744F3V */
/*             that is required to be saved in the device dependent     !01744F3W */
/*             data area of the terminal data files.                    !01744F3X */
typedef struct __tlf_tkn_dev_data_part_2
{
/*             The Relative Byte Address (RBA) of the record in         !01744F41 */
/*             a transaction log file, a format 2 file, where the       !01744F42 */
/*             transaction was logged.                                  !01744F43 */
   long long                       rba_frmt_2;
/*             This flag indicator whether the transaction log file     !01744F47 */
/*             is a format 1 or format 2 file.                          !01744F48 */
   short                           file_frmt;
} tlf_tkn_dev_data_part_2_def;
#define tlf_tkn_dev_data_part_2_def_Size 10
#pragma section track2_ext
/* Definition TRACK2-EXT created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __track2_ext
typedef struct __track2_ext
{
   char                            lgth[2];
   char                            t2data[37];
} track2_ext_def;
#define track2_ext_def_Size 39
#pragma section track2_inter
/* Definition TRACK2-INTER created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __track2_inter
typedef struct __track2_inter
{
   char                            lgth[2];
   char                            t2data[40];
} track2_inter_def;
#define track2_inter_def_Size 42
#pragma section track3
/* Definition TRACK3 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __track3
typedef struct __track3
{
   char                            lgth[3];
   char                            t3data[104];
} track3_def;
#define track3_def_Size 107
#pragma section user_data
/* Definition USER-DATA created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __user_data
/*                                                                     !!01848 */
/*              User-defined information that BASE24-pos can carry in  !!01849 */
/*              its internal message but does not recognize and does   !!01850 */
/*              not use for processing.                                !!01851 */
/*                                                                     !!01852 */
/*              This user data is available for all messages, but is   !!01853 */
/*              appended to the message only if the DATA-FLAG field is !!01854 */
/*              set to 1.                                              !!01855 */
/*                                                                     !!01856 */
typedef struct __user_data
{
/*                                                                     !!01859 */
/*              The length of the variable information in the USER-    !!01860 */
/*              DATA.INFO field.                                       !!01861 */
/*                                                                     !!01862 */
   short                           len;
/*                                                                     !!01865 */
/*              User-defined information that BASE24 can carry in its  !!01866 */
/*              internal message.                                      !!01867 */
/*                                                                     !!01868 */
   char                            info[200];
} user_data_def;
#define user_data_def_Size 202
#pragma section uid
/* Definition UID created on 10/12/2023 at 15:08 */
typedef char                            uid_def[16];
#pragma section ver
/* Definition VER created on 10/12/2023 at 15:08 */
/*           This field defines a version which is associated with      !01882C07 */
/*           a file (unsegmented) or segment.                           !01882C08 */
typedef short                           ver_def;
#pragma section visa1
/* Definition VISA1 created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __visa1
typedef struct __visa1
{
   struct
   {
      short                           batch_num;
      short                           num_tran_in_rec;
      struct
      {
         char                            seq_num[6];
         long long                       amt;
      } tran[10];
   } visa_1;
} visa1_def;
#define visa1_def_Size 144
#pragma section preauth
/* Definition PREAUTH created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __preauth
/*             The following fields make up the Preauthorization hold  !!01902 */
/*             segment.                                                !!01903 */
typedef struct __preauth
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
/*             The following fields contain preauthorized hold amount  !!01909 */
/*             information created by BASE24-pos.  Please note that    !!01910 */
/*             even though the number of occurrences are fixed, the    !!01911 */
/*             information within this segment is stored as though it  !!01912 */
/*             were variable length.                                   !!01913 */
/*                                                                     !!01914 */
   struct
   {
/*                                                                     !!01917 */
/*             The sequence number of the preauthorized hold.          !!01918 */
/*                                                                     !!01919 */
      char                            seq_num[12];
/*                                                                     !!01922 */
/*             The amount, in whole and fractional currency units      !!01923 */
/*             (e.g., dollars and cents), of the preauthorized hold.   !!01924 */
/*                                                                     !!01925 */
      long long                       hold_amt;
/*                                                                     !!01928 */
/*             The date and time the hold amount is cleared and no     !!01929 */
/*             longer taken into consideration during Authorization    !!01930 */
/*             processing.                                             !!01931 */
/*                                                                     !!01932 */
      short                           pr_timestamp[3];
/*                                                                     !!01935 */
/*             The type of account with the funds on hold.  It is used !!01936 */
/*             to uniquely associate the completion with the proper    !!01937 */
/*             preauthorized hold request.  Values are:                !!01938 */
/*                                                                     !!01939 */
/*             01-09 = Checking                                        !!01940 */
/*             11-19 = Savings                                         !!01941 */
/*             31-39 = Credit                                          !!01942 */
/*                                                                     !!01943 */
/*                                                                     !!01944 */
      short                           acct_typ;
/*                                                                     !!01947 */
/*             The account number (left-justified, blank-filled)       !!01948 */
/*             identifying the application account with the funds on   !!01949 */
/*             hold.  BASE24 currently supports a 19-digit maximum     !!01950 */
/*             account number length.                                  !!01951 */
/*                                                                     !!01952 */
      struct
      {
         char                            acct_num[19];
      } acct;
/*                                                                     !!01954 */
/*             This field is not used.                                 !!01955 */
/*                                                                     !!01956 */
      char                            user_fld1;
   } pre_auth[10];
} preauth_def;
#define preauth_def_Size 488
#pragma section enhnc_preauth
/* Definition ENHNC-PREAUTH created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __enhnc_preauth
/*             The following fields make up the Enhanced Pre-          !!01959J07 */
/*             Authorization Holds segment.                            !!01959J08 */
typedef struct __enhnc_preauth
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
/*             The following fields contain preauthorized hold amount  !!01959J0E */
/*             information created by BASE24-pos.  Please note that    !!01959J0F */
/*             even though the number of occurrences are fixed, the    !!01959J0G */
/*             information within this segment is stored as though it  !!01959J0H */
/*             were variable length.                                   !!01959J0I */
/*                                                                     !!01959J0J */
   struct
   {
/*                                                                     !!01959J0M */
/*             The sequence number of the preauthorized hold.          !!01959J0N */
/*                                                                     !!01959J0O */
      char                            seq_num[12];
/*                                                                     !!01959J0R */
/*             The amount, in whole and fractional currency units      !!01959J0S */
/*             (e.g., dollars and cents), of the preauthorized hold.   !!01959J0T */
/*                                                                     !!01959J0U */
      long long                       hold_amt;
/*                                                                     !!01959J0X */
/*             The date and time the hold amount is cleared and no     !!01959J0Y */
/*             longer taken into consideration during Authorization    !!01959J0Z */
/*             processing.                                             !!01959J0a */
/*                                                                     !!01959J0b */
      short                           pr_timestamp[3];
/*                                                                     !!01959J0e */
/*             The approval code used for preauthorization match.      !!01959J0f */
/*                                                                     !!01959J0g */
      char                            apprv_cde[8];
/*                                                                     !!01959J0j */
/*             The issued date and time generated at the terminal.     !!01959J0k */
/*                                                                     !!01959J0l */
      short                           pr_txn_timestamp[3];
/*                                                                     !!01959J0o */
/*             The terminal id which issued the preauthorized hold.    !!01959J0p */
/*                                                                     !!01959J0q */
      char                            term_id[16];
/*                                                                     !!01959J0t */
/*             The type of account with the funds on hold.             !!01959J0u */
/*             Values are:                                             !!01959J0v */
/*                                                                     !!01959J0w */
/*             01-09 = Checking                                        !!01959J0x */
/*             11-19 = Savings                                         !!01959J0y */
/*             31-39 = Credit                                          !!01959J0z */
/*                                                                     !!01959J10 */
/*                                                                     !!01959J11 */
      short                           acct_typ;
/*                                                                     !!01959J14 */
/*             The account number (left-justified, blank-filled)       !!01959J15 */
/*             identifying the application account with the funds on   !!01959J16 */
/*             hold.  BASE24 currently supports a 19-digit maximum     !!01959J17 */
/*             account number length.                                  !!01959J18 */
/*                                                                     !!01959J19 */
      struct
      {
         char                            acct_num[19];
      } acct;
/*                                                                     !!01959J1C */
/*             The hold flag indicates whether this is an outstanding  !!01959J1D */
/*             hold or a timed-out hold.                               !!01959J1E */
/*                                                                     !!01959J1F */
      char                            hold_flg;
   } enhnc_pre_auth[10];
} enhnc_preauth_def;
#define enhnc_preauth_def_Size 788
#pragma section mail_addr
/* Definition MAIL-ADDR created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __mail_addr
typedef struct __mail_addr
{
   char                            name[22];
   char                            loc[25];
   char                            city[13];
   char                            st[3];
   char                            postal_cde[10];
   char                            cntry[2];
} mail_addr_def;
#define mail_addr_def_Size 75
#pragma section mail_param
/* Definition MAIL-PARAM created on 10/12/2023 at 15:08 */
#pragma fieldalign shared2 __mail_param
typedef struct __mail_param
{
   char                            fiid[4];
   char                            dpc_num[4];
   char                            host_pro_nam[16];
   char                            orig_id[8];
   char                            dev_seq_num[8];
   char                            trace_num[6];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   char                            rqst_typ[2];
   char                            lookup_typ;
   char                            scroll_thru;
   char                            timstp[4];
   struct
   {
      char                            delivery_dat[6];
      char                            delivery_tim[4];
   } certify_stmp;
   char                            msg_source_nam[16];
   char                            msg_source_typ;
   char                            loc_nam[16];
   char                            loc_typ;
   char                            to_category[16];
   struct
   {
      char                            dat[6];
      char                            tim[4];
   } exp_stmp;
   char                            delivery_stat;
   char                            resp_req;
   char                            broadcast_nam[16];
   char                            invoice_num[5];
   struct
   {
      char                            txt_lines[2];
      char                            txt[11][40];
   } mail_msg;
} mail_param_def;
#define mail_param_def_Size 603
#pragma section brcb
/* Definition BRCB created on 10/12/2023 at 15:08 */
#include <tnsint.h>
#pragma fieldalign shared2 __brcb
typedef struct __brcb
{
/*                                                                     !!02154 */
/*           The file number given to the specified file when          !!02155 */
/*           it was opened for structured I/O.                         !!02156 */
/*                                                                     !!02157 */
   short                           structured_fnum;
/*           This field indicates whether the file is format 1 or       !02160F01 */
/*           format 2.  Valid values are:                               !02160F02 */
/*                                                                      !02160F03 */
/*           1 - file format 1                                          !02160F04 */
/*           2 - file format 2                                          !02160F05 */
   short                           file_frmt;
/*                                                                     !!02161 */
/*           The read type indicator of the given file.                !!02162 */
/*           Valid values are:                                         !!02163 */
/*           0 = unstructured reads                                     !02163F01 */
/*           1 = structured reads                                       !02163F02 */
/*                                                                      !02163H01 */
/*                                                                     !!02167 */
   char                            read_type;
/*           This field contains whether the calling application       !!02171G01 */
/*           wants to read past the initial EOF.                        !02171G02 */
   char                            read_past_initial_eof;
/*           This field indicates that the application wants to read    !02171H01 */
/*           past the initial EOF with unstructured reads, and the      !02171H02 */
/*           application determines whether the data past the initial   !02171H03 */
/*           EOF is valid. E.g., the extract process performs this      !02171H04 */
/*           validation on re-extracts.                                 !02171H05 */
   short                           appl_data_validation;
/*           The number of bytes of data to read on the                !!02172 */
/*           the bulk read operation.                                  !!02173 */
/*                                                                     !!02174 */
   short                           read_cnt;
/*                                                                     !!02178 */
/*           The number of bytes of data read on the                   !!02179 */
/*           bulk read operation.                                      !!02180 */
/*                                                                     !!02181 */
   __int32_t                       cnt_read;
/*                                                                     !!02185 */
/*           The Relative Byte Address of the beginning of the         !!02186 */
/*           current block in the bulk read data buffer.               !!02187 */
/*                                                                     !!02188 */
   union
   {
      long long                       blk_rba;
      __int32_t                       blk_rba_frmt_1[2];
/*           The block number that bulk read is reading.  The           !02190H01 */
/*           first block number is zero.  The block number is only      !02190H02 */
/*           in the leftmost 32 bits.                                   !02190H03 */
      __int32_t                       blk_num[2];
/*           The record number that bulk read is reading.  The          !02190H08 */
/*           first record number is zero.  The record number is only    !02190H09 */
/*           in the rightmost 32 bits.                                  !02190H0A */
      __int32_t                       rec_num[2];
   } u_blk_rba;
/*                                                                     !!02192 */
/*           The Relative Byte Address of the position in the          !!02193 */
/*           given file where the next bulk read should begin at.      !!02194 */
/*                                                                     !!02195 */
   union
   {
      long long                       nxt_read_rba;
      __int32_t                       nxt_read_rba_frmt_1[2];
/*           The block number where the next bulk read should begin.    !02197H01 */
/*           The block number is only in the leftmost 32 bits.          !02197H02 */
      __int32_t                       blk_num_nxt[2];
/*           The record number where the next bulk read should begin.   !02197H07 */
/*           The record number is only in the rightmost 32 bits.        !02197H08 */
      __int32_t                       rec_num_nxt[2];
   } u_nxt_read_rba;
/*                                                                     !!02199 */
/*           The block size of the given file                          !!02200 */
/*                                                                     !!02201 */
   short                           blk_size;
/*                                                                     !!02205 */
/*           The byte offset from the beginning of the bulk read       !!02206 */
/*           buffer to the start of the block currently being          !!02207 */
/*           processed                                                 !!02208 */
/*                                                                     !!02209 */
   __int32_t                       blk_byte_ofst;
/*                                                                     !!02213 */
/*           The count of the number of records or bytes within the    !!02214 */
/*           block that is currently being processed that have been    !!02215 */
/*           processed.  This field will be a record count in the      !!02216 */
/*           case of entry seqeunced files and a byte count in the     !!02217 */
/*           case of unstructured files.                               !!02218 */
/*                                                                     !!02219 */
   short                           blk_rec_cnt;
/*                                                                     !!02223 */
/*           Flag used to indicate if the initial bulk read operation  !!02224 */
/*           should begin at the beginning of the given file or at     !!02225 */
/*           the position specified by the value specified in the      !!02226 */
/*           NXT-READ-RBA field and the BLK-REC-CNT field.  If this    !!02227 */
/*           flag is set to FALSE, then the bulk read will begin at    !!02228 */
/*           at the beginning of the file.  If this flag is set to     !!02229 */
/*           TRUE, then the bulk read will begin with the record       !!02230 */
/*           specified in the NXT-READ-RBA and BLK-REC-CNT fields.     !!02231 */
/*                                                                     !!02232 */
   short                           posn_flg;
/*           THE EOF pointer is returned by a call to FILE_GETINFO_     !02235F02 */
/*           using STRUCTURED-FNUM as the file number.                  !02235F03 */
   long long                       eof_ptr;
/*                                                                     !!02250 */
/*           The total byte offset into the given file of the current  !!02251 */
/*           file block position.                                      !!02252 */
/*           For format 2 files, the byte offset into the given file,  !!02253H01 */
/*           that is used in determining how many bytes are left to     !02253H02 */
/*           read.                                                      !02253H03 */
   long long                       file_ofst;
/*           Flag used to indicate if the previous bulk read            !02254F01 */
/*           operation encountered the end of the file.                 !02254F02 */
   short                           eof;
/*                                                                     !!02261 */
/*           For partitioned files, the number of the file             !!02262 */
/*           partition currently being processed.                      !!02263 */
/*                                                                     !!02264 */
   short                           part_num;
/*                                                                     !!02266 */
/*           For partitioned files, the number of partitions           !!02267 */
/*           defined for the file.                                     !!02268 */
/*                                                                     !!02269 */
   short                           num_parts;
/*                                                                     !!02271 */
/*           For partitioned files, the file number associated         !!02272 */
/*           with the open of each of the file's defined               !!02273 */
/*           partitions.                                               !!02274 */
/*                                                                     !!02275 */
   short                           part_fnum[16];
/*           This field contains the number of blocks in this           !02278H01 */
/*           partition based on the partition's EOF value.              !02278H02 */
   __int32_t                       part_num_of_blks[16];
/*           This field contains the length of the external file        !02278F02 */
/*           name.                                                      !02278F03 */
   short                           fname_lgth;
/*           This field contains the external file name.                !02278F07 */
   char                            fname[35];
/*           This field ensures a word boundary.                        !02278F0B */
   char                            user_fld_brcb;
} brcb_def;
#define brcb_def_Size 196
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:26 */
#pragma section cust_mult_crncy_constants
/* Constant CUST-MAX-CRNCY-ENTRIES-L created on 10/18/2023 at 17:46 */
#define CUST_MAX_CRNCY_ENTRIES_L 5
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:26 */
#pragma section acct_typ_constants
/* Constant ACCT-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_NONE_D "00"
/* Constant ACCT-TYP-DDA-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_DDA_D "01"
/* Constant ACCT-TYP-SAV-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_SAV_D "11"
/* Constant ACCT-TYP-IRA-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_IRA_D "12"
/* Constant ACCT-TYP-CD-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_CD_D "13"
/* Constant ACCT-TYP-NOW-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_NOW_D "21"
/* Constant ACCT-TYP-CR-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_CR_D "31"
/* Constant ACCT-TYP-CRLINE-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_CRLINE_D "32"
/* Constant ACCT-TYP-LOAN-INSTL-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_LOAN_INSTL_D "41"
/* Constant ACCT-TYP-LOAN-MRTG-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_LOAN_MRTG_D "42"
/* Constant ACCT-TYP-LOAN-CMRCL-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_LOAN_CMRCL_D "43"
/* Constant ACCT-TYP-IDEBIT-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_IDEBIT_D "50"
/* Constant ACCT-TYP-UTIL-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_UTIL_D "50"
/* Constant ACCT-TYP-UTIL-1-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_UTIL_1_D "51"
/* Constant ACCT-TYP-UTIL-2-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_UTIL_2_D "52"
/* Constant ACCT-TYP-UTIL-3-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_UTIL_3_D "53"
/* Constant ACCT-TYP-UTIL-4-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_UTIL_4_D "54"
/* Constant ACCT-TYP-UTIL-5-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_UTIL_5_D "55"
/* Constant ACCT-TYP-OTH-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_OTH_D "60"
/* Constant ACCT-TYP-LOAD-VAL-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_LOAD_VAL_D "70"
/* Constant ACCT-TYP-GL-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_GL_D "90"
/* Constant ACCT-TYP-CSH-BNFT-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_CSH_BNFT_D "96"
/* Constant ACCT-TYP-FD-STMP-D created on 10/18/2023 at 17:46 */
#define ACCT_TYP_FD_STMP_D "98"
/* Constant CSM-ACCT-TYP-DDA-USS-D created on 10/18/2023 at 17:46 */
#define CSM_ACCT_TYP_DDA_USS_D "05"
/* Constant CSM-ACCT-TYP-SAV-USS-D created on 10/18/2023 at 17:46 */
#define CSM_ACCT_TYP_SAV_USS_D "15"
/* Constant CSM-ACCT-TYP-CR-USS-D created on 10/18/2023 at 17:46 */
#define CSM_ACCT_TYP_CR_USS_D "35"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:27 */
#pragma section acq_iss_reln_constants
/* Constant ACQ-ISS-ON-US-D created on 10/18/2023 at 17:46 */
#define ACQ_ISS_ON_US_D "O"
/* Constant ACQ-ISS-NOT-ON-US-D created on 10/18/2023 at 17:46 */
#define ACQ_ISS_NOT_ON_US_D "N"
/* Constant ACQ-ISS-FOREIGN-D created on 10/18/2023 at 17:46 */
#define ACQ_ISS_FOREIGN_D "F"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:27 */
#pragma section bits_in_var_typ_constants
/* Constant BITS-IN-STRING-L created on 10/18/2023 at 17:46 */
#define BITS_IN_STRING_L 8
/* Constant BITS-IN-INT-L created on 10/18/2023 at 17:46 */
#define BITS_IN_INT_L 16
/* Constant BITS-IN-INT32-L created on 10/18/2023 at 17:46 */
#define BITS_IN_INT32_L 32
/* Constant BITS-IN-FIXED-L created on 10/18/2023 at 17:46 */
#define BITS_IN_FIXED_L 64
#pragma section blk_size_constants
/* Constant MAX-OUTPUT-BLK-LGTH-L created on 10/18/2023 at 17:46 */
#define MAX_OUTPUT_BLK_LGTH_L 16384
#pragma section crd_typ_constants
/* Constant CRD-TYP-ADMIN-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_ADMIN_D "AD"
/* Constant CRD-TYP-AMEX-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_AMEX_D "AX"
/* Constant CRD-TYP-BUS-DEP-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_BUS_DEP_D "BD"
/* Constant CRD-TYP-PRVT-CR-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_PRVT_CR_D "C"
/* Constant CRD-TYP-CARTE-BLANCHE-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_CARTE_BLANCHE_D "CB"
/* Constant CRD-TYP-DEMO-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_DEMO_D "D"
/* Constant CRD-TYP-DINERS-CLUB-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_DINERS_CLUB_D "DC"
/* Constant CRD-TYP-DISCOVERY-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_DISCOVERY_D "DS"
/* Constant CRD-TYP-JCB-CR-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_JCB_CR_D "JB"
/* Constant CRD-TYP-MASTERCARD-CR-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_MASTERCARD_CR_D "M"
/* Constant CRD-TYP-MASTERCARD-DB-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_MASTERCARD_DB_D "MD"
/* Constant CRD-TYP-MASTERCARD-DUAL-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_MASTERCARD_DUAL_D "MM"
/* Constant CRD-TYP-PROP-DB-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_PROP_DB_D "P"
/* Constant CRD-TYP-SPCL-CHK-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_SPCL_CHK_D "SC"
/* Constant CRD-TYP-BDM-SEED-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_BDM_SEED_D "SD"
/* Constant CRD-TYP-SIV-VPAN-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_SIV_VPAN_D "S1"
/* Constant CRD-TYP-SVC-NON-RELOAD-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_SVC_NON_RELOAD_D "SN"
/* Constant CRD-TYP-SPCL-PURPOSE-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_SPCL_PURPOSE_D "SP"
/* Constant CRD-TYP-SVC-RELOAD-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_SVC_RELOAD_D "SR"
/* Constant CRD-TYP-SUPER-TELLER-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_SUPER_TELLER_D "ST"
/* Constant CRD-TYP-CHINA-UNIONPAY-CR-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_CHINA_UNIONPAY_CR_D "UP"
/* Constant CRD-TYP-VISA-CR-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_VISA_CR_D "V"
/* Constant CRD-TYP-VISA-DB-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_VISA_DB_D "VD"
/* Constant CRD-TYP-VISA-DUAL-D created on 10/18/2023 at 17:46 */
#define CRD_TYP_VISA_DUAL_D "VV"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:27 */
#pragma section dual_site_constants
/* Constant DUAL-SITE-ALL-D created on 10/18/2023 at 17:46 */
#define DUAL_SITE_ALL_D "A"
/* Constant DUAL-SITE-LOCAL-D created on 10/18/2023 at 17:46 */
#define DUAL_SITE_LOCAL_D "L"
/* Constant DUAL-SITE-REMOTE-D created on 10/18/2023 at 17:46 */
#define DUAL_SITE_REMOTE_D "R"
/* Constant DUAL-SITE-NULL-D created on 10/18/2023 at 17:46 */
#define DUAL_SITE_NULL_D 0
/* Constant DUAL-SITE-TKN-VAL-D created on 10/18/2023 at 17:46 */
#define DUAL_SITE_TKN_VAL_D "p"
#pragma section evt_msg_severity_constants
/* Constant EVT-MSG-SEVERITY-INFO-L created on 10/18/2023 at 17:46 */
#define EVT_MSG_SEVERITY_INFO_L 0
/* Constant EVT-MSG-SEVERITY-WARN-L created on 10/18/2023 at 17:46 */
#define EVT_MSG_SEVERITY_WARN_L 1
/* Constant EVT-MSG-SEVERITY-ERR-L created on 10/18/2023 at 17:46 */
#define EVT_MSG_SEVERITY_ERR_L 2
/* Constant EVT-MSG-SEVERITY-CRIT-L created on 10/18/2023 at 17:46 */
#define EVT_MSG_SEVERITY_CRIT_L 3
#pragma section extmem_constants
/* Constant SEG-ADDR-SELECTABLE-L created on 10/18/2023 at 17:46 */
#define SEG_ADDR_SELECTABLE_L 524288L
#pragma section extmem_dalloc_constants
/* Constant DALLOC-FLUSH-L created on 10/18/2023 at 17:46 */
#define DALLOC_FLUSH_L 0
/* Constant DALLOC-NO-FLUSH-L created on 10/18/2023 at 17:46 */
#define DALLOC_NO_FLUSH_L 1
#pragma section file_format_constants
/* Constant FILE-FRMT-1-L created on 10/18/2023 at 17:46 */
#define FILE_FRMT_1_L 1
/* Constant FILE-FRMT-2-L created on 10/18/2023 at 17:46 */
#define FILE_FRMT_2_L 2
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:27 */
#pragma section file_info_cde_constants
/* Constant FIC-FNAME-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_FNAME_LGTH_L 1
/* Constant FIC-FNAME-L created on 10/18/2023 at 17:46 */
#define FIC_FNAME_L 2
/* Constant FIC-FNAME-CUR-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_FNAME_CUR_LGTH_L 3
/* Constant FIC-FNAME-CUR-L created on 10/18/2023 at 17:46 */
#define FIC_FNAME_CUR_L 4
/* Constant FIC-LAST-ERR-L created on 10/18/2023 at 17:46 */
#define FIC_LAST_ERR_L 7
/* Constant FIC-REC-ADDR-NXT-L created on 10/18/2023 at 17:46 */
#define FIC_REC_ADDR_NXT_L 11
/* Constant FIC-REC-ADDR-CUR-L created on 10/18/2023 at 17:46 */
#define FIC_REC_ADDR_CUR_L 12
/* Constant FIC-FILE-TYP-L created on 10/18/2023 at 17:46 */
#define FIC_FILE_TYP_L 41
/* Constant FIC-FILE-CDE-L created on 10/18/2023 at 17:46 */
#define FIC_FILE_CDE_L 42
/* Constant FIC-LOGL-REC-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LOGL_REC_LGTH_L 43
/* Constant FIC-BLK-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_BLK_LGTH_L 44
/* Constant FIC-KEY-OFST-L created on 10/18/2023 at 17:46 */
#define FIC_KEY_OFST_L 45
/* Constant FIC-KEY-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_KEY_LGTH_L 46
/* Constant FIC-PRI-EXT-L created on 10/18/2023 at 17:46 */
#define FIC_PRI_EXT_L 50
/* Constant FIC-SCND-EXT-L created on 10/18/2023 at 17:46 */
#define FIC_SCND_EXT_L 51
/* Constant FIC-MAX-EXT-L created on 10/18/2023 at 17:46 */
#define FIC_MAX_EXT_L 52
/* Constant FIC-CREATION-TIM-L created on 10/18/2023 at 17:46 */
#define FIC_CREATION_TIM_L 54
/* Constant FIC-AUDITED-FILE-L created on 10/18/2023 at 17:46 */
#define FIC_AUDITED_FILE_L 66
/* Constant FIC-OPEN-DFLTS-L created on 10/18/2023 at 17:46 */
#define FIC_OPEN_DFLTS_L 71
/* Constant FIC-BUFFERED-WRITE-L created on 10/18/2023 at 17:46 */
#define FIC_BUFFERED_WRITE_L 72
/* Constant FIC-NUM-OF-PARTS-L created on 10/18/2023 at 17:46 */
#define FIC_NUM_OF_PARTS_L 90
/* Constant FIC-PART-DESCR-L created on 10/18/2023 at 17:46 */
#define FIC_PART_DESCR_L 91
/* Constant FIC-PART-VOL-NAM-LGTH-ARRAY-L created on 10/18/2023 at 17:46 */
#define FIC_PART_VOL_NAM_LGTH_ARRAY_L 92
/* Constant FIC-PART-VOL-NAM-ARRAY-L created on 10/18/2023 at 17:46 */
#define FIC_PART_VOL_NAM_ARRAY_L 93
/* Constant FIC-PART-KEY-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_PART_KEY_LGTH_L 94
/* Constant FIC-PART-KEY-L created on 10/18/2023 at 17:46 */
#define FIC_PART_KEY_L 95
/* Constant FIC-PART-DESCR-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_PART_DESCR_32BIT_L 97
/* Constant FIC-PART-VOL-REL-NAM-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_PART_VOL_REL_NAM_LGTH_L 98
/* Constant FIC-PART-VOL-REL-NAM-L created on 10/18/2023 at 17:46 */
#define FIC_PART_VOL_REL_NAM_L 99
/* Constant FIC-NUM-ALT-KEYS-L created on 10/18/2023 at 17:46 */
#define FIC_NUM_ALT_KEYS_L 100
/* Constant FIC-NUM-ALT-FILES-L created on 10/18/2023 at 17:46 */
#define FIC_NUM_ALT_FILES_L 102
/* Constant FIC-ALT-KEY-DESCR-ARRAY-L created on 10/18/2023 at 17:46 */
#define FIC_ALT_KEY_DESCR_ARRAY_L 106
/* Constant FIC-ALT-FNAME-LGTH-ARRAY-L created on 10/18/2023 at 17:46 */
#define FIC_ALT_FNAME_LGTH_ARRAY_L 108
/* Constant FIC-ALT-FNAME-ARRAY-L created on 10/18/2023 at 17:46 */
#define FIC_ALT_FNAME_ARRAY_L 109
/* Constant FIC-PART-EOF-L created on 10/18/2023 at 17:46 */
#define FIC_PART_EOF_L 136
/* Constant FIC-AGGR-EOF-L created on 10/18/2023 at 17:46 */
#define FIC_AGGR_EOF_L 191
/* Constant FIC-AGGR-FILE-SIZE-MAX-L created on 10/18/2023 at 17:46 */
#define FIC_AGGR_FILE_SIZE_MAX_L 192
/* Constant FIC-PART-EOF-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_PART_EOF_64BIT_L 193
/* Constant FIC-FILE-FRMT-L created on 10/18/2023 at 17:46 */
#define FIC_FILE_FRMT_L 195
/* Constant FIC-LOGL-REC-LGTH-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LOGL_REC_LGTH_32BIT_L 196
/* Constant FIC-BLK-LGTH-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_BLK_LGTH_32BIT_L 197
/* Constant FIC-KEY-OFST-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_KEY_OFST_32BIT_L 198
/* Constant FIC-PRI-EXT-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_PRI_EXT_32BIT_L 199
/* Constant FIC-SCND-EXT-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_SCND_EXT_32BIT_L 200
/* Constant FIC-REC-ADDR-NXT-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_REC_ADDR_NXT_64BIT_L 201
/* Constant FIC-REC-ADDR-CUR-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_REC_ADDR_CUR_64BIT_L 202
/* Constant FIC-CUR-KEY-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_CUR_KEY_LGTH_L 203
/* Constant FIC-CUR-KEY-VAL-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_CUR_KEY_VAL_64BIT_L 204
/* Constant FIC-PRIKEY-CUR-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_PRIKEY_CUR_LGTH_L 205
/* Constant FIC-PRIKEY-CUR-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_PRIKEY_CUR_64BIT_L 206
/* Constant FIC-LGTH-FNAME-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FNAME_LGTH_L 2
/* Constant FIC-LGTH-FNAME-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FNAME_L 35
/* Constant FIC-LGTH-FNAME-CUR-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FNAME_CUR_LGTH_L 2
/* Constant FIC-LGTH-FNAME-CUR-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FNAME_CUR_L 35
/* Constant FIC-LGTH-LAST-ERR-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_LAST_ERR_L 2
/* Constant FIC-LGTH-REC-ADDR-NXT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_REC_ADDR_NXT_L 4
/* Constant FIC-LGTH-REC-ADDR-CUR-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_REC_ADDR_CUR_L 4
/* Constant FIC-LGTH-FILE-TYP-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FILE_TYP_L 2
/* Constant FIC-LGTH-FILE-CDE-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FILE_CDE_L 2
/* Constant FIC-LGTH-LOGL-REC-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_LOGL_REC_LGTH_L 2
/* Constant FIC-LGTH-BLK-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_BLK_LGTH_L 2
/* Constant FIC-LGTH-KEY-OFST-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_KEY_OFST_L 2
/* Constant FIC-LGTH-KEY-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_KEY_LGTH_L 2
/* Constant FIC-LGTH-PRI-EXT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PRI_EXT_L 2
/* Constant FIC-LGTH-SCND-EXT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_SCND_EXT_L 2
/* Constant FIC-LGTH-MAX-EXT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_MAX_EXT_L 2
/* Constant FIC-LGTH-CREATION-TIM-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_CREATION_TIM_L 8
/* Constant FIC-LGTH-AUDITED-FILE-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_AUDITED_FILE_L 2
/* Constant FIC-LGTH-OPEN-DFLTS-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_OPEN_DFLTS_L 2
/* Constant FIC-LGTH-BUFFERED-WRITE-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_BUFFERED_WRITE_L 2
/* Constant FIC-LGTH-NUM-OF-PARTS-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_NUM_OF_PARTS_L 2
/* Constant FIC-LGTH-PART-DESCR-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_DESCR_L 4
/* Constant FIC-LGTH-PARTVOLNAMLGTHARRAY-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PARTVOLNAMLGTHARRAY_L 64
/* Constant FIC-LGTH-PART-VOL-NAM-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_VOL_NAM_LGTH_L 2
/* Constant FIC-LGTH-PART-VOL-NAM-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_VOL_NAM_L 8
/* Constant FIC-LGTH-PART-DESCR-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_DESCR_32BIT_L 8
/* Constant FIC-LGTH-PART-KEY-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_KEY_LGTH_L 2
/* Constant FIC-LGTH-PART-KEY-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_KEY_L 30
/* Constant FIC-LGTH-PART-VOLRELNAM-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_VOLRELNAM_LGTH_L 4
/* Constant FIC-LGTH-NUM-ALT-KEYS-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_NUM_ALT_KEYS_L 2
/* Constant FIC-LGTH-NUM-ALT-FILES-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_NUM_ALT_FILES_L 2
/* Constant FIC-LGTH-ALT-KEY-DESCR-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_ALT_KEY_DESCR_L 14
/* Constant FIC-LGTH-ALT-FNAME-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_ALT_FNAME_LGTH_L 2
/* Constant FIC-LGTH-ALT-FNAME-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_ALT_FNAME_L 35
/* Constant FIC-LGTH-PART-EOF-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_EOF_L 4
/* Constant FIC-LGTH-AGGR-EOF-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_AGGR_EOF_L 8
/* Constant FIC-LGTH-AGGR-FILE-SIZE-MAX-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_AGGR_FILE_SIZE_MAX_L 8
/* Constant FIC-LGTH-PART-EOF-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PART_EOF_64BIT_L 8
/* Constant FIC-LGTH-FILE-FRMT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_FILE_FRMT_L 2
/* Constant FIC-LGTH-LOGL-REC-LGTH-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_LOGL_REC_LGTH_32BIT_L 4
/* Constant FIC-LGTH-BLK-LGTH-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_BLK_LGTH_32BIT_L 4
/* Constant FIC-LGTH-KEY-OFST-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_KEY_OFST_32BIT_L 4
/* Constant FIC-LGTH-PRI-KEY-OFST-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PRI_KEY_OFST_32BIT_L 4
/* Constant FIC-LGTH-PRI-EXT-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PRI_EXT_32BIT_L 4
/* Constant FIC-LGTH-SCND-EXT-32BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_SCND_EXT_32BIT_L 4
/* Constant FIC-LGTH-REC-ADDR-NXT-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_REC_ADDR_NXT_64BIT_L 8
/* Constant FIC-LGTH-REC-ADDR-CUR-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_REC_ADDR_CUR_64BIT_L 8
/* Constant FIC-LGTH-CUR-KEY-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_CUR_KEY_LGTH_L 2
/* Constant FIC-LGTH-CUR-KEY-VAL-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_CUR_KEY_VAL_64BIT_L 8
/* Constant FIC-LGTH-PRIKEY-CUR-LGTH-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PRIKEY_CUR_LGTH_L 2
/* Constant FIC-LGTH-PRIKEY-CUR-64BIT-L created on 10/18/2023 at 17:46 */
#define FIC_LGTH_PRIKEY_CUR_64BIT_L 8
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:28 */
#pragma section file_typ_constants
/* Constant FILE-TYP-UNSTRUCTURED-L created on 10/18/2023 at 17:46 */
#define FILE_TYP_UNSTRUCTURED_L 0
/* Constant FILE-TYP-REL-L created on 10/18/2023 at 17:46 */
#define FILE_TYP_REL_L 1
/* Constant FILE-TYP-ENTRY-SEQ-L created on 10/18/2023 at 17:46 */
#define FILE_TYP_ENTRY_SEQ_L 2
/* Constant FILE-TYP-KEY-SEQ-L created on 10/18/2023 at 17:46 */
#define FILE_TYP_KEY_SEQ_L 3
/* Constant FILE-TYP-NON-DISK-L created on 10/18/2023 at 17:46 */
#define FILE_TYP_NON_DISK_L -1
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:28 */
#pragma section fname_lgth_constants
/* Constant FNAME-VOL-BYTE-LGTH-L created on 10/18/2023 at 17:46 */
#define FNAME_VOL_BYTE_LGTH_L 8
/* Constant FNAME-SUBVOL-BYTE-LGTH-L created on 10/18/2023 at 17:46 */
#define FNAME_SUBVOL_BYTE_LGTH_L 8
/* Constant FNAME-FILE-BYTE-LGTH-L created on 10/18/2023 at 17:46 */
#define FNAME_FILE_BYTE_LGTH_L 8
/* Constant FNAME-TTL-BYTE-LGTH-L created on 10/18/2023 at 17:46 */
#define FNAME_TTL_BYTE_LGTH_L 35
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:28 */
#pragma section init_constants
/* Constant NULL-L created on 10/18/2023 at 17:46 */
#define NULL_L -1
/* Constant NULL-DBL-L created on 10/18/2023 at 17:46 */
#define NULL_DBL_L -1L
/* Constant NULL-FIX-L created on 10/18/2023 at 17:46 */
#define NULL_FIX_L -1LL
/* Constant NULL-ADDR-L created on 10/18/2023 at 17:46 */
#define NULL_ADDR_L -1
/* Constant NULL-EXT-ADDR-L created on 10/18/2023 at 17:46 */
#define NULL_EXT_ADDR_L -1L
/* Constant NULL-FIX-ADDR-L created on 10/18/2023 at 17:46 */
#define NULL_FIX_ADDR_L -1LL
/* Constant NULL-FILE-NUM-L created on 10/18/2023 at 17:46 */
#define NULL_FILE_NUM_L -2
/* Constant NULL-FILE-NAM-D created on 10/18/2023 at 17:46 */
#define NULL_FILE_NAM_D "$FILE   NOT     USED    "
/* Constant NULL-FNAME-D created on 10/18/2023 at 17:46 */
#define NULL_FNAME_D "         $FILE   .NOT     .USED    "
/* Constant NULL-VOL-SUBVOL-D created on 10/18/2023 at 17:46 */
#define NULL_VOL_SUBVOL_D "$NOT    USED    "
/* Constant NULL-SEGID-L created on 10/18/2023 at 17:46 */
#define NULL_SEGID_L -1
/* Constant TBL-TERMINATOR-D created on 10/18/2023 at 17:46 */
#define TBL_TERMINATOR_D 0
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:28 */
#pragma section iso_acct_typ_constants
/* Constant ISO-ACCT-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_NONE_D "00"
/* Constant ISO-ACCT-TYP-DDA-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_DDA_D "20"
/* Constant ISO-ACCT-TYP-SAV-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_SAV_D "10"
/* Constant ISO-ACCT-TYP-IRA-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_IRA_D "52"
/* Constant ISO-ACCT-TYP-CD-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_CD_D "12"
/* Constant ISO-ACCT-TYP-NOW-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_NOW_D "90"
/* Constant ISO-ACCT-TYP-CR-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_CR_D "30"
/* Constant ISO-ACCT-TYP-CRLINE-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_CRLINE_D "31"
/* Constant ISO-ACCT-TYP-LOAN-INSTL-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_LOAN_INSTL_D "32"
/* Constant ISO-ACCT-TYP-LOAN-MRTG-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_LOAN_MRTG_D "33"
/* Constant ISO-ACCT-TYP-LOAN-CMRCL-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_LOAN_CMRCL_D "9A"
/* Constant ISO-ACCT-TYP-UTIL-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_UTIL_D "9D"
/* Constant ISO-ACCT-TYP-UTIL-1-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_UTIL_1_D "9E"
/* Constant ISO-ACCT-TYP-UTIL-2-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_UTIL_2_D "9F"
/* Constant ISO-ACCT-TYP-UTIL-3-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_UTIL_3_D "9G"
/* Constant ISO-ACCT-TYP-UTIL-4-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_UTIL_4_D "9H"
/* Constant ISO-ACCT-TYP-UTIL-5-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_UTIL_5_D "9J"
/* Constant ISO-ACCT-TYP-LOAD-VAL-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_LOAD_VAL_D "9K"
/* Constant ISO-ACCT-TYP-GL-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_GL_D "9L"
/* Constant ISO-ACCT-TYP-OTH-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_OTH_D "9M"
/* Constant ISO-ACCT-TYP-CSH-BNFT-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_CSH_BNFT_D "96"
/* Constant ISO-ACCT-TYP-FD-STMP-D created on 10/18/2023 at 17:46 */
#define ISO_ACCT_TYP_FD_STMP_D "98"
/* Constant CSM-ISO-ACCT-TYP-DDA-USS-D created on 10/18/2023 at 17:46 */
#define CSM_ISO_ACCT_TYP_DDA_USS_D "25"
/* Constant CSM-ISO-ACCT-TYP-SAV-USS-D created on 10/18/2023 at 17:46 */
#define CSM_ISO_ACCT_TYP_SAV_USS_D "15"
/* Constant CSM-ISO-ACCT-TYP-CR-USS-D created on 10/18/2023 at 17:46 */
#define CSM_ISO_ACCT_TYP_CR_USS_D "35"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:28 */
#pragma section iso_tc_constants
/* Constant TC-DB-GOODS-SVC-D created on 10/18/2023 at 17:46 */
#define TC_DB_GOODS_SVC_D "00"
/* Constant TC-DB-CASH-D created on 10/18/2023 at 17:46 */
#define TC_DB_CASH_D "01"
/* Constant TC-DB-ADJ-D created on 10/18/2023 at 17:46 */
#define TC_DB_ADJ_D "02"
/* Constant TC-DB-CHQ-GUAR-D created on 10/18/2023 at 17:46 */
#define TC_DB_CHQ_GUAR_D "03"
/* Constant TC-DB-CHQ-VRFY-D created on 10/18/2023 at 17:46 */
#define TC_DB_CHQ_VRFY_D "04"
/* Constant TC-DB-EURO-CHQ-D created on 10/18/2023 at 17:46 */
#define TC_DB_EURO_CHQ_D "05"
/* Constant TC-DB-TCHQ-D created on 10/18/2023 at 17:46 */
#define TC_DB_TCHQ_D "06"
/* Constant TC-DB-LETTER-CR-D created on 10/18/2023 at 17:46 */
#define TC_DB_LETTER_CR_D "07"
/* Constant TC-DB-GIRO-D created on 10/18/2023 at 17:46 */
#define TC_DB_GIRO_D "08"
/* Constant TC-DB-GOODS-SVC-CB-D created on 10/18/2023 at 17:46 */
#define TC_DB_GOODS_SVC_CB_D "09"
/* Constant TC-DB-NON-CASH-D created on 10/18/2023 at 17:46 */
#define TC_DB_NON_CASH_D "10"
/* Constant TC-DB-SCRIP-D created on 10/18/2023 at 17:46 */
#define TC_DB_SCRIP_D "11"
/* Constant TC-DB-CASH-MANUAL-D created on 10/18/2023 at 17:46 */
#define TC_DB_CASH_MANUAL_D "12"
/* Constant TC-DB-SVC-FUNDS-D created on 10/18/2023 at 17:46 */
#define TC_DB_SVC_FUNDS_D "13"
/* Constant TC-DB-FAST-CASH-D created on 10/18/2023 at 17:46 */
#define TC_DB_FAST_CASH_D "17"
/* Constant TC-DB-PRVT-PREAUTH-COMPL-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_PREAUTH_COMPL_D "18"
/* Constant TC-DB-PRVT-MAIL-PHN-ORDR-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_MAIL_PHN_ORDR_D "19"
/* Constant TC-DB-PRVT-CASH-CHK-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_CASH_CHK_D "1A"
/* Constant TC-DB-PRVT-NCD-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_NCD_D "1B"
/* Constant TC-DB-PRVT-PREAUTH-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_PREAUTH_D "1C"
/* Constant TC-DB-PRVT-MTOP-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_MTOP_D "1S"
/* Constant TC-DB-PRVT-MTOP-FUNDS-D created on 10/18/2023 at 17:46 */
#define TC_DB_PRVT_MTOP_FUNDS_D "1T"
/* Constant TC-CR-RETURN-D created on 10/18/2023 at 17:46 */
#define TC_CR_RETURN_D "20"
/* Constant TC-CR-DEP-D created on 10/18/2023 at 17:46 */
#define TC_CR_DEP_D "21"
/* Constant TC-CR-ADJ-D created on 10/18/2023 at 17:46 */
#define TC_CR_ADJ_D "22"
/* Constant TC-CR-CHQ-DEP-GUAR-D created on 10/18/2023 at 17:46 */
#define TC_CR_CHQ_DEP_GUAR_D "23"
/* Constant TC-CR-CHQ-DEP-D created on 10/18/2023 at 17:46 */
#define TC_CR_CHQ_DEP_D "24"
/* Constant TC-CR-SVC-FUNDS-D created on 10/18/2023 at 17:46 */
#define TC_CR_SVC_FUNDS_D "26"
/* Constant TC-CR-DEP-CB-D created on 10/18/2023 at 17:46 */
#define TC_CR_DEP_CB_D "28"
/* Constant TC-CR-CHQ-DEP-CB-D created on 10/18/2023 at 17:46 */
#define TC_CR_CHQ_DEP_CB_D "29"
/* Constant TC-CR-PRVT-MTOP-REF-D created on 10/18/2023 at 17:46 */
#define TC_CR_PRVT_MTOP_REF_D "2S"
/* Constant TC-CR-PRVT-MTOP-REF-FUNDS-D created on 10/18/2023 at 17:46 */
#define TC_CR_PRVT_MTOP_REF_FUNDS_D "2T"
/* Constant CSM-TC-CR-CF-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_CF_D "F5"
/* Constant CSM-TC-CR-CF-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_CF_ANU_D "F6"
/* Constant CSM-TC-CR-INQ-CF-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_INQ_CF_D "F7"
/* Constant CSM-TC-CR-INQ-EXC-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_INQ_EXC_D "T0"
/* Constant CSM-TC-CR-PAG-SER-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PAG_SER_D "P5"
/* Constant CSM-TC-CR-PAG-SER-CONS-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PAG_SER_CONS_D "P6"
/* Constant CSM-TC-CR-COMP-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_COMP_D "C1"
/* Constant CSM-TC-CR-PAG-RES-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PAG_RES_D "P0"
/* Constant CSM-TC-CR-PAG-RES-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PAG_RES_ANU_D "P1"
/* Constant CSM-TC-CR-VERAZ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_VERAZ_D "V4"
/* Constant CSM-TC-CR-PULSOS-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PULSOS_D "A0"
/* Constant CSM-TC-CR-COMP-PRO-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_COMP_PRO_D "C0"
/* Constant CSM-TC-CR-MPAG-SER-LOG-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_MPAG_SER_LOG_D "A2"
/* Constant CSM-TC-CR-MPAG-SER-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_MPAG_SER_D "P7"
/* Constant CSM-TC-CR-MPAG-SER-CONS-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_MPAG_SER_CONS_D "P8"
/* Constant CSM-TC-CR-PRE-ADJ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PRE_ADJ_D "25"
/* Constant CSM-TC-CR-DEB-AUT-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_DEB_AUT_D "D0"
/* Constant CSM-TC-CR-DEB-ADJ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_DEB_ADJ_D "D1"
/* Constant CSM-TC-CR-PC-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PC_D "F0"
/* Constant CSM-TC-CR-PC-ADJ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PC_ADJ_D "F1"
/* Constant CSM-TC-CR-PC-DEVO-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PC_DEVO_D "F2"
/* Constant CSM-TC-CR-PC-DEVO-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_PC_DEVO_ANU_D "F3"
/* Constant CSM-TC-INQ-PC-D created on 10/18/2023 at 17:46 */
#define CSM_TC_INQ_PC_D "F4"
/* Constant CSM-TC-CPTOS-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CPTOS_D "M0"
/* Constant CSM-TC-CPTOS-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CPTOS_ANU_D "M1"
/* Constant CSM-TC-CPTOS-DEV-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CPTOS_DEV_D "M2"
/* Constant CSM-TC-CPTOS-INQ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CPTOS_INQ_D "M4"
/* Constant CSM-TC-CPTOS-CANJ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CPTOS_CANJ_D "M5"
/* Constant CSM-TC-PULSOS-TEST-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_TEST_D "R0"
/* Constant CSM-TC-PULSOS-ALTA-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_ALTA_D "R1"
/* Constant CSM-TC-PULSOS-ALTA-RECARGA-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_ALTA_RECARGA_D "R2"
/* Constant CSM-TC-PULSOS-RECARGA-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_RECARGA_D "R3"
/* Constant CSM-TC-PULSOS-ANUL-RECARGA-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_ANUL_RECARGA_D "R4"
/* Constant CSM-TC-PULSOS-CONS-SALDO-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_CONS_SALDO_D "R5"
/* Constant CSM-TC-PULSOS-CONS-LINEA-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_CONS_LINEA_D "R6"
/* Constant CSM-TC-PULSOS-CONS-OPERA-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_CONS_OPERA_D "R7"
/* Constant CSM-TC-PULSOS-CONS-TARJ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_CONS_TARJ_D "R8"
/* Constant CSM-TC-PULSOS-CONS-PAGO-D created on 10/18/2023 at 17:46 */
#define CSM_TC_PULSOS_CONS_PAGO_D "R9"
/* Constant CSM-TC-CR-CD-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_CD_D "L0"
/* Constant CSM-TC-CR-CD-ADJ-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_CD_ADJ_D "L1"
/* Constant CSM-TC-CR-CD-DEVO-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_CD_DEVO_D "L2"
/* Constant CSM-TC-CR-CD-DEVO-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_TC_CR_CD_DEVO_ANU_D "L3"
/* Constant CSM-TC-INQ-CD-D created on 10/18/2023 at 17:46 */
#define CSM_TC_INQ_CD_D "L4"
/* Constant TC-INQ-AVAIL-FUNDS-D created on 10/18/2023 at 17:46 */
#define TC_INQ_AVAIL_FUNDS_D "30"
/* Constant TC-INQ-BAL-D created on 10/18/2023 at 17:46 */
#define TC_INQ_BAL_D "31"
/* Constant TC-INQ-LEDG-BAL-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LEDG_BAL_D "32"
/* Constant TC-INQ-ADDR-VRFY-D created on 10/18/2023 at 17:46 */
#define TC_INQ_ADDR_VRFY_D "33"
/* Constant TC-INQ-STMT-PRNT-D created on 10/18/2023 at 17:46 */
#define TC_INQ_STMT_PRNT_D "34"
/* Constant TC-INQ-CLEARED-ITEM-D created on 10/18/2023 at 17:46 */
#define TC_INQ_CLEARED_ITEM_D "35"
/* Constant TC-INQ-CRD-VRFY-D created on 10/18/2023 at 17:46 */
#define TC_INQ_CRD_VRFY_D "38"
/* Constant TC-INQ-CHQ-CLR-D created on 10/18/2023 at 17:46 */
#define TC_INQ_CHQ_CLR_D "3A"
/* Constant TC-INQ-LAST-DBCR-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_DBCR_D "3B"
/* Constant TC-INQ-LAST-SRC-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_SRC_D "3C"
/* Constant TC-INQ-LAST-CHQ-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_CHQ_D "3D"
/* Constant TC-INQ-LAST-DB-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_DB_D "3E"
/* Constant TC-INQ-LAST-CR-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_CR_D "3F"
/* Constant TC-INQ-LAST-XFER-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_XFER_D "3G"
/* Constant TC-INQ-CUST-VNDR-D created on 10/18/2023 at 17:46 */
#define TC_INQ_CUST_VNDR_D "3H"
/* Constant TC-INQ-SCHED-PMNT-D created on 10/18/2023 at 17:46 */
#define TC_INQ_SCHED_PMNT_D "3J"
/* Constant TC-INQ-SCHED-XFER-D created on 10/18/2023 at 17:46 */
#define TC_INQ_SCHED_XFER_D "3K"
/* Constant TC-INQ-LAST-PMNT-AND-XFER-D created on 10/18/2023 at 17:46 */
#define TC_INQ_LAST_PMNT_AND_XFER_D "3L"
/* Constant TC-INQ-SCHED-TXN-D created on 10/18/2023 at 17:46 */
#define TC_INQ_SCHED_TXN_D "3M"
/* Constant TC-INQ-ACCT-LIST-D created on 10/18/2023 at 17:46 */
#define TC_INQ_ACCT_LIST_D "3N"
/* Constant TC-INQ-MULT-ACCTS-D created on 10/18/2023 at 17:46 */
#define TC_INQ_MULT_ACCTS_D "3P"
/* Constant TC-XFER-ACCT-D created on 10/18/2023 at 17:46 */
#define TC_XFER_ACCT_D "40"
/* Constant TC-XFER-PRVT-48-D created on 10/18/2023 at 17:46 */
#define TC_XFER_PRVT_48_D "48"
/* Constant TC-XFER-PRVT-49-D created on 10/18/2023 at 17:46 */
#define TC_XFER_PRVT_49_D "49"
/* Constant TC-XFER-ACCT-FUTR-D created on 10/18/2023 at 17:46 */
#define TC_XFER_ACCT_FUTR_D "4A"
/* Constant TC-XFER-ACCT-RECUR-D created on 10/18/2023 at 17:46 */
#define TC_XFER_ACCT_RECUR_D "4B"
/* Constant TC-PMNT-D created on 10/18/2023 at 17:46 */
#define TC_PMNT_D "50"
/* Constant TC-PMNT-ENCLOSE-D created on 10/18/2023 at 17:46 */
#define TC_PMNT_ENCLOSE_D "58"
/* Constant TC-PMNT-PRVT-59-D created on 10/18/2023 at 17:46 */
#define TC_PMNT_PRVT_59_D "59"
/* Constant TC-PMNT-FUTR-D created on 10/18/2023 at 17:46 */
#define TC_PMNT_FUTR_D "5A"
/* Constant TC-PMNT-RECUR-D created on 10/18/2023 at 17:46 */
#define TC_PMNT_RECUR_D "5B"
/* Constant TC-SVC-VAL-LOAD-D created on 10/18/2023 at 17:46 */
#define TC_SVC_VAL_LOAD_D "60"
/* Constant TC-SVC-VAL-UNLOAD-D created on 10/18/2023 at 17:46 */
#define TC_SVC_VAL_UNLOAD_D "61"
/* Constant TC-SVC-VAL-XFER-D created on 10/18/2023 at 17:46 */
#define TC_SVC_VAL_XFER_D "62"
/* Constant TC-SVC-ADMIN-D created on 10/18/2023 at 17:46 */
#define TC_SVC_ADMIN_D "63"
/* Constant TC-SVC-CRNCY-EXCHNG-D created on 10/18/2023 at 17:46 */
#define TC_SVC_CRNCY_EXCHNG_D "64"
/* Constant TC-SV-ACTVT-D created on 10/18/2023 at 17:46 */
#define TC_SV_ACTVT_D "72"
/* Constant TC-PRVT-PIN-CHNG-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_PIN_CHNG_D "90"
/* Constant TC-PRVT-PIN-VRFY-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_PIN_VRFY_D "91"
/* Constant TC-PRVT-92-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_92_D "92"
/* Constant TC-PRVT-93-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_93_D "93"
/* Constant TC-PRVT-94-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_94_D "94"
/* Constant TC-PRVT-95-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_95_D "95"
/* Constant TC-PRVT-96-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_96_D "96"
/* Constant TC-PRVT-EMV-PIN-UNBLK-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_EMV_PIN_UNBLK_D "97"
/* Constant TC-PRVT-98-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_98_D "98"
/* Constant TC-PRVT-99-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_99_D "99"
/* Constant TC-PRVT-SCHED-PMNT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_PMNT_D "9A"
/* Constant TC-PRVT-SCHED-PMNT-FUTR-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_PMNT_FUTR_D "9B"
/* Constant TC-PRVT-SCHED-PMNT-RECUR-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_PMNT_RECUR_D "9C"
/* Constant TC-PRVT-SCHED-XFER-FUTR-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_XFER_FUTR_D "9D"
/* Constant TC-PRVT-SCHED-XFER-RECUR-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_XFER_RECUR_D "9E"
/* Constant TC-PRVT-SCHED-PMNT-DEL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_PMNT_DEL_D "9F"
/* Constant TC-PRVT-SCHED-XFER-DEL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_XFER_DEL_D "9G"
/* Constant TC-PRVT-SCHED-PMNT-CHNG-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_PMNT_CHNG_D "9H"
/* Constant TC-PRVT-SCHED-XFER-CHNG-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_XFER_CHNG_D "9J"
/* Constant TC-PRVT-CUST-ADD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ADD_D "9K"
/* Constant TC-PRVT-CUST-INFO-INQ-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_INFO_INQ_D "9L"
/* Constant TC-PRVT-CUST-INFO-CHNG-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_INFO_CHNG_D "9M"
/* Constant TC-PRVT-CUST-VNDR-ADD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VNDR_ADD_D "9N"
/* Constant TC-PRVT-9O-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_9O_D "9O"
/* Constant TC-PRVT-CUST-VNDR-DEACTVT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VNDR_DEACTVT_D "9P"
/* Constant TC-PRVT-CUST-VNDR-CHNG-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VNDR_CHNG_D "9Q"
/* Constant TC-PRVT-MSTR-VNDR-INQ-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MSTR_VNDR_INQ_D "9R"
/* Constant TC-PRVT-MSTR-VNDR-ADD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MSTR_VNDR_ADD_D "9S"
/* Constant TC-PRVT-CUST-VNDR-MSTR-LIST-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VNDR_MSTR_LIST_D "9T"
/* Constant TC-PRVT-LOAN-APPL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_LOAN_APPL_D "9V"
/* Constant TC-PRVT-MSG-TO-BNK-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MSG_TO_BNK_D "9W"
/* Constant TC-PRVT-HIST-INQ-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_HIST_INQ_D "9X"
/* Constant TC-PRVT-LOG-ONLY-1-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_LOG_ONLY_1_D "A1"
/* Constant TC-PRVT-LOG-ONLY-2-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_LOG_ONLY_2_D "A2"
/* Constant TC-PRVT-LOG-ONLY-3-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_LOG_ONLY_3_D "A3"
/* Constant TC-PRVT-LOG-ONLY-4-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_LOG_ONLY_4_D "A4"
/* Constant TC-PRVT-ADJ-GOODS-SVC-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_ADJ_GOODS_SVC_D "A5"
/* Constant TC-PRVT-ADJ-RETURN-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_ADJ_RETURN_D "A6"
/* Constant TC-PRVT-ADJ-CASH-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_ADJ_CASH_D "A7"
/* Constant TC-PRVT-ADJ-CB-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_ADJ_CB_D "A8"
/* Constant TC-PRVT-TERM-TTL-BTCH-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_TERM_TTL_BTCH_D "A9"
/* Constant TC-PRVT-TERM-TTL-SHIFT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_TERM_TTL_SHIFT_D "AA"
/* Constant TC-PRVT-TERM-TTL-DAY-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_TERM_TTL_DAY_D "AB"
/* Constant TC-PRVT-TERM-NETWK-TTL-CUR-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_TERM_NETWK_TTL_CUR_D "AC"
/* Constant TC-PRVT-TERM-NETWK-TTL-PREV-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_TERM_NETWK_TTL_PREV_D "AD"
/* Constant TC-PRVT-TERM-TTL-CRD-TYP-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_TERM_TTL_CRD_TYP_D "AE"
/* Constant TC-PRVT-MAIL-RQST-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MAIL_RQST_D "AF"
/* Constant TC-PRVT-MAIL-SEND-PASSTHRU-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MAIL_SEND_PASSTHRU_D "AG"
/* Constant TC-PRVT-MAIL-SEND-STORED-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MAIL_SEND_STORED_D "AH"
/* Constant TC-PRVT-AI-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_AI_D "AI"
/* Constant TC-PRVT-INQ-CLERK-TTL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_INQ_CLERK_TTL_D "AJ"
/* Constant TC-PRVT-ADMIN-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_ADMIN_D "AK"
/* Constant TC-PRVT-REAR-ADMIN-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_REAR_ADMIN_D "AK"
/* Constant TC-PRVT-INQ-ACCT-LIST-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_INQ_ACCT_LIST_D "B0"
/* Constant TC-PRVT-INQ-BNK-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_INQ_BNK_D "B1"
/* Constant TC-PRVT-INQ-BKBR-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_INQ_BKBR_D "B2"
/* Constant TC-PRVT-SCHED-PMNT-CANCEL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_SCHED_PMNT_CANCEL_D "B3"
/* Constant TC-PRVT-INQ-MISC-RQST-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_INQ_MISC_RQST_D "B4"
/* Constant TC-PRVT-CUST-ACCT-ADD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ACCT_ADD_D "B5"
/* Constant TC-PRVT-CUST-ACCT-ACTVT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ACCT_ACTVT_D "B6"
/* Constant TC-PRVT-CUST-ACCT-DEACTVT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ACCT_DEACTVT_D "B7"
/* Constant TC-PRVT-CUST-ACCT-DEL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ACCT_DEL_D "B8"
/* Constant TC-PRVT-CUST-ACCT-UPDT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ACCT_UPDT_D "B9"
/* Constant TC-PRVT-CUST-ACTVT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_ACTVT_D "BB"
/* Constant TC-PRVT-CUST-DEACTVT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_DEACTVT_D "BC"
/* Constant TC-PRVT-CUST-VNDR-ACTVT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VNDR_ACTVT_D "BD"
/* Constant TC-PRVT-CUST-VNDR-MASK-INQ-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VNDR_MASK_INQ_D "BE"
/* Constant TC-PRVT-CUST-VRFY-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_VRFY_D "BF"
/* Constant TC-PRVT-CUST-SELCT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_CUST_SELCT_D "BG"
/* Constant TC-PRVT-RPQ-2-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_RPQ_2_D "P"
/* Constant TC-PRVT-RPQ-3-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_RPQ_3_D "Q"
/* Constant TC-PRVT-RPQ-1-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_RPQ_1_D "R"
/* Constant TC-PRVT-VISA-CASH-LOAD-VAL-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_VISA_CASH_LOAD_VAL_D "S1"
/* Constant TC-PRVT-VISA-CASH-BAL-INQ-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_VISA_CASH_BAL_INQ_D "S3"
/* Constant TC-PRVT-VISA-CASH-STMT-PRNT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_VISA_CASH_STMT_PRNT_D "S4"
/* Constant TC-PRVT-MDX-VAL-LOAD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_VAL_LOAD_D "S5"
/* Constant TC-PRVT-MDX-VAL-UNLOAD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_VAL_UNLOAD_D "S6"
/* Constant TC-PRVT-MDX-PMNT-LOG-UPLD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_PMNT_LOG_UPLD_D "S7"
/* Constant TC-PRVT-MDX-EXCPT-LOG-UPLD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_EXCPT_LOG_UPLD_D "S8"
/* Constant TC-PRVT-MDX-BTCH-CLOSE-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_BTCH_CLOSE_D "S9"
/* Constant TC-PRVT-MDX-SHIFT-CLOSE-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_SHIFT_CLOSE_D "SA"
/* Constant TC-PRVT-MDX-DAY-CLOSE-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_DAY_CLOSE_D "SB"
/* Constant TC-PRVT-MDX-INQ-BTCH-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_INQ_BTCH_D "SC"
/* Constant TC-PRVT-MDX-INQ-SHIFT-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_INQ_SHIFT_D "SD"
/* Constant TC-PRVT-MDX-INQ-DAY-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_INQ_DAY_D "SE"
/* Constant TC-PRVT-MDX-REMOTE-AUTH-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_MDX_REMOTE_AUTH_D "SF"
/* Constant TC-PRVT-USER-DEF-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_USER_DEF_D "U"
/* Constant TC-PRVT-RSRVD-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_RSRVD_D "W"
/* Constant TC-PRVT-DIST-1-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_DIST_1_D "X"
/* Constant TC-PRVT-DIST-2-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_DIST_2_D "Y"
/* Constant TC-PRVT-DIST-3-D created on 10/18/2023 at 17:46 */
#define TC_PRVT_DIST_3_D "Z"
/* Constant TC-SPACE-D created on 10/18/2023 at 17:46 */
#define TC_SPACE_D "  "
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:30 */
#pragma section key_typ_constants
/* Constant KT-BIN-L created on 10/18/2023 at 17:46 */
#define KT_BIN_L 1
/* Constant KT-ASCII-L created on 10/18/2023 at 17:46 */
#define KT_ASCII_L 2
/* Constant KT-ASCII-BIN-L created on 10/18/2023 at 17:46 */
#define KT_ASCII_BIN_L 3
/* Constant KT-NUMERIC-L created on 10/18/2023 at 17:46 */
#define KT_NUMERIC_L 4
/* Constant KT-ALPHA-L created on 10/18/2023 at 17:46 */
#define KT_ALPHA_L 5
/* Constant KT-ALPHANUMERIC-L created on 10/18/2023 at 17:46 */
#define KT_ALPHANUMERIC_L 6
/* Constant KT-ANY-CHAR-L created on 10/18/2023 at 17:46 */
#define KT_ANY_CHAR_L 7
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:30 */
#pragma section keyposn_mde_constants
/* Constant KP-APPROX-L created on 10/18/2023 at 17:46 */
#define KP_APPROX_L 0
/* Constant KP-APPROX-SKIP-L created on 10/18/2023 at 17:46 */
#define KP_APPROX_SKIP_L 32768L
/* Constant KP-RVRS-APPROX-SKIP-L created on 10/18/2023 at 17:46 */
#define KP_RVRS_APPROX_SKIP_L 57344L
/* Constant KP-GENERIC-L created on 10/18/2023 at 17:46 */
#define KP_GENERIC_L 1
/* Constant KP-GENERIC-SKIP-L created on 10/18/2023 at 17:46 */
#define KP_GENERIC_SKIP_L 32769L
/* Constant KP-RVRS-GENERIC-L created on 10/18/2023 at 17:46 */
#define KP_RVRS_GENERIC_L 24577L
/* Constant KP-RVRS-GENERIC-SKIP-L created on 10/18/2023 at 17:46 */
#define KP_RVRS_GENERIC_SKIP_L 57345L
/* Constant KP-EXACT-L created on 10/18/2023 at 17:46 */
#define KP_EXACT_L 2
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section last_afm_updt_typ_constants
/* Constant ADD-TYP-L created on 10/18/2023 at 17:46 */
#define ADD_TYP_L 0
/* Constant PRE-MOD-TYP-L created on 10/18/2023 at 17:46 */
#define PRE_MOD_TYP_L 1
/* Constant POST-MOD-TYP-L created on 10/18/2023 at 17:46 */
#define POST_MOD_TYP_L 2
/* Constant PURGE-TYP-L created on 10/18/2023 at 17:46 */
#define PURGE_TYP_L 3
/* Constant ONLINE-TXN-TYP-L created on 10/18/2023 at 17:46 */
#define ONLINE_TXN_TYP_L 4
/* Constant REFRESH-TYP-L created on 10/18/2023 at 17:46 */
#define REFRESH_TYP_L 5
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section lconf_key_item_typ_constants
/* Constant LCONF-KEY-ITEM-TYP-ASSIGN-D created on 10/18/2023 at 17:46 */
#define LCONF_KEY_ITEM_TYP_ASSIGN_D "A"
/* Constant LCONF-KEY-ITEM-TYP-PARAM-D created on 10/18/2023 at 17:46 */
#define LCONF_KEY_ITEM_TYP_PARAM_D "P"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section mc_crncy_typ_constants
/* Constant CRNCY-TXN-L created on 10/18/2023 at 17:46 */
#define CRNCY_TXN_L -1
/* Constant CRNCY-TERM-L created on 10/18/2023 at 17:46 */
#define CRNCY_TERM_L 0
/* Constant CRNCY-ACQ-INST-L created on 10/18/2023 at 17:46 */
#define CRNCY_ACQ_INST_L 2
/* Constant CRNCY-LGNT-L created on 10/18/2023 at 17:46 */
#define CRNCY_LGNT_L 3
/* Constant CRNCY-ISS-INST-L created on 10/18/2023 at 17:46 */
#define CRNCY_ISS_INST_L 5
/* Constant CRNCY-FROM-ACCT-L created on 10/18/2023 at 17:46 */
#define CRNCY_FROM_ACCT_L 6
/* Constant CRNCY-TO-ACCT-L created on 10/18/2023 at 17:46 */
#define CRNCY_TO_ACCT_L 7
/* Constant CRNCY-BASE-L created on 10/18/2023 at 17:46 */
#define CRNCY_BASE_L 9
/* Constant MAX-CRNCY-ENTRIES-L created on 10/18/2023 at 17:46 */
#define MAX_CRNCY_ENTRIES_L 10
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section msg_cat_constants
/* Constant MSG-CAT-AUTH-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_AUTH_D "1"
/* Constant MSG-CAT-FNCL-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_FNCL_D "2"
/* Constant MSG-CAT-FM-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_FM_D "3"
/* Constant MSG-CAT-RCNCL-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_RCNCL_D "5"
/* Constant MSG-CAT-ADMIN-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_ADMIN_D "6"
/* Constant MSG-CAT-NMM-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_NMM_D "8"
/* Constant MSG-CAT-WILDCARD-D created on 10/18/2023 at 17:46 */
#define MSG_CAT_WILDCARD_D "*"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section msg_typ_constants
/* Constant MSG-TYP-FNCL-RQST-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FNCL_RQST_D "0200"
/* Constant MSG-TYP-FNCL-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FNCL_RESP_D "0210"
/* Constant MSG-TYP-FNCL-ADVC-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FNCL_ADVC_D "0220"
/* Constant MSG-TYP-FNCL-ADVC-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FNCL_ADVC_RESP_D "0230"
/* Constant MSG-TYP-FILE-RQST-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FILE_RQST_D "0300"
/* Constant MSG-TYP-FILE-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FILE_RESP_D "0310"
/* Constant MSG-TYP-FILE-ADVC-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FILE_ADVC_D "0320"
/* Constant MSG-TYP-FILE-ADVC-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FILE_ADVC_RESP_D "0330"
/* Constant MSG-TYP-FNCL-RVSL-ADVC-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FNCL_RVSL_ADVC_D "0420"
/* Constant MSG-TYP-FNCL-RVSL-ADVC-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_FNCL_RVSL_ADVC_RESP_D "0430"
/* Constant MSG-TYP-ADMIN-RQST-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_ADMIN_RQST_D "0600"
/* Constant MSG-TYP-ADMIN-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_ADMIN_RESP_D "0610"
/* Constant MSG-TYP-ADMIN-ADVC-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_ADMIN_ADVC_D "0620"
/* Constant MSG-TYP-ADMIN-ADVC-RESP-D created on 10/18/2023 at 17:46 */
#define MSG_TYP_ADMIN_ADVC_RESP_D "0630"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section origin_constants
/* Constant ORIGIN-NULL-D created on 10/18/2023 at 17:46 */
#define ORIGIN_NULL_D "0"
/* Constant ORIGIN-DEV-D created on 10/18/2023 at 17:46 */
#define ORIGIN_DEV_D "1"
/* Constant ORIGIN-DH-D created on 10/18/2023 at 17:46 */
#define ORIGIN_DH_D "2"
/* Constant ORIGIN-AUTH-D created on 10/18/2023 at 17:46 */
#define ORIGIN_AUTH_D "3"
/* Constant ORIGIN-HOST-INTF-D created on 10/18/2023 at 17:46 */
#define ORIGIN_HOST_INTF_D "4"
/* Constant ORIGIN-HOST-D created on 10/18/2023 at 17:46 */
#define ORIGIN_HOST_D "5"
/* Constant ORIGIN-ICHG-INTF-D created on 10/18/2023 at 17:46 */
#define ORIGIN_ICHG_INTF_D "6"
/* Constant ORIGIN-ICHG-D created on 10/18/2023 at 17:46 */
#define ORIGIN_ICHG_D "7"
/* Constant ORIGIN-DUKPT-DEV-D created on 10/18/2023 at 17:46 */
#define ORIGIN_DUKPT_DEV_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section pt_srv_entry_mde_constants
/* Constant PT-SRV-ENTRY-MDE-UNKN-D created on 10/18/2023 at 17:46 */
#define PT_SRV_ENTRY_MDE_UNKN_D "00"
/* Constant PT-SRV-ENTRY-MDE-MANUAL-D created on 10/18/2023 at 17:46 */
#define PT_SRV_ENTRY_MDE_MANUAL_D "01"
/* Constant PT-SRV-ENTRY-MDE-MAG-STRIPE-D created on 10/18/2023 at 17:46 */
#define PT_SRV_ENTRY_MDE_MAG_STRIPE_D "02"
/* Constant PT-SRV-ENTRY-MDE-CHIP-D created on 10/18/2023 at 17:46 */
#define PT_SRV_ENTRY_MDE_CHIP_D "05"
/* Constant PT-SRV-ENTRY-MDE-CHIP-CTLS-D created on 10/18/2023 at 17:46 */
#define PT_SRV_ENTRY_MDE_CHIP_CTLS_D "07"
/* Constant PT-SRV-ENTRY-MDE-MAGSTP-CTLS-D created on 10/18/2023 at 17:46 */
#define PT_SRV_ENTRY_MDE_MAGSTP_CTLS_D "91"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section posn_typ_constants
/* Constant PM-SEQ-L created on 10/18/2023 at 17:46 */
#define PM_SEQ_L 0
/* Constant PM-KEY-POSN-L created on 10/18/2023 at 17:46 */
#define PM_KEY_POSN_L 1
/* Constant PM-POSN-L created on 10/18/2023 at 17:46 */
#define PM_POSN_L 2
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:31 */
#pragma section prod_id_constants
/* Constant PI-BASE-L created on 10/18/2023 at 17:46 */
#define PI_BASE_L 0
/* Constant PI-ATM-L created on 10/18/2023 at 17:46 */
#define PI_ATM_L 1
/* Constant PI-POS-L created on 10/18/2023 at 17:46 */
#define PI_POS_L 2
/* Constant PI-TLR-L created on 10/18/2023 at 17:46 */
#define PI_TLR_L 3
/* Constant PI-CORE-L created on 10/18/2023 at 17:46 */
#define PI_CORE_L 5
/* Constant PI-BP-L created on 10/18/2023 at 17:46 */
#define PI_BP_L 6
/* Constant PI-KNL-IEP-L created on 10/18/2023 at 17:46 */
#define PI_KNL_IEP_L 7
/* Constant PI-FHM-L created on 10/18/2023 at 17:46 */
#define PI_FHM_L 8
/* Constant PI-MAIL-L created on 10/18/2023 at 17:46 */
#define PI_MAIL_L 11
/* Constant PI-CMS-L created on 10/18/2023 at 17:46 */
#define PI_CMS_L 12
/* Constant PI-TB-L created on 10/18/2023 at 17:46 */
#define PI_TB_L 14
/* Constant PI-CUST-SVC-L created on 10/18/2023 at 17:46 */
#define PI_CUST_SVC_L 21
/* Constant PI-PRISM-L created on 10/18/2023 at 17:46 */
#define PI_PRISM_L 24
/* Constant PI-RETL-CNFG-L created on 10/18/2023 at 17:46 */
#define PI_RETL_CNFG_L 25
/* Constant PI-OPR-CTL-L created on 10/18/2023 at 17:46 */
#define PI_OPR_CTL_L 26
/* Constant PI-CHK-DSBR-L created on 10/18/2023 at 17:46 */
#define PI_CHK_DSBR_L 27
/* Constant PI-FREQ-SHOP-L created on 10/18/2023 at 17:46 */
#define PI_FREQ_SHOP_L 28
/* Constant PI-CHK-AUTH-L created on 10/18/2023 at 17:46 */
#define PI_CHK_AUTH_L 29
/* Constant PI-RFND-AUTH-L created on 10/18/2023 at 17:46 */
#define PI_RFND_AUTH_L 30
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section read_mode_constants
/* Constant RM-READ-L created on 10/18/2023 at 17:46 */
#define RM_READ_L 1
/* Constant RM-READ-LOCK-L created on 10/18/2023 at 17:46 */
#define RM_READ_LOCK_L 2
/* Constant RM-READ-UPDT-L created on 10/18/2023 at 17:46 */
#define RM_READ_UPDT_L 3
/* Constant RM-READ-UPDT-LOCK-L created on 10/18/2023 at 17:46 */
#define RM_READ_UPDT_LOCK_L 4
/* Constant RM-RETRV-ADDR-ONLY-L created on 10/18/2023 at 17:46 */
#define RM_RETRV_ADDR_ONLY_L 9
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section record_size_constants
/* Constant RS-MAX-KEY-SEQ-L created on 10/18/2023 at 17:46 */
#define RS_MAX_KEY_SEQ_L 4062
/* Constant RS-MAX-ENTRY-SEQ-L created on 10/18/2023 at 17:46 */
#define RS_MAX_ENTRY_SEQ_L 4072
/* Constant RS-MAX-REL-L created on 10/18/2023 at 17:46 */
#define RS_MAX_REL_L 4072
/* Constant RS-MAX-SIZE-L created on 10/18/2023 at 17:46 */
#define RS_MAX_SIZE_L 4096
/* Constant RS-MAX-KEY-SEQ-F2-L created on 10/18/2023 at 17:46 */
#define RS_MAX_KEY_SEQ_F2_L 4040
/* Constant RS-MAX-ENTRY-SEQ-F2-L created on 10/18/2023 at 17:46 */
#define RS_MAX_ENTRY_SEQ_F2_L 4048
/* Constant RS-MAX-REL-F2-L created on 10/18/2023 at 17:46 */
#define RS_MAX_REL_F2_L 4048
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section sec_dev_typ_constants
/* Constant SEC-DEV-TYP-DES-L created on 10/18/2023 at 17:46 */
#define SEC_DEV_TYP_DES_L 0
/* Constant SEC-DEV-TYP-ATALLA-L created on 10/18/2023 at 17:46 */
#define SEC_DEV_TYP_ATALLA_L 1
/* Constant SEC-DEV-TYP-VISA-L created on 10/18/2023 at 17:46 */
#define SEC_DEV_TYP_VISA_L 2
/* Constant SEC-DEV-TYP-IDENTIKEY-L created on 10/18/2023 at 17:46 */
#define SEC_DEV_TYP_IDENTIKEY_L 3
/* Constant SEC-DEV-TYP-ERACOM-L created on 10/18/2023 at 17:46 */
#define SEC_DEV_TYP_ERACOM_L 5
/* Constant SEC-DEV-TYP-TSS-L created on 10/18/2023 at 17:46 */
#define SEC_DEV_TYP_TSS_L 6
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section seg_constants
/* Constant MAX-SEGMENTS-L created on 10/18/2023 at 17:46 */
#define MAX_SEGMENTS_L 256
/* Constant MAX-PRODUCT-L created on 10/18/2023 at 17:46 */
#define MAX_PRODUCT_L 256
/* Constant COB-SUCCESS-L created on 10/18/2023 at 17:46 */
#define COB_SUCCESS_L 0
/* Constant COB-INVALID-PARAMETER-L created on 10/18/2023 at 17:46 */
#define COB_INVALID_PARAMETER_L 300
/* Constant COB-INVALID-SEGMENT-L created on 10/18/2023 at 17:46 */
#define COB_INVALID_SEGMENT_L 301
/* Constant COB-WRITE-CNT-MISMATCH-L created on 10/18/2023 at 17:46 */
#define COB_WRITE_CNT_MISMATCH_L 302
/* Constant B24-RSRVD-L created on 10/18/2023 at 17:46 */
#define B24_RSRVD_L 0L
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section seg_id_constants
/* Constant SEG-BASE-L created on 10/18/2023 at 17:46 */
#define SEG_BASE_L 0
/* Constant SEG-ATM-L created on 10/18/2023 at 17:46 */
#define SEG_ATM_L 1
/* Constant SEG-POS-L created on 10/18/2023 at 17:46 */
#define SEG_POS_L 2
/* Constant SEG-TLR-L created on 10/18/2023 at 17:46 */
#define SEG_TLR_L 3
/* Constant SEG-BP-L created on 10/18/2023 at 17:46 */
#define SEG_BP_L 6
/* Constant SEG-FHM-L created on 10/18/2023 at 17:46 */
#define SEG_FHM_L 8
/* Constant SEG-EMV-L created on 10/18/2023 at 17:46 */
#define SEG_EMV_L 9
/* Constant SEG-MAIL-L created on 10/18/2023 at 17:46 */
#define SEG_MAIL_L 11
/* Constant SEG-CMS-L created on 10/18/2023 at 17:46 */
#define SEG_CMS_L 12
/* Constant SEG-TB-L created on 10/18/2023 at 17:46 */
#define SEG_TB_L 14
/* Constant SEG-PBF-CRLINE-L created on 10/18/2023 at 17:46 */
#define SEG_PBF_CRLINE_L 15
/* Constant SEG-PBF-SHORT-NAM-L created on 10/18/2023 at 17:46 */
#define SEG_PBF_SHORT_NAM_L 16
/* Constant SEG-SSB-BASE-L created on 10/18/2023 at 17:46 */
#define SEG_SSB_BASE_L 17
/* Constant SEG-SSB-CHK-L created on 10/18/2023 at 17:46 */
#define SEG_SSB_CHK_L 18
/* Constant SEG-ADDR-VRFY-L created on 10/18/2023 at 17:46 */
#define SEG_ADDR_VRFY_L 19
/* Constant SEG-CUST-SVC-L created on 10/18/2023 at 17:46 */
#define SEG_CUST_SVC_L 21
/* Constant SEG-PRE-AUTH-HLD-L created on 10/18/2023 at 17:46 */
#define SEG_PRE_AUTH_HLD_L 22
/* Constant SEG-NON-CRNCY-DSP-L created on 10/18/2023 at 17:46 */
#define SEG_NON_CRNCY_DSP_L 23
/* Constant SEG-SV-L created on 10/18/2023 at 17:46 */
#define SEG_SV_L 24
/* Constant SEG-ENHNC-PRE-AUTH-HLD-L created on 10/18/2023 at 17:46 */
#define SEG_ENHNC_PRE_AUTH_HLD_L 25
/* Constant SEG-ONL-REC-MAINT-L created on 10/18/2023 at 17:46 */
#define SEG_ONL_REC_MAINT_L 26
/* Constant SEG-PFRD-TXN-L created on 10/18/2023 at 17:46 */
#define SEG_PFRD_TXN_L 27
/* Constant SEG-ACCT-ICF-L created on 10/18/2023 at 17:46 */
#define SEG_ACCT_ICF_L 31
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section siv_constants
/* Constant SIV-CHK-NO-PRESCREEN-D created on 10/18/2023 at 17:46 */
#define SIV_CHK_NO_PRESCREEN_D "0"
/* Constant SIV-CHK-PRESCREEN-D created on 10/18/2023 at 17:46 */
#define SIV_CHK_PRESCREEN_D "1"
/* Constant SIV-CHK-TYP-DISBL-D created on 10/18/2023 at 17:46 */
#define SIV_CHK_TYP_DISBL_D "0"
/* Constant SIV-CHK-TYP-EAF-BOTH-D created on 10/18/2023 at 17:46 */
#define SIV_CHK_TYP_EAF_BOTH_D "1"
/* Constant SIV-CHK-TYP-CVV-CAVV-EAF-AVV-D created on 10/18/2023 at 17:46 */
#define SIV_CHK_TYP_CVV_CAVV_EAF_AVV_D "2"
/* Constant SIV-CHK-TYP-CVV-CAVV-D created on 10/18/2023 at 17:46 */
#define SIV_CHK_TYP_CVV_CAVV_D "3"
/* Constant SIV-BAD-DISP-CONT-D created on 10/18/2023 at 17:46 */
#define SIV_BAD_DISP_CONT_D "0"
/* Constant SIV-BAD-DISP-DNY-D created on 10/18/2023 at 17:46 */
#define SIV_BAD_DISP_DNY_D "1"
/* Constant SIV-NOT-PRSN-DISP-CONT-D created on 10/18/2023 at 17:46 */
#define SIV_NOT_PRSN_DISP_CONT_D "0"
/* Constant SIV-NOT-PRSN-DISP-DNY-D created on 10/18/2023 at 17:46 */
#define SIV_NOT_PRSN_DISP_DNY_D "1"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section sm_last_msg_wrt_opt_constants
/* Constant SM-LAST-MSG-WRT-OPT-NONE-D created on 10/18/2023 at 17:46 */
#define SM_LAST_MSG_WRT_OPT_NONE_D "0"
/* Constant SM-LAST-MSG-WRT-OPT-WRT-D created on 10/18/2023 at 17:46 */
#define SM_LAST_MSG_WRT_OPT_WRT_D "1"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section tdf_rec_num_constants
/* Constant TDF-REC-NUM-LAST-MSG-L created on 10/18/2023 at 17:46 */
#define TDF_REC_NUM_LAST_MSG_L 0
#pragma section tkn_retrv_opt_constants
/* Constant TKN-RETRV-OPT-NONE-D created on 10/18/2023 at 17:46 */
#define TKN_RETRV_OPT_NONE_D "0"
/* Constant TKN-RETRV-OPT-TDF-D created on 10/18/2023 at 17:46 */
#define TKN_RETRV_OPT_TDF_D "1"
/* Constant TKN-RETRV-OPT-TLF-D created on 10/18/2023 at 17:46 */
#define TKN_RETRV_OPT_TLF_D "2"
/* Constant TKN-RETRV-OPT-USE-IDF-D created on 10/18/2023 at 17:46 */
#define TKN_RETRV_OPT_USE_IDF_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:32 */
#pragma section tkn_util_err_constants
/* Constant COMPL-NO-ERR-L created on 10/18/2023 at 17:46 */
#define COMPL_NO_ERR_L 0
/* Constant TKN-ERR-NONE-L created on 10/18/2023 at 17:46 */
#define TKN_ERR_NONE_L 0
/* Constant TKN-EXIST-L created on 10/18/2023 at 17:46 */
#define TKN_EXIST_L 10
/* Constant TKN-ERR-DUP-L created on 10/18/2023 at 17:46 */
#define TKN_ERR_DUP_L 10
/* Constant TKN-DOES-NOT-EXIST-L created on 10/18/2023 at 17:46 */
#define TKN_DOES_NOT_EXIST_L 11
/* Constant TKN-ERR-NOT-FOUND-L created on 10/18/2023 at 17:46 */
#define TKN_ERR_NOT_FOUND_L 11
/* Constant OVER-MAX-LIMIT-L created on 10/18/2023 at 17:46 */
#define OVER_MAX_LIMIT_L 21
/* Constant TKN-ERR-LMT-EXCEEDED-L created on 10/18/2023 at 17:46 */
#define TKN_ERR_LMT_EXCEEDED_L 21
/* Constant TKN-ADDR-O-B-L created on 10/18/2023 at 17:46 */
#define TKN_ADDR_O_B_L 22
/* Constant TKN-ERR-ADDR-OUT-OF-BOUNDS-L created on 10/18/2023 at 17:46 */
#define TKN_ERR_ADDR_OUT_OF_BOUNDS_L 22
/* Constant PARAM-MISSING-L created on 10/18/2023 at 17:46 */
#define PARAM_MISSING_L 29
/* Constant INVALID-PARAM-L created on 10/18/2023 at 17:46 */
#define INVALID_PARAM_L 29
/* Constant TKN-ERR-PARAM-MISS-L created on 10/18/2023 at 17:46 */
#define TKN_ERR_PARAM_MISS_L 29
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section txn_alwd_constants
/* Constant TXN-ALWD-NOT-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_NOT_D "0"
/* Constant TXN-ALWD-CNTY-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_CNTY_D "1"
/* Constant TXN-ALWD-ST-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_ST_D "2"
/* Constant TXN-ALWD-NATL-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_NATL_D "3"
/* Constant TXN-ALWD-INTL-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_INTL_D "4"
/* Constant TXN-ALWD-CNTY-ONLINE-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_CNTY_ONLINE_D "5"
/* Constant TXN-ALWD-ST-ONLINE-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_ST_ONLINE_D "6"
/* Constant TXN-ALWD-NATL-ONLINE-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_NATL_ONLINE_D "7"
/* Constant TXN-ALWD-INTL-ONLINE-D created on 10/18/2023 at 17:46 */
#define TXN_ALWD_INTL_ONLINE_D "8"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section txn_subtyp_constants
/* Constant EXCH-RATE-SUBTYP-D created on 10/18/2023 at 17:46 */
#define EXCH_RATE_SUBTYP_D "AER0"
/* Constant PFRD-TXN-INQ-SUBTYP-D created on 10/18/2023 at 17:46 */
#define PFRD_TXN_INQ_SUBTYP_D "API0"
/* Constant PFRD-TXN-SETUP-SUBTYP-D created on 10/18/2023 at 17:46 */
#define PFRD_TXN_SETUP_SUBTYP_D "APS0"
/* Constant PFRD-TXN-SUBTYP-D created on 10/18/2023 at 17:46 */
#define PFRD_TXN_SUBTYP_D "APT0"
/* Constant PSBK-UPDT-SUBTYP-D created on 10/18/2023 at 17:46 */
#define PSBK_UPDT_SUBTYP_D "APU0"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section tplt_valid_constants
/* Constant TPLT-VALID-KEYLGTH-L created on 10/18/2023 at 17:46 */
#define TPLT_VALID_KEYLGTH_L 0
/* Constant TPLT-VALID-FILETYPE-L created on 10/18/2023 at 17:46 */
#define TPLT_VALID_FILETYPE_L 1
/* Constant TPLT-VALID-RECLGTH-L created on 10/18/2023 at 17:46 */
#define TPLT_VALID_RECLGTH_L 2
/* Constant TPLT-VALID-NUMALTKEYS-L created on 10/18/2023 at 17:46 */
#define TPLT_VALID_NUMALTKEYS_L 3
/* Constant TPLT-VALID-NUMALTFILES-L created on 10/18/2023 at 17:46 */
#define TPLT_VALID_NUMALTFILES_L 4
/* Constant TPLT-VALID-AKPBUF-L created on 10/18/2023 at 17:46 */
#define TPLT_VALID_AKPBUF_L 5
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section tss_constants
/* Constant TSS-KEY-LGTH-IND-SNGL-D created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_IND_SNGL_D "1"
/* Constant TSS-KEY-LGTH-IND-DBL-D created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_IND_DBL_D "2"
/* Constant TSS-KEY-LGTH-IND-TRPL-D created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_IND_TRPL_D "3"
/* Constant TSS-KEY-LGTH-BIN-FRMT-SNGL-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_BIN_FRMT_SNGL_L 8
/* Constant TSS-KEY-LGTH-BIN-FRMT-DBL-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_BIN_FRMT_DBL_L 16
/* Constant TSS-KEY-LGTH-BIN-FRMT-TRPL-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_BIN_FRMT_TRPL_L 24
/* Constant TSS-KEY-LGTH-HEX-FRMT-SNGL-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_HEX_FRMT_SNGL_L 16
/* Constant TSS-KEY-LGTH-HEX-FRMT-DBL-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_HEX_FRMT_DBL_L 32
/* Constant TSS-KEY-LGTH-HEX-FRMT-TRPL-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_LGTH_HEX_FRMT_TRPL_L 48
/* Constant TSS-KEY-PART-LGTH-L created on 10/18/2023 at 17:46 */
#define TSS_KEY_PART_LGTH_L 16
/* Constant SECURE-DEV-TYP-TSS-D created on 10/18/2023 at 17:46 */
#define SECURE_DEV_TYP_TSS_D "TSS"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section write_mode_constants
/* Constant WM-WRITE-L created on 10/18/2023 at 17:46 */
#define WM_WRITE_L 1
/* Constant WM-WRITE-READ-L created on 10/18/2023 at 17:46 */
#define WM_WRITE_READ_L 2
/* Constant WM-WRITE-UPDT-L created on 10/18/2023 at 17:46 */
#define WM_WRITE_UPDT_L 3
/* Constant WM-WRITE-UPDT-UNLOCK-L created on 10/18/2023 at 17:46 */
#define WM_WRITE_UPDT_UNLOCK_L 4
/* Constant WM-UNLOCK-L created on 10/18/2023 at 17:46 */
#define WM_UNLOCK_L 5
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section cse_base_constants
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_bal_flg_constants
/* Constant ATD-BAL-FLG-CRD-BALANCED-D created on 10/18/2023 at 17:46 */
#define ATD_BAL_FLG_CRD_BALANCED_D "0"
/* Constant ATD-BAL-FLG-CRT-BALANCED-D created on 10/18/2023 at 17:46 */
#define ATD_BAL_FLG_CRT_BALANCED_D "1"
/* Constant ATD-BAL-FLG-FORCE-BALANCED-D created on 10/18/2023 at 17:46 */
#define ATD_BAL_FLG_FORCE_BALANCED_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_cutover_pend_constants
/* Constant ATD-CUTOVER-PEND-NOT-D created on 10/18/2023 at 17:46 */
#define ATD_CUTOVER_PEND_NOT_D "0"
/* Constant ATD-CUTOVER-PEND-D created on 10/18/2023 at 17:46 */
#define ATD_CUTOVER_PEND_D "1"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_epin_typ_constants
/* Constant ATD-EPIN-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define ATD_EPIN_TYP_NONE_D "00"
/* Constant ATD-EPIN-TYP-DES-PINPAD-D created on 10/18/2023 at 17:46 */
#define ATD_EPIN_TYP_DES_PINPAD_D "01"
/* Constant ATD-EPIN-TYP-HDWR-DES-PINPAD-D created on 10/18/2023 at 17:46 */
#define ATD_EPIN_TYP_HDWR_DES_PINPAD_D "03"
/* Constant ATD-EPIN-TYP-DES-PINPAN-D created on 10/18/2023 at 17:46 */
#define ATD_EPIN_TYP_DES_PINPAN_D "04"
/* Constant ATD-EPIN-TYP-HDWR-DES-PINPAN-D created on 10/18/2023 at 17:46 */
#define ATD_EPIN_TYP_HDWR_DES_PINPAN_D "05"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_hopr_cntnts_constants
/* Constant ATD-HOPR-CONTENTS-CASH-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_CASH_D "00"
/* Constant ATD-HOPR-CONTENTS-COIN-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_COIN_D "01"
/* Constant ATD-HOPR-CONTENTS-TCHK-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_TCHK_D "02"
/* Constant ATD-HOPR-CONTENTS-NONVAL-03-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_03_D "03"
/* Constant ATD-HOPR-CONTENTS-NONVAL-04-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_04_D "04"
/* Constant ATD-HOPR-CONTENTS-NONVAL-05-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_05_D "05"
/* Constant ATD-HOPR-CONTENTS-NONVAL-06-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_06_D "06"
/* Constant ATD-HOPR-CONTENTS-NONVAL-07-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_07_D "07"
/* Constant ATD-HOPR-CONTENTS-NONVAL-08-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_08_D "08"
/* Constant ATD-HOPR-CONTENTS-NONVAL-09-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_09_D "09"
/* Constant ATD-HOPR-CONTENTS-NONVAL-10-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_NONVAL_10_D "10"
/* Constant ATD-HOPR-CONTENTS-ROLL-COIN-D created on 10/18/2023 at 17:46 */
#define ATD_HOPR_CONTENTS_ROLL_COIN_D "11"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_mac_typ_constants
/* Constant ATD-MAC-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define ATD_MAC_TYP_NONE_D "0"
/* Constant ATD-MAC-TYP-SFTWR-D created on 10/18/2023 at 17:46 */
#define ATD_MAC_TYP_SFTWR_D "1"
/* Constant ATD-MAC-TYP-HDWR-D created on 10/18/2023 at 17:46 */
#define ATD_MAC_TYP_HDWR_D "3"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_rec_num_constants
/* Constant ATD-REC-NUM-DYN-GNRL-L created on 10/18/2023 at 17:46 */
#define ATD_REC_NUM_DYN_GNRL_L 1
/* Constant ATD-REC-NUM-STATIC-GNRL-L created on 10/18/2023 at 17:46 */
#define ATD_REC_NUM_STATIC_GNRL_L 2
/* Constant ATD-REC-NUM-DYN-SCRATCH-PAD-L created on 10/18/2023 at 17:46 */
#define ATD_REC_NUM_DYN_SCRATCH_PAD_L 3
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_term_proto_constants
/* Constant ATD-TERM-PROTO-ASYNC-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_ASYNC_D "A"
/* Constant ATD-TERM-PROTO-BSYNC-EBCDIC-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_BSYNC_EBCDIC_D "B"
/* Constant ATD-TERM-PROTO-BSYNC-ASCII-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_BSYNC_ASCII_D "C"
/* Constant ATD-TERM-PROTO-DIALUP-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_DIALUP_D "D"
/* Constant ATD-TERM-PROTO-SNAX-HLS-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_SNAX_HLS_D "H"
/* Constant ATD-TERM-PROTO-NRSSP-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_NRSSP_D "N"
/* Constant ATD-TERM-PROTO-X25-PVC-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_X25_PVC_D "P"
/* Constant ATD-TERM-PROTO-SDLC-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_SDLC_D "S"
/* Constant ATD-TERM-PROTO-TCP-IP-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_TCP_IP_D "T"
/* Constant ATD-TERM-PROTO-X25-SVC-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_PROTO_X25_SVC_D "X"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:33 */
#pragma section atm_atd_term_typ_constants
/* Constant ATD-TERM-TYP-DIEBOLD-910-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DIEBOLD_910_D "01"
/* Constant ATD-TERM-TYP-IBM-3624V8-DUAL-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_3624V8_DUAL_D "02"
/* Constant ATD-TERM-TYP-BURROUGHS-650-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_BURROUGHS_650_D "04"
/* Constant ATD-TERM-TYP-FUJITSU-910-MDE-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_FUJITSU_910_MDE_D "07"
/* Constant ATD-TERM-TYP-FUJITSU-911-MDE-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_FUJITSU_911_MDE_D "08"
/* Constant ATD-TERM-TYP-DIEBOLD-911-OUT-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DIEBOLD_911_OUT_D "09"
/* Constant ATD-TERM-TYP-DIEBOLD-911-IN-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DIEBOLD_911_IN_D "10"
/* Constant ATD-TERM-TYP-DOCUTEL-5100-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DOCUTEL_5100_D "11"
/* Constant ATD-TERM-TYP-IBM-3624V7-ONE-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_3624V7_ONE_D "14"
/* Constant ATD-TERM-TYP-IBM-3624V7-DUAL-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_3624V7_DUAL_D "15"
/* Constant ATD-TERM-TYP-IBM-3624V8-ONE-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_3624V8_ONE_D "18"
/* Constant ATD-TERM-TYP-DIEBOLD-912-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DIEBOLD_912_D "20"
/* Constant ATD-TERM-TYP-NCR-5XXX-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_NCR_5XXX_D "22"
/* Constant ATD-TERM-TYP-IBM-4730-ONE-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_4730_ONE_D "26"
/* Constant ATD-TERM-TYP-IBM-4730-DUAL-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_4730_DUAL_D "27"
/* Constant ATD-TERM-TYP-DIEBOLD-10XX-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DIEBOLD_10XX_D "30"
/* Constant ATD-TERM-TYP-OLIVETTI-6000-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_OLIVETTI_6000_D "32"
/* Constant ATD-TERM-TYP-ESD-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_ESD_D "37"
/* Constant ATD-TERM-TYP-IBM-3624V8-D01-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_3624V8_D01_D "48"
/* Constant ATD-TERM-TYP-IBM-3624V8-D02-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_IBM_3624V8_D02_D "49"
/* Constant ATD-TERM-TYP-TRITON-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_TRITON_D "B3"
/* Constant ATD-TERM-TYP-TIDEL-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_TIDEL_D "B4"
/* Constant ATD-TERM-TYP-FUJITSU-7000-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_FUJITSU_7000_D "B5"
/* Constant ATD-TERM-TYP-DIEBOLD-CSHPLUS-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_DIEBOLD_CSHPLUS_D "B6"
/* Constant ATD-TERM-TYP-NCR-CASH-D created on 10/18/2023 at 17:46 */
#define ATD_TERM_TYP_NCR_CASH_D "B7"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_atd_txn_typ_constants
/* Constant ATD-TXN-TYP-VISA-CASH-D created on 10/18/2023 at 17:46 */
#define ATD_TXN_TYP_VISA_CASH_D "1"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_msg_typ_constants
/* Constant ATM-MSG-TYP-STMT-PRNT-RQST-D created on 10/18/2023 at 17:46 */
#define ATM_MSG_TYP_STMT_PRNT_RQST_D "0205"
/* Constant ATM-MSG-TYP-STMT-PRNT-RESP-D created on 10/18/2023 at 17:46 */
#define ATM_MSG_TYP_STMT_PRNT_RESP_D "0215"
/* Constant ATM-MSG-TYP-ADJ-D created on 10/18/2023 at 17:46 */
#define ATM_MSG_TYP_ADJ_D "5400"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_rcpt_prnt_opt_constants
/* Constant RCPT-PRNT-NONE-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_NONE_D "0"
/* Constant RCPT-PRNT-CUST-MAND-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_CUST_MAND_D "1"
/* Constant RCPT-PRNT-CUST-OPT-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_CUST_OPT_D "2"
/* Constant RCPT-PRNT-AUD-MAND-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_AUD_MAND_D "3"
/* Constant RCPT-PRNT-AUD-OPT-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_AUD_OPT_D "4"
/* Constant RCPT-PRNT-CUST-MAND-AUD-MAND-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_CUST_MAND_AUD_MAND_D "5"
/* Constant RCPT-PRNT-CUST-OPT-AUD-OPT-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_CUST_OPT_AUD_OPT_D "6"
/* Constant RCPT-PRNT-CUST-MAND-AUD-OPT-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_CUST_MAND_AUD_OPT_D "7"
/* Constant RCPT-PRNT-CUST-OPT-AUD-MAND-D created on 10/18/2023 at 17:46 */
#define RCPT_PRNT_CUST_OPT_AUD_MAND_D "8"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_stm_excpt_flg_constants
/* Constant STM-EXCPT-OK-D created on 10/18/2023 at 17:46 */
#define STM_EXCPT_OK_D "0"
/* Constant STM-EXCPT-INVLD-POSTED-D created on 10/18/2023 at 17:46 */
#define STM_EXCPT_INVLD_POSTED_D "1"
/* Constant STM-EXCPT-INVLD-NOT-POSTED-D created on 10/18/2023 at 17:46 */
#define STM_EXCPT_INVLD_NOT_POSTED_D "2"
/* Constant STM-EXCPT-SVC-INCOMPLETE-D created on 10/18/2023 at 17:46 */
#define STM_EXCPT_SVC_INCOMPLETE_D "3"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_tc_constants
/* Constant ATM-TC-CHK-GUAR-D created on 10/18/2023 at 17:46 */
#define ATM_TC_CHK_GUAR_D "03"
/* Constant ATM-TC-CHK-VRFY-D created on 10/18/2023 at 17:46 */
#define ATM_TC_CHK_VRFY_D "04"
/* Constant ATM-TC-WDL-D created on 10/18/2023 at 17:46 */
#define ATM_TC_WDL_D "10"
/* Constant ATM-TC-NCD-WDL-D created on 10/18/2023 at 17:46 */
#define ATM_TC_NCD_WDL_D "10"
/* Constant ATM-TC-CASH-CHK-D created on 10/18/2023 at 17:46 */
#define ATM_TC_CASH_CHK_D "11"
/* Constant ATM-TC-DEP-D created on 10/18/2023 at 17:46 */
#define ATM_TC_DEP_D "20"
/* Constant ATM-TC-DEP-CB-D created on 10/18/2023 at 17:46 */
#define ATM_TC_DEP_CB_D "24"
/* Constant ATM-TC-BAL-INQ-D created on 10/18/2023 at 17:46 */
#define ATM_TC_BAL_INQ_D "30"
/* Constant ATM-TC-XFER-D created on 10/18/2023 at 17:46 */
#define ATM_TC_XFER_D "40"
/* Constant ATM-TC-VISA-CASH-VAL-LOAD-D created on 10/18/2023 at 17:46 */
#define ATM_TC_VISA_CASH_VAL_LOAD_D "41"
/* Constant ATM-TC-VISA-CASH-VAL-UNLOAD-D created on 10/18/2023 at 17:46 */
#define ATM_TC_VISA_CASH_VAL_UNLOAD_D "42"
/* Constant ATM-TC-PMNT-D created on 10/18/2023 at 17:46 */
#define ATM_TC_PMNT_D "50"
/* Constant ATM-TC-PMNT-ENCLOSE-D created on 10/18/2023 at 17:46 */
#define ATM_TC_PMNT_ENCLOSE_D "51"
/* Constant ATM-TC-MSG-TO-FI-D created on 10/18/2023 at 17:46 */
#define ATM_TC_MSG_TO_FI_D "60"
/* Constant ATM-TC-CRD-REVIEW-RQST-D created on 10/18/2023 at 17:46 */
#define ATM_TC_CRD_REVIEW_RQST_D "62"
/* Constant ATM-TC-STMT-PRNT-D created on 10/18/2023 at 17:46 */
#define ATM_TC_STMT_PRNT_D "70"
/* Constant ATM-TC-PIN-CHNG-RQST-D created on 10/18/2023 at 17:46 */
#define ATM_TC_PIN_CHNG_RQST_D "81"
/* Constant ATM-TC-EMV-PIN-UNBLK-D created on 10/18/2023 at 17:46 */
#define ATM_TC_EMV_PIN_UNBLK_D "82"
/* Constant ATM-TC-ADMIN-D created on 10/18/2023 at 17:46 */
#define ATM_TC_ADMIN_D "99"
/* Constant ATM-TC-SVC-BAL-INQ-D created on 10/18/2023 at 17:46 */
#define ATM_TC_SVC_BAL_INQ_D "U1"
/* Constant ATM-TC-SVC-STMT-PRNT-D created on 10/18/2023 at 17:46 */
#define ATM_TC_SVC_STMT_PRNT_D "U2"
/* Constant ATM-TC-MDX-VAL-LOAD-D created on 10/18/2023 at 17:46 */
#define ATM_TC_MDX_VAL_LOAD_D "S5"
/* Constant ATM-TC-MDX-VAL-UNLOAD-D created on 10/18/2023 at 17:46 */
#define ATM_TC_MDX_VAL_UNLOAD_D "S6"
/* Constant ATM-TC-MDX-PMNT-LOG-UPLD-D created on 10/18/2023 at 17:46 */
#define ATM_TC_MDX_PMNT_LOG_UPLD_D "S7"
/* Constant ATM-TC-MDX-EXCPT-LOG-UPLD-D created on 10/18/2023 at 17:46 */
#define ATM_TC_MDX_EXCPT_LOG_UPLD_D "S8"
/* Constant ATM-TC-MDX-REMOTE-AUTH-D created on 10/18/2023 at 17:46 */
#define ATM_TC_MDX_REMOTE_AUTH_D "SF"
/* Constant CSM-ATM-TC-CF-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_CF_D "F5"
/* Constant CSM-ATM-TC-INQ-CF-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_INQ_CF_D "F7"
/* Constant CSM-ATM-TC-INQ-EXC-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_INQ_EXC_D "T0"
/* Constant CSM-ATM-TC-PAG-SER-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_PAG_SER_D "P5"
/* Constant CSM-ATM-TC-PAG-SER-CONS-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_PAG_SER_CONS_D "P6"
/* Constant CSM-ATM-TC-COMP-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_COMP_D "C1"
/* Constant CSM-ATM-TC-MPAG-SER-LOG-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_MPAG_SER_LOG_D "A2"
/* Constant CSM-ATM-TC-MPAG-SER-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_MPAG_SER_D "P7"
/* Constant CSM-ATM-TC-MPAG-SER-CONS-D created on 10/18/2023 at 17:46 */
#define CSM_ATM_TC_MPAG_SER_CONS_D "P8"
/* Constant ATM-TC-LOG-ONLY-1-D created on 10/18/2023 at 17:46 */
#define ATM_TC_LOG_ONLY_1_D "610100"
/* Constant ATM-TC-LOG-ONLY-2-D created on 10/18/2023 at 17:46 */
#define ATM_TC_LOG_ONLY_2_D "610200"
/* Constant ATM-TC-LOG-ONLY-3-D created on 10/18/2023 at 17:46 */
#define ATM_TC_LOG_ONLY_3_D "610300"
/* Constant ATM-TC-LOG-ONLY-4-D created on 10/18/2023 at 17:46 */
#define ATM_TC_LOG_ONLY_4_D "610400"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_tdf_opt_constants
/* Constant TDFOPT-DELETE-L created on 10/18/2023 at 17:46 */
#define TDFOPT_DELETE_L 0
/* Constant TDFOPT-NOCHANGE-RETURN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_NOCHANGE_RETURN_L 1
/* Constant TDFOPT-NOCHANGE-RETAIN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_NOCHANGE_RETAIN_L 2
/* Constant TDFOPT-NOCHANGE-RETAIN-TXN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_NOCHANGE_RETAIN_TXN_L 102
/* Constant TDFOPT-WRITE-MEMORY-L created on 10/18/2023 at 17:46 */
#define TDFOPT_WRITE_MEMORY_L 3
/* Constant TDFOPT-WRITE-MEMORY-TXN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_WRITE_MEMORY_TXN_L 103
/* Constant TDFOPT-WRITE-RETURN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_WRITE_RETURN_L 4
/* Constant TDFOPT-WRITE-RETAIN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_WRITE_RETAIN_L 5
/* Constant TDFOPT-WRITE-RETAIN-TXN-L created on 10/18/2023 at 17:46 */
#define TDFOPT_WRITE_RETAIN_TXN_L 105
#pragma section atm_tlf_admin_cde_constants
/* Constant TLF-ADMIN-CDE-INIT-CASH-DH-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_INIT_CASH_DH_D "01"
/* Constant TLF-ADMIN-CDE-INIT-CASH-DCT-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_INIT_CASH_DCT_D "02"
/* Constant TLF-ADMIN-CDE-INCR-CASH-DH-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_INCR_CASH_DH_D "03"
/* Constant TLF-ADMIN-CDE-INCR-CASH-DCT-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_INCR_CASH_DCT_D "04"
/* Constant TLF-ADMIN-CDE-TERM-CUT-DH-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_TERM_CUT_DH_D "05"
/* Constant TLF-ADMIN-CDE-TERM-CUT-DCT-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_TERM_CUT_DCT_D "06"
/* Constant TLF-ADMIN-CDE-DECR-CASH-DH-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_DECR_CASH_DH_D "07"
/* Constant TLF-ADMIN-CDE-DECR-CASH-DCT-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_DECR_CASH_DCT_D "08"
/* Constant TLF-ADMIN-CDE-TERM-CUT-SETL-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_TERM_CUT_SETL_D "09"
/* Constant TLF-ADMIN-CDE-TERM-TTL-DCT-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_TERM_TTL_DCT_D "20"
/* Constant TLF-ADMIN-CDE-TERM-TTL-DH-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_TERM_TTL_DH_D "21"
/* Constant TLF-ADMIN-CDE-TERM-TTL-SETL-D created on 10/18/2023 at 17:46 */
#define TLF_ADMIN_CDE_TERM_TTL_SETL_D "22"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_tlf_rec_typ_constants
/* Constant TLF-REC-TYP-EXTR-POSN-D created on 10/18/2023 at 17:46 */
#define TLF_REC_TYP_EXTR_POSN_D "00"
/* Constant TLF-REC-TYP-CUST-TXN-D created on 10/18/2023 at 17:46 */
#define TLF_REC_TYP_CUST_TXN_D "01"
/* Constant TLF-REC-TYP-ADMIN-TXN-D created on 10/18/2023 at 17:46 */
#define TLF_REC_TYP_ADMIN_TXN_D "04"
/* Constant TLF-REC-TYP-INVLD-POSTED-D created on 10/18/2023 at 17:46 */
#define TLF_REC_TYP_INVLD_POSTED_D "20"
/* Constant TLF-REC-TYP-INVLD-NOT-POSTED-D created on 10/18/2023 at 17:46 */
#define TLF_REC_TYP_INVLD_NOT_POSTED_D "21"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section atm_txn_alwd_constants
/* Constant ATM-TXN-ALWD-ON-US-D created on 10/18/2023 at 17:46 */
#define ATM_TXN_ALWD_ON_US_D "0"
/* Constant ATM-TXN-ALWD-NOT-ON-US-D created on 10/18/2023 at 17:46 */
#define ATM_TXN_ALWD_NOT_ON_US_D "1"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section cse_atm_constants
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section pos_deactvt_flg_constants
/* Constant POS-DEACTVT-FLG-ACTVT-D created on 10/18/2023 at 17:46 */
#define POS_DEACTVT_FLG_ACTVT_D "0"
/* Constant POS-DEACTVT-FLG-DEACTVT-D created on 10/18/2023 at 17:46 */
#define POS_DEACTVT_FLG_DEACTVT_D "1"
/* Constant POS-DEACTVT-FLG-DEACTVT-PEND-D created on 10/18/2023 at 17:46 */
#define POS_DEACTVT_FLG_DEACTVT_PEND_D "2"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section pos_dflt_chk_id_constants
/* Constant POS-DFLT-CHK-ID-CCD-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_CCD_D "01"
/* Constant POS-DFLT-CHK-ID-DRVR-LICENSE-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_DRVR_LICENSE_D "02"
/* Constant POS-DFLT-CHK-ID-DDA-NUM-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_DDA_NUM_D "03"
/* Constant POS-DFLT-CHK-ID-DB-CRD-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_DB_CRD_D "04"
/* Constant POS-DFLT-CHK-ID-PROP-CCC-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_PROP_CCC_D "05"
/* Constant POS-DFLT-CHK-ID-STATE-ID-NUM-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_STATE_ID_NUM_D "06"
/* Constant POS-DFLT-CHK-ID-SSN-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_SSN_D "07"
/* Constant POS-DFLT-CHK-ID-STUD-ID-NUM-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_STUD_ID_NUM_D "08"
/* Constant POS-DFLT-CHK-ID-EMP-NUM-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_EMP_NUM_D "09"
/* Constant POS-DFLT-CHK-ID-PSPRT-NUM-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_PSPRT_NUM_D "10"
/* Constant POS-DFLT-CHK-ID-MICR-DATA-D created on 10/18/2023 at 17:46 */
#define POS_DFLT_CHK_ID_MICR_DATA_D "11"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:34 */
#pragma section pos_msg_typ_constants
/* Constant POS-MSG-TYP-CRD-ISS-RVSL-D created on 10/18/2023 at 17:46 */
#define POS_MSG_TYP_CRD_ISS_RVSL_D "0402"
/* Constant POS-MSG-TYP-CRD-ISS-RVSL-ACK-D created on 10/18/2023 at 17:46 */
#define POS_MSG_TYP_CRD_ISS_RVSL_ACK_D "0412"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ps51_tkn_constants
/* Constant PS51-TKN-AUTHN-COLL-NO-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_AUTHN_COLL_NO_D "0"
/* Constant PS51-TKN-AUTHN-COLL-DATA-NO-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_AUTHN_COLL_DATA_NO_D "1"
/* Constant PS51-TKN-AUTHN-COLL-DATA-YES-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_AUTHN_COLL_DATA_YES_D "2"
/* Constant PS51-TKN-ECOMM-NOT-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_ECOMM_NOT_D "0"
/* Constant PS51-TKN-ECOMM-SECURE-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_ECOMM_SECURE_D "5"
/* Constant PS51-TKN-ECOMM-NONAUTH-MRCH-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_ECOMM_NONAUTH_MRCH_D "6"
/* Constant PS51-TKN-ECOMM-NONAUTH-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_ECOMM_NONAUTH_D "7"
/* Constant PS51-TKN-ECOMM-SECURE-NOT-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_ECOMM_SECURE_NOT_D "8"
/* Constant PS51-TKN-ECOMM-NONAUTH-NOSET-D created on 10/18/2023 at 17:46 */
#define PS51_TKN_ECOMM_NONAUTH_NOSET_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_bal_flg_constants
/* Constant PTD-BAL-FLG-BAL-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_FLG_BAL_D "5"
/* Constant PTD-BAL-FLG-BAL-BAD-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_FLG_BAL_BAD_D "6"
/* Constant PTD-BAL-FLG-BAL-INCOMPL-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_FLG_BAL_INCOMPL_D "7"
/* Constant PTD-BAL-FLG-FRC-BAL-INCOMPL-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_FLG_FRC_BAL_INCOMPL_D "8"
/* Constant PTD-BAL-FLG-FRC-BAL-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_FLG_FRC_BAL_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_bal_sppt_constants
/* Constant PTD-BAL-SPPT-BTCH-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_BTCH_D "0"
/* Constant PTD-BAL-SPPT-BTCH-SHIFT-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_BTCH_SHIFT_D "1"
/* Constant PTD-BAL-SPPT-BTCH-DAY-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_BTCH_DAY_D "2"
/* Constant PTD-BAL-SPPT-BTCH-SHIFT-DAY-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_BTCH_SHIFT_DAY_D "3"
/* Constant PTD-BAL-SPPT-SHIFT-DAY-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_SHIFT_DAY_D "4"
/* Constant PTD-BAL-SPPT-DAY-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_DAY_D "5"
/* Constant PTD-BAL-SPPT-NONE-D created on 10/18/2023 at 17:46 */
#define PTD_BAL_SPPT_NONE_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_baud_rate_constants
/* Constant PTD-BAUD-RATE-50-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_50_D "00"
/* Constant PTD-BAUD-RATE-75-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_75_D "01"
/* Constant PTD-BAUD-RATE-110-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_110_D "02"
/* Constant PTD-BAUD-RATE-134-5-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_134_5_D "03"
/* Constant PTD-BAUD-RATE-150-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_150_D "04"
/* Constant PTD-BAUD-RATE-300-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_300_D "05"
/* Constant PTD-BAUD-RATE-600-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_600_D "06"
/* Constant PTD-BAUD-RATE-1200-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_1200_D "07"
/* Constant PTD-BAUD-RATE-1800-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_1800_D "08"
/* Constant PTD-BAUD-RATE-2000-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_2000_D "09"
/* Constant PTD-BAUD-RATE-2400-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_2400_D "10"
/* Constant PTD-BAUD-RATE-3600-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_3600_D "11"
/* Constant PTD-BAUD-RATE-4800-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_4800_D "12"
/* Constant PTD-BAUD-RATE-7200-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_7200_D "13"
/* Constant PTD-BAUD-RATE-9600-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_9600_D "14"
/* Constant PTD-BAUD-RATE-19200-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_19200_D "15"
/* Constant PTD-BAUD-RATE-200-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_200_D "16"
/* Constant PTD-BAUD-RATE-AUTOBAUD-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_AUTOBAUD_D "17"
/* Constant PTD-BAUD-RATE-NONE-D created on 10/18/2023 at 17:46 */
#define PTD_BAUD_RATE_NONE_D "99"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_clerk_flg_constants
/* Constant PTD-CLERK-FLG-NO-TTL-L created on 10/18/2023 at 17:46 */
#define PTD_CLERK_FLG_NO_TTL_L 0
/* Constant PTD-CLERK-FLG-NETWK-TTL-L created on 10/18/2023 at 17:46 */
#define PTD_CLERK_FLG_NETWK_TTL_L 1
/* Constant PTD-CLERK-FLG-CASH-OUT-TTL-L created on 10/18/2023 at 17:46 */
#define PTD_CLERK_FLG_CASH_OUT_TTL_L 2
/* Constant PTD-CLERK-FLG-ALL-TTL-L created on 10/18/2023 at 17:46 */
#define PTD_CLERK_FLG_ALL_TTL_L 3
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_cutover_tc_constants
/* Constant PTD-CUTOVER-TC-DAY-CLOSE-D created on 10/18/2023 at 17:46 */
#define PTD_CUTOVER_TC_DAY_CLOSE_D "0"
/* Constant PTD-CUTOVER-TC-SHIFT-CLOSE-D created on 10/18/2023 at 17:46 */
#define PTD_CUTOVER_TC_SHIFT_CLOSE_D "1"
/* Constant PTD-CUTOVER-TC-BTCH-CLOSE-D created on 10/18/2023 at 17:46 */
#define PTD_CUTOVER_TC_BTCH_CLOSE_D "2"
/* Constant PTD-CUTOVER-TC-LGNT-FORCE-D created on 10/18/2023 at 17:46 */
#define PTD_CUTOVER_TC_LGNT_FORCE_D "3"
/* Constant PTD-CUTOVER-TC-DH-LGNT-FORCE-D created on 10/18/2023 at 17:46 */
#define PTD_CUTOVER_TC_DH_LGNT_FORCE_D "4"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_de_typ_constants
/* Constant PTD-DATA-ENCRYPT-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define PTD_DATA_ENCRYPT_TYP_NONE_D "00"
/* Constant PTD-DATA-ENCRYPT-TYP-ASCII-D created on 10/18/2023 at 17:46 */
#define PTD_DATA_ENCRYPT_TYP_ASCII_D "01"
/* Constant PTD-DATA-ENCRYPT-TYP-BIN-D created on 10/18/2023 at 17:46 */
#define PTD_DATA_ENCRYPT_TYP_BIN_D "02"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_enhnc_pauth_constants
/* Constant PTD-ENHNC-PREAUTH-NO-SPPT-D created on 10/18/2023 at 17:46 */
#define PTD_ENHNC_PREAUTH_NO_SPPT_D "0"
/* Constant PTD-ENHNC-PREAUTH-DB-ONLY-D created on 10/18/2023 at 17:46 */
#define PTD_ENHNC_PREAUTH_DB_ONLY_D "1"
/* Constant PTD-ENHNC-PREAUTH-CR-ONLY-D created on 10/18/2023 at 17:46 */
#define PTD_ENHNC_PREAUTH_CR_ONLY_D "2"
/* Constant PTD-ENHNC-PREAUTH-DB-CR-D created on 10/18/2023 at 17:46 */
#define PTD_ENHNC_PREAUTH_DB_CR_D "3"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_epin_typ_constants
/* Constant PTD-EPIN-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_NONE_D "00"
/* Constant PTD-EPIN-TYP-DES-PINPAD-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_DES_PINPAD_D "01"
/* Constant PTD-EPIN-TYP-DES-PINPAN-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_DES_PINPAN_D "02"
/* Constant PTD-EPIN-TYP-HDWR-DES-PINPAD-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_HDWR_DES_PINPAD_D "03"
/* Constant PTD-EPIN-TYP-HDWR-DES-PINPAN-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_HDWR_DES_PINPAN_D "04"
/* Constant PTD-EPIN-TYP-REVERSIBLE-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_REVERSIBLE_D "06"
/* Constant PTD-EPIN-TYP-DUKPT-D created on 10/18/2023 at 17:46 */
#define PTD_EPIN_TYP_DUKPT_D "07"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_mac_typ_constants
/* Constant PTD-MAC-TYP-NONE-D created on 10/18/2023 at 17:46 */
#define PTD_MAC_TYP_NONE_D "00"
/* Constant PTD-MAC-TYP-SFTWR-D created on 10/18/2023 at 17:46 */
#define PTD_MAC_TYP_SFTWR_D "01"
/* Constant PTD-MAC-TYP-PROP-SFTWR-D created on 10/18/2023 at 17:46 */
#define PTD_MAC_TYP_PROP_SFTWR_D "02"
/* Constant PTD-MAC-TYP-HDWR-D created on 10/18/2023 at 17:46 */
#define PTD_MAC_TYP_HDWR_D "03"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_rcncl_constants
/* Constant PTD-RCNCL-NO-TTL-D created on 10/18/2023 at 17:46 */
#define PTD_RCNCL_NO_TTL_D "0"
/* Constant PTD-RCNCL-DPC-TTL-D created on 10/18/2023 at 17:46 */
#define PTD_RCNCL_DPC_TTL_D "1"
/* Constant PTD-RCNCL-RTLR-ID-TTL-D created on 10/18/2023 at 17:46 */
#define PTD_RCNCL_RTLR_ID_TTL_D "2"
/* Constant PTD-RCNCL-RTLR-GRP-TTL-D created on 10/18/2023 at 17:46 */
#define PTD_RCNCL_RTLR_GRP_TTL_D "3"
/* Constant PTD-RCNCL-TERM-ID-TTL-D created on 10/18/2023 at 17:46 */
#define PTD_RCNCL_TERM_ID_TTL_D "4"
/* Constant PTD-RCNCL-CLERK-ID-TTL-D created on 10/18/2023 at 17:46 */
#define PTD_RCNCL_CLERK_ID_TTL_D "5"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_rec_num_constants
/* Constant PTD-REC-NUM-DYN-GNRL-L created on 10/18/2023 at 17:46 */
#define PTD_REC_NUM_DYN_GNRL_L 1
/* Constant PTD-REC-NUM-STATIC-GNRL-L created on 10/18/2023 at 17:46 */
#define PTD_REC_NUM_STATIC_GNRL_L 2
/* Constant PTD-REC-NUM-DYN-SCRATCH-PAD-L created on 10/18/2023 at 17:46 */
#define PTD_REC_NUM_DYN_SCRATCH_PAD_L 3
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_term_proto_constants
/* Constant PTD-TERM-PROTO-ASYNC-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_ASYNC_D "A"
/* Constant PTD-TERM-PROTO-BSYNC-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_BSYNC_D "B"
/* Constant PTD-TERM-PROTO-DIALUP-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_DIALUP_D "D"
/* Constant PTD-TERM-PROTO-SDLC-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_SDLC_D "S"
/* Constant PTD-TERM-PROTO-BSYNC-TEBCDIC-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_BSYNC_TEBCDIC_D "T"
/* Constant PTD-TERM-PROTO-X25-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_X25_D "X"
/* Constant PTD-TERM-PROTO-X21-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_PROTO_X21_D "Y"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:35 */
#pragma section pos_ptd_term_typ_constants
/* Constant PTD-TERM-TYP-SPDH-STD-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_SPDH_STD_D "41"
/* Constant PTD-TERM-TYP-NCR-2123-2126-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_NCR_2123_2126_D "43"
/* Constant PTD-TERM-TYP-NCR-2127-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_NCR_2127_D "44"
/* Constant PTD-TERM-TYP-NCR-7000-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_NCR_7000_D "45"
/* Constant PTD-TERM-TYP-VISA-I-DIAL-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_VISA_I_DIAL_D "70"
/* Constant PTD-TERM-TYP-VISA-II-DIAL-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_VISA_II_DIAL_D "71"
/* Constant PTD-TERM-TYP-MHI-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_MHI_D "78"
/* Constant PTD-TERM-TYP-HPDH-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_HPDH_D "D0"
/* Constant PTD-TERM-TYP-CSTM-1-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_CSTM_1_D "D1"
/* Constant PTD-TERM-TYP-CSTM-2-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_CSTM_2_D "D2"
/* Constant PTD-TERM-TYP-CSTM-3-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_CSTM_3_D "D3"
/* Constant PTD-TERM-TYP-CSTM-4-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_CSTM_4_D "D4"
/* Constant PTD-TERM-TYP-CSTM-5-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_CSTM_5_D "D5"
/* Constant PTD-TERM-TYP-SPDH-FUEL-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_SPDH_FUEL_D "D6"
/* Constant PTD-TERM-TYP-SPDH-ECSH-RGSTR-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_SPDH_ECSH_RGSTR_D "D7"
/* Constant PTD-TERM-TYP-SPDH-SCRPT-DISP-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_SPDH_SCRPT_DISP_D "D8"
/* Constant PTD-TERM-TYP-ITAL-ISO8583-93-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_ITAL_ISO8583_93_D "DG"
/* Constant PTD-TERM-TYP-APACS-30-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_APACS_30_D "DH"
/* Constant PTD-TERM-TYP-APACS-40-D created on 10/18/2023 at 17:46 */
#define PTD_TERM_TYP_APACS_40_D "DI"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:36 */
#pragma section pos_ptlf_rec_frmt_constants
/* Constant PTLF-REC-FRMT-BTCH-TTL-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_BTCH_TTL_D "0"
/* Constant PTLF-REC-FRMT-SHIFT-TTL-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_SHIFT_TTL_D "1"
/* Constant PTLF-REC-FRMT-DAY-TTL-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_DAY_TTL_D "2"
/* Constant PTLF-REC-FRMT-NETWK-TTL-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_NETWK_TTL_D "3"
/* Constant PTLF-REC-FRMT-CLERK-TTL-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_CLERK_TTL_D "4"
/* Constant PTLF-REC-FRMT-DATA-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_DATA_D "5"
/* Constant PTLF-REC-FRMT-SVC-8-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_SVC_8_D "8"
/* Constant PTLF-REC-FRMT-SVC-9-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_FRMT_SVC_9_D "9"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:36 */
#pragma section pos_ptlf_rec_typ_constants
/* Constant PTLF-REC-TYP-EXTR-POSN-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_EXTR_POSN_D "00"
/* Constant PTLF-REC-TYP-CUST-TXN-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_CUST_TXN_D "01"
/* Constant PTLF-REC-TYP-ADMIN-TXN-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_ADMIN_TXN_D "04"
/* Constant PTLF-REC-TYP-INVLD-POSTD-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_INVLD_POSTD_D "20"
/* Constant PTLF-REC-TYP-INVLD-POSTD-NOT-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_INVLD_POSTD_NOT_D "21"
/* Constant PTLF-REC-TYP-INVLD-POSTD-PRT-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_INVLD_POSTD_PRT_D "22"
/* Constant PTLF-REC-TYP-INVLD-DATA-D created on 10/18/2023 at 17:46 */
#define PTLF_REC_TYP_INVLD_DATA_D "23"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:36 */
#pragma section pos_siv_rslt_cde_constants
/* Constant POS-SIV-RSLT-NOT-YET-VALID-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_NOT_YET_VALID_D " "
/* Constant POS-SIV-RSLT-VALID-FAIL-DATA-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_VALID_FAIL_DATA_D "0"
/* Constant POS-SIV-RSLT-VALID-FAIL-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_VALID_FAIL_D "1"
/* Constant POS-SIV-RSLT-VALID-PASS-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_VALID_PASS_D "2"
/* Constant POS-SIV-RSLT-VALID-PASS-INFO-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_VALID_PASS_INFO_D "B"
/* Constant POS-SIV-RSLT-NO-EAF-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_NO_EAF_D "W"
/* Constant POS-SIV-RSLT-EAF-ERR-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_EAF_ERR_D "X"
/* Constant POS-SIV-RSLT-ISS-NOT-PRTCPT-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_ISS_NOT_PRTCPT_D "Y"
/* Constant POS-SIV-RSLT-DUP-CAVV-AAV-D created on 10/18/2023 at 17:46 */
#define POS_SIV_RSLT_DUP_CAVV_AAV_D "Z"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:36 */
#pragma section pos_tc_constants
/* Constant POS-TC-RESERVED-SLOT-D created on 10/18/2023 at 17:46 */
#define POS_TC_RESERVED_SLOT_D "00"
/* Constant POS-TC-PUR-D created on 10/18/2023 at 17:46 */
#define POS_TC_PUR_D "10"
/* Constant POS-TC-PRE-AUTH-PUR-D created on 10/18/2023 at 17:46 */
#define POS_TC_PRE_AUTH_PUR_D "11"
/* Constant POS-TC-PRE-AUTH-PUR-COMPL-D created on 10/18/2023 at 17:46 */
#define POS_TC_PRE_AUTH_PUR_COMPL_D "12"
/* Constant POS-TC-MAIL-PHN-ORDER-D created on 10/18/2023 at 17:46 */
#define POS_TC_MAIL_PHN_ORDER_D "13"
/* Constant POS-TC-MRCH-RTRN-D created on 10/18/2023 at 17:46 */
#define POS_TC_MRCH_RTRN_D "14"
/* Constant POS-TC-CASH-ADV-D created on 10/18/2023 at 17:46 */
#define POS_TC_CASH_ADV_D "15"
/* Constant POS-TC-CRD-VRFY-D created on 10/18/2023 at 17:46 */
#define POS_TC_CRD_VRFY_D "16"
/* Constant POS-TC-INQ-D created on 10/18/2023 at 17:46 */
#define POS_TC_INQ_D "17"
/* Constant POS-TC-PUR-CB-D created on 10/18/2023 at 17:46 */
#define POS_TC_PUR_CB_D "18"
/* Constant POS-TC-CHK-VRFY-D created on 10/18/2023 at 17:46 */
#define POS_TC_CHK_VRFY_D "19"
/* Constant POS-TC-CHK-GUAR-D created on 10/18/2023 at 17:46 */
#define POS_TC_CHK_GUAR_D "20"
/* Constant POS-TC-ADJ-PUR-D created on 10/18/2023 at 17:46 */
#define POS_TC_ADJ_PUR_D "21"
/* Constant POS-TC-ADJ-MRCH-RTRN-D created on 10/18/2023 at 17:46 */
#define POS_TC_ADJ_MRCH_RTRN_D "22"
/* Constant POS-TC-ADJ-CASH-ADV-D created on 10/18/2023 at 17:46 */
#define POS_TC_ADJ_CASH_ADV_D "23"
/* Constant POS-TC-ADJ-CB-D created on 10/18/2023 at 17:46 */
#define POS_TC_ADJ_CB_D "24"
/* Constant POS-TC-SV-CRD-ACTVT-D created on 10/18/2023 at 17:46 */
#define POS_TC_SV_CRD_ACTVT_D "25"
/* Constant POS-TC-SV-ADNL-CRD-ACTVT-D created on 10/18/2023 at 17:46 */
#define POS_TC_SV_ADNL_CRD_ACTVT_D "26"
/* Constant POS-TC-SV-REPLENISHMENT-D created on 10/18/2023 at 17:46 */
#define POS_TC_SV_REPLENISHMENT_D "27"
/* Constant POS-TC-SV-FULL-REDEMPTION-D created on 10/18/2023 at 17:46 */
#define POS_TC_SV_FULL_REDEMPTION_D "28"
/* Constant CSM-POS-TC-CF-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CF_D "F5"
/* Constant CSM-POS-TC-CF-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CF_ANU_D "F6"
/* Constant CSM-POS-TC-INQ-CF-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_INQ_CF_D "F7"
/* Constant CSM-POS-TC-PAG-RES-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PAG_RES_D "P0"
/* Constant CSM-POS-TC-PAG-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PAG_ANU_D "P1"
/* Constant CSM-POS-TC-VERAZ-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_VERAZ_D "V4"
/* Constant CSM-POS-TC-PULSOS-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PULSOS_D "A0"
/* Constant CSM-POS-TC-PROPINA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PROPINA_D "C0"
/* Constant CSM-POS-TC-DEB-AUT-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_DEB_AUT_D "D0"
/* Constant CSM-POS-TC-DAU-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_DAU_ANU_D "D1"
/* Constant CSM-POS-TC-PC-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PC_D "F0"
/* Constant CSM-POS-TC-PC-ANULACION-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PC_ANULACION_D "F1"
/* Constant CSM-POS-TC-PC-DEVOL-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PC_DEVOL_D "F2"
/* Constant CSM-POS-TC-PC-DEVOL-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_PC_DEVOL_ANU_D "F3"
/* Constant CSM-POS-TC-INQ-PC-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_INQ_PC_D "F4"
/* Constant CSM-POS-TC-CPTOS-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CPTOS_D "M0"
/* Constant CSM-POS-TC-CPTOS-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CPTOS_ANU_D "M1"
/* Constant CSM-POS-TC-CPTOS-DEV-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CPTOS_DEV_D "M2"
/* Constant CSM-POS-TC-CPTOS-INQ-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CPTOS_INQ_D "M4"
/* Constant CSM-POS-TC-CPTOS-CANJ-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CPTOS_CANJ_D "M5"
/* Constant CSM-POS-PULSOS-TEST-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_TEST_D "R0"
/* Constant CSM-POS-PULSOS-ALTA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_ALTA_D "R1"
/* Constant CSM-POS-PULSOS-ALTA-RECARGA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_ALTA_RECARGA_D "R2"
/* Constant CSM-POS-PULSOS-RECARGA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_RECARGA_D "R3"
/* Constant CSM-POS-PULSOS-ANUL-RECARGA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_ANUL_RECARGA_D "R4"
/* Constant CSM-POS-PULSOS-CONS-SALDO-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_CONS_SALDO_D "R5"
/* Constant CSM-POS-PULSOS-CONS-LINEA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_CONS_LINEA_D "R6"
/* Constant CSM-POS-PULSOS-CONS-OPERA-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_CONS_OPERA_D "R7"
/* Constant CSM-POS-PULSOS-CONS-TARJ-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_CONS_TARJ_D "R8"
/* Constant CSM-POS-PULSOS-CONS-PAGO-D created on 10/18/2023 at 17:46 */
#define CSM_POS_PULSOS_CONS_PAGO_D "R9"
/* Constant CSM-POS-TC-CD-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CD_D "L0"
/* Constant CSM-POS-TC-CD-ANULACION-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CD_ANULACION_D "L1"
/* Constant CSM-POS-TC-CD-DEVOL-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CD_DEVOL_D "L2"
/* Constant CSM-POS-TC-CD-DEVOL-ANU-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CD_DEVOL_ANU_D "L3"
/* Constant CSM-POS-TC-INQ-CD-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_INQ_CD_D "L4"
/* Constant CSM-POS-TC-QR-CONS-COMER-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_QR_CONS_COMER_D "Q1"
/* Constant CSM-POS-TC-QR-CONS-ESTADO-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_QR_CONS_ESTADO_D "Q2"
/* Constant CSM-POS-TC-QR-CONFIRMACION-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_QR_CONFIRMACION_D "Q3"
/* Constant CSM-POS-TC-QR-ANULACION-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_QR_ANULACION_D "Q4"
/* Constant CSM-POS-TC-CR-PRE-ADJ-D created on 10/18/2023 at 17:46 */
#define CSM_POS_TC_CR_PRE_ADJ_D "25"
/* Constant POS-TC-TERM-TTL-BTCH-D created on 10/18/2023 at 17:46 */
#define POS_TC_TERM_TTL_BTCH_D "50"
/* Constant POS-TC-TERM-TTL-SHIFT-D created on 10/18/2023 at 17:46 */
#define POS_TC_TERM_TTL_SHIFT_D "51"
/* Constant POS-TC-TERM-TTL-DAY-D created on 10/18/2023 at 17:46 */
#define POS_TC_TERM_TTL_DAY_D "52"
/* Constant POS-TC-TERM-NETWK-TTL-CUR-D created on 10/18/2023 at 17:46 */
#define POS_TC_TERM_NETWK_TTL_CUR_D "53"
/* Constant POS-TC-TERM-NETWK-TTL-PREV-D created on 10/18/2023 at 17:46 */
#define POS_TC_TERM_NETWK_TTL_PREV_D "54"
/* Constant POS-TC-TERM-TTL-CRD-TYP-D created on 10/18/2023 at 17:46 */
#define POS_TC_TERM_TTL_CRD_TYP_D "55"
/* Constant POS-TC-MAIL-RQST-D created on 10/18/2023 at 17:46 */
#define POS_TC_MAIL_RQST_D "56"
/* Constant POS-TC-SMA-PASSTHRU-D created on 10/18/2023 at 17:46 */
#define POS_TC_SMA_PASSTHRU_D "57"
/* Constant POS-TC-SMA-STORED-D created on 10/18/2023 at 17:46 */
#define POS_TC_SMA_STORED_D "58"
/* Constant POS-TC-MDX-VAL-LOAD-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_VAL_LOAD_D "S5"
/* Constant POS-TC-MDX-VAL-UNLOAD-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_VAL_UNLOAD_D "S6"
/* Constant POS-TC-MDX-PMNT-LOG-UPLD-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_PMNT_LOG_UPLD_D "S7"
/* Constant POS-TC-MDX-EXCPT-LOG-UPLD-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_EXCPT_LOG_UPLD_D "S8"
/* Constant POS-TC-MDX-BTCH-CLOSE-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_BTCH_CLOSE_D "S9"
/* Constant POS-TC-MDX-SHIFT-CLOSE-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_SHIFT_CLOSE_D "SA"
/* Constant POS-TC-MDX-DAY-CLOSE-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_DAY_CLOSE_D "SB"
/* Constant POS-TC-MDX-INQ-BTCH-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_INQ_BTCH_D "SC"
/* Constant POS-TC-MDX-INQ-SHIFT-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_INQ_SHIFT_D "SD"
/* Constant POS-TC-MDX-INQ-DAY-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_INQ_DAY_D "SE"
/* Constant POS-TC-MDX-REMOTE-AUTH-D created on 10/18/2023 at 17:46 */
#define POS_TC_MDX_REMOTE_AUTH_D "SF"
/* Constant POS-TC-INQ-CLERK-TTL-D created on 10/18/2023 at 17:46 */
#define POS_TC_INQ_CLERK_TTL_D "AJ"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:36 */
#pragma section pos_txn_prfl_constants
/* Constant POS-TXN-PRFL-AUTH-ONLY-D created on 10/18/2023 at 17:46 */
#define POS_TXN_PRFL_AUTH_ONLY_D "0"
/* Constant POS-TXN-PRFL-AUTH-CAPTR-D created on 10/18/2023 at 17:46 */
#define POS_TXN_PRFL_AUTH_CAPTR_D "1"
/* Constant POS-TXN-PRFL-AUTH-FUTR-ELEC-D created on 10/18/2023 at 17:46 */
#define POS_TXN_PRFL_AUTH_FUTR_ELEC_D "2"
/* Constant POS-TXN-PRFL-TERM-CNTL-CAPTR-D created on 10/18/2023 at 17:46 */
#define POS_TXN_PRFL_TERM_CNTL_CAPTR_D "3"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:37 */
#pragma section pos_wait_conf_flg_constants
/* Constant POS-WAIT-CONF-WAIT-NONE-D created on 10/18/2023 at 17:46 */
#define POS_WAIT_CONF_WAIT_NONE_D "0"
/* Constant POS-WAIT-CONF-WAIT-BTCH-CLOS-D created on 10/18/2023 at 17:46 */
#define POS_WAIT_CONF_WAIT_BTCH_CLOS_D "1"
/* Constant POS-WAIT-CONF-WAIT-SHFT-CLOS-D created on 10/18/2023 at 17:46 */
#define POS_WAIT_CONF_WAIT_SHFT_CLOS_D "2"
/* Constant POS-WAIT-CONF-WAIT-DLY-CLOSE-D created on 10/18/2023 at 17:46 */
#define POS_WAIT_CONF_WAIT_DLY_CLOSE_D "3"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:37 */
#pragma section cse_pos_constants
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:37 */
#pragma section csm_limit_constants
/* Constant CSM-LMT-ADELANTO-L created on 10/18/2023 at 17:46 */
#define CSM_LMT_ADELANTO_L 0
/* Constant CSM-LMT-CONTADO-L created on 10/18/2023 at 17:46 */
#define CSM_LMT_CONTADO_L 1
/* Constant CSM-LMT-CUOTAS-L created on 10/18/2023 at 17:46 */
#define CSM_LMT_CUOTAS_L 2
/* Constant CSM-LMT-PREST-CON-L created on 10/18/2023 at 17:46 */
#define CSM_LMT_PREST_CON_L 3
/* Constant CSM-LMT-PREST-FIN-L created on 10/18/2023 at 17:46 */
#define CSM_LMT_PREST_FIN_L 4
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:46:37 */
#pragma section ipf
/* Record IPF created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __ipf
typedef struct __ipf
{
   struct
   {
      long long                       prefijo;
      short                           largo_tarjeta;
      short                           largo_prefijo;
   } prikey;
   char                            servicio[2];
} ipf_def;
#define ipf_def_Size 14
#pragma section bines
/* Record BINES created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __bines
typedef struct __bines
{
   char                            bin[11];
   char                            largo_bin[2];
   char                            largo_tarjeta[2];
   char                            cod_procesador[4];
   char                            nro_ica[11];
   char                            cod_pais[3];
   char                            mca_mci;
   char                            mca_maestro;
   char                            mca_cirrus;
   char                            ind_pm_local;
   char                            user_fld[43];
} bines_def;
#define bines_def_Size 80
#pragma section diferidas
/* Record DIFERIDAS created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __diferidas
typedef struct __diferidas
{
   char                            tipo[3];
   char                            nro_secuencial[4];
   char                            renglon[2];
   char                            tran_dat[6];
   char                            crd_accpt_id[8];
   char                            crd_num[16];
   char                            tcc;
   char                            exp_dat[5];
   char                            cuota[2];
   char                            amt_1[11];
   char                            apprv_cde[8];
   char                            resp_cde[3];
   char                            use_fld1[7];
   char                            apprv_cde_ichg[6];
   char                            orig[3];
   char                            flag1[3];
   char                            crncy;
   char                            tran_cde;
   char                            tran_tim[6];
   char                            entry_mde[3];
   char                            flag_cvc;
   char                            responder;
} diferidas_def;
#define diferidas_def_Size 101
#pragma section moni
/* Record MONI created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __moni
typedef struct __moni
{
   char                            process[16];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } ptlf_date;
   char                            cfiid_rout;
   char                            proc_mde;
   struct
   {
      char                            dest[16];
      short                           dpc;
      char                            cfiid[4];
   } rout_tbl[8];
   union
   {
      long long                       ptlf_cur_rec;
      struct
      {
         __int32_t                       p_block;
         __int32_t                       p_record;
      } ptlf_cur_addr;
   } u_ptlf_cur_rec;
   union
   {
      long long                       ptlf_nxt_rec;
      struct
      {
         __int32_t                       p_block;
         __int32_t                       p_record;
      } ptlf_nxt_addr;
   } u_ptlf_nxt_rec;
   struct
   {
      struct
      {
         char                            val[4];
         char                            stat;
      } term_fiid[20];
      struct
      {
         char                            val[4];
         char                            stat;
      } card_fiid[20];
      struct
      {
         char                            val[2];
         char                            stat;
      } card_typ[20];
      struct
      {
         char                            val[4];
         char                            stat;
      } auth_typ[20];
      struct
      {
         char                            val[2];
         char                            stat;
      } tran_cde_tc[20];
      struct
      {
         char                            val[4];
         char                            stat;
      } cpf_fiid[20];
      struct
      {
         char                            val[11];
         char                            stat;
      } cpf_prefix[20];
   } filters;
   struct
   {
      char                            tkn_id[2];
   } tkn_to_send[45];
   char                            cutover_pending;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cutover_date;
   char                            usr_fld[399];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
} moni_def;
#define moni_def_Size 1500
#pragma section devl
/* Record DEVL created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __devl
typedef struct __devl
{
   struct
   {
      char                            nro_algo[4];
   } prikey;
   char                            descrip[20];
   char                            iva_basico[3];
   char                            iva_minimo[3];
   struct
   {
      char                            devl_credito[3];
      char                            devl_debito[3];
      char                            devl_debito2[3];
      char                            inicio[6];
      char                            fin[6];
   } devl_period[3];
   char                            usr_fld1[22];
   char                            limite_ui[6];
   char                            ley[6];
   char                            uso_futuro[10];
   struct
   {
      char                            cot_ui[12];
      char                            cot_dolar[12];
      char                            cot_date[4];
   } cotiza[5];
   struct
   {
      char                            bin[6];
   } prepa[30];
   char                            usr_fld[4];
   char                            filler_0;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} devl_def;
#define devl_def_Size 480
#pragma section leyf
/* Record LEYF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __leyf
typedef struct __leyf
{
   struct
   {
      char                            indi[2];
   } prikey;
   char                            ley[8];
   char                            iva_desc[4];
   char                            solo_extr;
   char                            inicio[6];
   char                            fin[6];
   char                            impacta_monto;
   char                            valida_rubros;
   char                            cant_rubros[3];
   struct
   {
      char                            nro_rubro[5];
   } rubros[70];
   char                            uso_futuro[50];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} leyf_def;
#define leyf_def_Size 450
#pragma section tulf
/* Record TULF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tulf
typedef struct __tulf
{
   struct
   {
      char                            fiid_emisor[4];
      char                            prefix[8];
   } prikey;
   char                            proceso[16];
   short                           dpc;
   char                            fill_usr[2];
   char                            red[20][4];
   char                            fiid_adquirente[50][4];
   char                            tipo_mensaje[50][4];
   char                            tipo_transaccion[50][2];
   char                            uso_futuro[200];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} tulf_def;
#define tulf_def_Size 830
#pragma section nbf_prikey
/* Definition NBF-PRIKEY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __nbf_prikey
typedef struct __nbf_prikey
{
   char                            prefix[19];
} nbf_prikey_def;
#define nbf_prikey_def_Size 19
#pragma section nbf
/* Record NBF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __nbf
typedef struct __nbf
{
   struct
   {
      char                            prefix[19];
   } prikey;
   char                            rsn_cde[2];
   char                            add_dat[6];
   char                            exp_dat[4];
   char                            filler_0;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            user_fld2[24];
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
} nbf_def;
#define nbf_def_Size 84
#pragma section bef_prikey
/* Definition BEF-PRIKEY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __bef_prikey
typedef struct __bef_prikey
{
   char                            prefix[19];
   char                            rsn_cde[2];
} bef_prikey_def;
#define bef_prikey_def_Size 21
#pragma section bef
/* Record BEF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __bef
typedef struct __bef
{
   struct
   {
      char                            prefix[19];
      char                            rsn_cde[2];
   } prikey;
   char                            add_dat[6];
   char                            exp_dat[4];
   char                            filler_0;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            user_fld2[24];
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
} bef_def;
#define bef_def_Size 84
#pragma section blq
/* Record BLQ created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __blq
typedef struct __blq
{
   struct
   {
      char                            id_campo[4];
      char                            campo_data[41];
      char                            cod_pais[3];
   } prikey;
   char                            comentario[25];
   char                            filler_0[141];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} blq_def;
#define blq_def_Size 232
#pragma section info
/* Definition INFO created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __info
typedef struct __info
{
   char                            tran_cde[2];
   char                            tid[15];
   char                            filler_0;
   long long                       amt_1;
   long long                       amt_2;
   long long                       resto;
   char                            cleared;
   char                            termid[16];
   char                            retail_id[19];
   char                            apprv_cde[8];
} info_def;
#define info_def_Size 86
#pragma section vlf
/* Record VLF created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __vlf
typedef struct __vlf
{
   struct
   {
      char                            pan[19];
      char                            cupon[4];
      char                            orig_dat[6];
      char                            fldkey[12];
   } devl;
   struct
   {
      char                            pan[19];
      long long                       amt_1;
      char                            ref_num[12];
      char                            orig_dat[6];
      char                            fldkey[12];
   } anul_pre;
   struct
   {
      char                            tran_cde[2];
      char                            tid[15];
      char                            filler_0;
      long long                       amt_1;
      long long                       amt_2;
      long long                       resto;
      char                            cleared;
      char                            termid[16];
      char                            retail_id[19];
      char                            apprv_cde[8];
   } info;
   char                            estado;
   char                            fille[49];
} vlf_def;
#define vlf_def_Size 234
#pragma section rfbino
/* Record RFBINO created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __rfbino
typedef struct __rfbino
{
   char                            rec_cnt[9];
   union
   {
      char                            info[27];
      struct
      {
         char                            rec_typ[2];
         char                            ref_typ;
         char                            appl[2];
         char                            grp[4];
         char                            tape_date[8];
         char                            tape_tim[4];
         char                            ln[4];
         char                            rel_num[2];
      } file_header;
      struct
      {
         char                            rec_typ[2];
         char                            crd_iss[4];
         char                            usr_fld_bh[21];
      } block_header;
      struct
      {
         char                            bin[11];
         char                            crd_len[2];
         char                            bin_len[2];
         char                            crd_typ[2];
         char                            usr_fld_bd[10];
      } bin_data;
      struct
      {
         char                            rec_typ[2];
         char                            num_recs[9];
         char                            usr_fld_bt[16];
      } block_trailer;
      struct
      {
         char                            rec_typ[2];
         char                            num_recs[9];
         char                            nxt_file_ind;
         char                            usr_fld_ft[15];
      } file_trailer;
   } u_info;
   char                            usr_fld[14];
} rfbino_def;
#define rfbino_def_Size 50
#pragma section rfbinx
/* Record RFBINX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __rfbinx
typedef struct __rfbinx
{
   struct
   {
      char                            bin[11];
   } prikey;
   char                            crd_typ[2];
   char                            crd_len[2];
   char                            bin_len[2];
   char                            prod_ind;
   union
   {
      char                            proc_typ;
      char                            vi_proc_typ;
      char                            mc_proc_typ;
      char                            ax_proc_typ;
      char                            di_proc_typ;
      char                            ma_proc_typ;
      char                            ci_proc_typ;
   } u_proc_typ;
   char                            cntry[3];
   char                            blnc;
   char                            bin_tkn;
   char                            usr_fld[26];
} rfbinx_def;
#define rfbinx_def_Size 50
#pragma section aco
/* Record ACO created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __aco
typedef struct __aco
{
   char                            cod_tbla[2];
   char                            rango_mayor[18];
   char                            cod_tbla_1[2];
   char                            nro_issuer[11];
   char                            secuencia_1[2];
   char                            cod_tbla_2[2];
   char                            region;
   char                            pais[3];
   char                            secuencia[6];
   char                            usr_filler_1[3];
   char                            rango_menor[18];
   char                            nombre[25];
   char                            marca_adq[3];
   char                            marca_refer_adq[3];
   char                            ent_unif_otor_adq[2];
   char                            ent_suc_otor_adq[2];
   char                            ind_ica_local_adq[2];
   char                            ident_prod;
   char                            flag_abm_batch;
   char                            moneda[3];
   char                            telex[3][15];
   char                            telefono[30];
   char                            acquirer_switch;
   char                            prod_id[3];
   char                            marca[3];
   char                            marca_refer[3];
   char                            convenio[3];
   char                            card_prog_id[3];
   char                            dnr_issuer_iic[2];
   char                            dnr_moneda_alfa[3];
   char                            dnr_nom_pais[24];
   char                            estado;
   char                            mca_observado;
   char                            mca_seguridad;
   char                            mca_vision;
   char                            ent_unif_otor[2];
   char                            ent_suc_otor[2];
   char                            ind_ica_local[2];
   char                            pref_propio;
   char                            mapping_service_ind;
   char                            usr_filler_2[14];
} aco_def;
#define aco_def_Size 256
#pragma section blcbi
/* Record BLCBI created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __blcbi
typedef struct __blcbi
{
   char                            bin[11];
   char                            crd_typ[2];
   char                            usr_fld[7];
} blcbi_def;
#define blcbi_def_Size 20
#pragma section nmm
/* Definition NMM created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __nmm
typedef struct __nmm
{
   struct
   {
      char                            stat[2];
      char                            path[22];
   } route;
   char                            typ[4];
   char                            byte_map[16];
   char                            trace_no[6];
   char                            tran_dat[4];
   struct
   {
      char                            hh[2];
      char                            minute[2];
      char                            ss[2];
   } tran_tim;
   char                            nm_info_cde[3];
   char                            password[16];
   char                            filler_0[15];
} nmm_def;
#define nmm_def_Size 94
#pragma section nmmkey
/* Definition NMMKEY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __nmmkey
typedef struct __nmmkey
{
   struct
   {
      char                            stat[2];
      char                            path[22];
   } route;
   char                            typ[4];
   char                            byte_map[16];
   char                            trace_no[6];
   char                            tran_dat[4];
   struct
   {
      char                            hh[2];
      char                            minute[2];
      char                            ss[2];
   } tran_tim;
   char                            nm_info_cde[3];
   struct
   {
      char                            key_dir[2];
      char                            chk_digits[6];
      char                            x917_csm_data[200];
   } key_mgmt;
} nmmkey_def;
#define nmmkey_def_Size 271
#pragma section sec_altkey
/* Definition SEC-ALTKEY created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __sec_altkey
typedef struct __sec_altkey
{
   short                           user_grp;
   __int32_t                       user_num;
} sec_altkey_def;
#define sec_altkey_def_Size 6
#pragma section sec_base_info
/* Definition SEC-BASE-INFO created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __sec_base_info
typedef struct __sec_base_info
{
   char                            grp_desc[20];
   char                            user_desc[20];
   char                            password[8];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } password_chg_dat;
   char                            resource_node[12][16];
   char                            sta[9][24];
   char                            strt_tim[4];
   char                            end_tim[4];
   char                            prod_ind_ext[256];
   short                           last_logon_dat_tim[3];
   char                            max_logon_attempts[2];
   char                            cur_logon_attempts[2];
   char                            logoff_interval[5];
   char                            masking_flg;
   char                            user_fld1[14];
} sec_base_info_def;
#define sec_base_info_def_Size 756
#pragma section sec_prikey
/* Definition SEC-PRIKEY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __sec_prikey
typedef struct __sec_prikey
{
   char                            alias[16];
   char                            file_id[4];
} sec_prikey_def;
#define sec_prikey_def_Size 20
#pragma section sec_scrn_access
/* Definition SEC-SCRN-ACCESS created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __sec_scrn_access
typedef struct __sec_scrn_access
{
   struct
   {
      short                           scrn_prod;
      struct
      {
         char                            r_access;
         char                            a_access;
         char                            d_access;
         char                            u_access;
      } scrn_access;
   } scrn_access_list[48];
} sec_scrn_access_def;
#define sec_scrn_access_def_Size 288
#pragma section cmd
/* Definition CMD created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __cmd
typedef struct __cmd
{
   char                            typ[4];
   union
   {
      char                            data[132];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cutover_dat;
      struct
      {
         char                            fiid[4];
         char                            fname[24];
         char                            refr_grp[4];
         char                            refr_typ;
         char                            refr_ind;
      } newfile;
      struct
      {
         char                            fiid[4];
      } warmboot;
      char                            atmlogname[35];
      char                            term_id[16];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } tlf_dat;
      struct
      {
         short                           term_num;
         char                            term_nam[16];
      } sta;
      struct
      {
         char                            fiid[4];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } cur_bus_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } nxt_bus_dat;
      } bnk_cutover;
      struct
      {
         char                            grp[4];
      } extr;
      struct
      {
         char                            subtyp[4];
         char                            term_id[16];
         char                            pro_nam[16];
         char                            aci_typ_exp[96];
      } typ_exp;
   } u_data;
} cmd_def;
#define cmd_def_Size 136
#pragma section msg_header
/* Definition MSG-HEADER created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_header
typedef struct __msg_header
{
   short                           repl_cde;
   char                            appl_cde[2];
   char                            tran_cde[2];
   char                            term_id[24];
   char                            omf_audit;
   char                            frmt_cde;
   struct
   {
      short                           err_cde;
      short                           err_sub_cde;
   } err_status;
   char                            lconf_name[35];
   char                            masking_flg;
   struct
   {
      char                            ln[4];
      char                            fiid[4];
      char                            regn[4];
      char                            brch[4];
      short                           user_grp;
      __int32_t                       user_num;
   } user_data;
   char                            site_prod_ind[32];
   char                            err_num[4];
   char                            err_txt[70];
} msg_header_def;
#define msg_header_def_Size 200
#pragma section msg_security
/* Definition MSG-SECURITY created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_security
typedef struct __msg_security
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   char                            alias[16];
   char                            password[8];
   char                            new_password[8];
   char                            screen_id[4];
   char                            end_tim[4];
   char                            logoff_interval[5];
   char                            user_prod_ind[32];
   char                            resource_node[12][16];
} msg_security_def;
#define msg_security_def_Size 469
#pragma section msg_err
/* Definition MSG-ERR created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_err
typedef struct __msg_err
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
} msg_err_def;
#define msg_err_def_Size 200
#pragma section msg_file_maint_1024
/* Definition MSG-FILE-MAINT-1024 created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_1024
typedef struct __msg_file_maint_1024
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[1024];
} msg_file_maint_1024_def;
#define msg_file_maint_1024_def_Size 1252
#pragma section msg_file_maint_2048
/* Definition MSG-FILE-MAINT-2048 created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_2048
typedef struct __msg_file_maint_2048
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[2048];
} msg_file_maint_2048_def;
#define msg_file_maint_2048_def_Size 2276
#pragma section msg_file_maint_4096
/* Definition MSG-FILE-MAINT-4096 created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_4096
typedef struct __msg_file_maint_4096
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[4096];
} msg_file_maint_4096_def;
#define msg_file_maint_4096_def_Size 4324
#pragma section msg_file_maint_5120
/* Definition MSG-FILE-MAINT-5120 created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_5120
typedef struct __msg_file_maint_5120
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[5120];
} msg_file_maint_5120_def;
#define msg_file_maint_5120_def_Size 5348
#pragma section msg_file_maint_9216
/* Definition MSG-FILE-MAINT-9216 created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_9216
typedef struct __msg_file_maint_9216
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[9216];
} msg_file_maint_9216_def;
#define msg_file_maint_9216_def_Size 9444
#pragma section msg_file_maint_12288
/* Definition MSG-FILE-MAINT-12288 created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_12288
typedef struct __msg_file_maint_12288
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[12288];
} msg_file_maint_12288_def;
#define msg_file_maint_12288_def_Size 12516
#pragma section msg_list
/* Definition MSG-LIST created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_list
typedef struct __msg_list
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[32];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   char                            env_data;
   char                            setl_data;
   struct
   {
      char                            val[28];
      short                           len;
   } key_data[5];
   short                           line_cnt;
   char                            line_data[18][78];
   union
   {
      struct
      {
         short                           pos_data[50];
      } position_block;
      struct
      {
         __int32_t                       pos_key;
         short                           pos_filler[48];
      } position_key;
   } u_position_block;
   char                            hdr1_pos[2];
   char                            hdr2_pos[2];
   char                            hdr_cnt[2];
} msg_list_def;
#define msg_list_def_Size 1864
#pragma section atm_comm_stat
/* Definition ATM-COMM-STAT created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __atm_comm_stat
typedef struct __atm_comm_stat
{
   char                            cmd_typ[4];
   short                           sta_num;
   char                            sta_sym_name[16];
} atm_comm_stat_def;
#define atm_comm_stat_def_Size 22
#pragma section omf_extract_msg
/* Definition OMF-EXTRACT-MSG created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __omf_extract_msg
typedef struct __omf_extract_msg
{
   short                           repl_cod;
   char                            rel_num[2];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } strt_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } end_dat;
   char                            label_typ[3];
   char                            tape_drive[8];
} omf_extract_msg_def;
#define omf_extract_msg_def_Size 27
#pragma section user_context
/* Definition USER-CONTEXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __user_context
typedef struct __user_context
{
   char                            lnet[4];
   char                            new_lnet[4];
   char                            lconf_name[35];
   struct
   {
      char                            alias[16];
      char                            filler_0;
      short                           user_grp;
      __int32_t                       user_num;
      char                            fiid[4];
      char                            regn[4];
      char                            brch[4];
      char                            user_prod_ind[32];
      char                            site_prod_ind[32];
      short                           curr_prod;
      char                            omf_audit;
   } user_data;
   char                            masking_flg;
   struct
   {
      struct
      {
         short                           scrn_prod;
         struct
         {
            char                            r_access;
            char                            a_access;
            char                            d_access;
            char                            u_access;
         } scrn_access;
      } scrn_access_list[48];
   } scrn_access_info;
   struct
   {
      char                            prog_prefix[6];
      char                            prog_suffix[4];
   } prog_name;
   char                            new_prog_suffix[4];
   short                           logon_func;
   union
   {
      char                            user_fld[38];
      struct
      {
         char                            crtauth_dest[4];
         char                            crtauth_src[4];
         char                            rqmega_dest[4];
         char                            filler_1[26];
      } crtauth_data;
      struct
      {
         char                            filler_2[12];
         char                            logoff_interval[5];
         char                            rel_indicator;
         char                            filler_3[20];
      } logoff_interval_data;
      struct
      {
         char                            filler_4[18];
         char                            view_id[2];
         char                            filler_5[18];
      } view_data;
      struct
      {
         char                            filler_6[20];
         char                            dat_frmt_opt;
         char                            filler_7[17];
      } dat_frmt;
      struct
      {
         char                            filler_8[21];
         char                            password[16];
         char                            filler_9;
      } password_data;
   } u_user_fld;
   char                            opr_title[6];
   unsigned short                  rn_num;
   char                            resource_node[10][16];
} user_context_def;
#define user_context_def_Size 656
#pragma section csfc_user_context
/* Definition CSFC-USER-CONTEXT created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __csfc_user_context
typedef struct __csfc_user_context
{
   char                            fiid[4];
   char                            crd_num[19];
   char                            mbr_num[3];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cstp_dat;
   char                            fsf_rec_typ[2];
   char                            fsf_term_postal_cde[10];
   char                            fsf_term_cntry_cde[3];
   char                            fsf_merch_cat_cde[4];
   char                            fsf_exp_dat[4];
   char                            fsf_crd_postal_cde[10];
   char                            first_prog_suffix[4];
   char                            second_prog_suffix[4];
   char                            filler_0;
} csfc_user_context_def;
#define csfc_user_context_def_Size 74
#pragma section user_cntx_caf_info
/* Definition USER-CNTX-CAF-INFO created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __user_cntx_caf_info
typedef struct __user_cntx_caf_info
{
   char                            acct_num[19];
   char                            caf_mbr_num[3];
} user_cntx_caf_info_def;
#define user_cntx_caf_info_def_Size 22
#pragma section cmd_msg
/* Definition CMD-MSG created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cmd_msg
typedef struct __cmd_msg
{
   short                           repl_cde;
   char                            user_id[16];
   char                            password[16];
   short                           obj_typ;
   short                           typ;
   char                            term_id[16];
   short                           grp_num;
   __int32_t                       user_num;
   char                            nam[16];
   char                            ln[4];
   char                            fiid[4];
   char                            regn[4];
   char                            brch[4];
   char                            prod[6];
   char                            dat[6];
   char                            lconf_fname[35];
   char                            fname[35];
   union
   {
      char                            loadkey_opt;
      char                            send_stat_opt;
   } u_loadkey_opt;
   char                            user_fld;
   short                           msg_num;
   short                           quote_num;
   short                           quote_len;
   char                            qoute[132];
   short                           hopr_num[6];
   __int32_t                       cash_amt[6];
   char                            pro_nam[16];
   short                           process_num;
   short                           scrn_num;
   short                           resp_lines;
   struct
   {
      union
      {
         char                            data_line[78];
         struct
         {
            struct
            {
               char                            ws_resp_fld[3];
            } ws_data_line[26];
         } ws_data_line_r;
         struct
         {
            char                            filler_0;
            char                            ws_item_conf[25][3];
            char                            filler_1[2];
         } ws_grp_conf;
      } u_data_line;
   } resp_line[12];
   short                           hopr_num_addl[2];
   __int32_t                       cash_amt_addl[2];
} cmd_msg_def;
#define cmd_msg_def_Size 1320
#pragma section msg_header_ext
/* Definition MSG-HEADER-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_header_ext
typedef struct __msg_header_ext
{
   short                           repl_cde;
   char                            appl_cde[2];
   char                            tran_cde[2];
   char                            term_id[24];
   char                            omf_audit;
   char                            frmt_cde;
   struct
   {
      short                           err_cde;
      short                           err_sub_cde;
   } err_status;
   char                            lconf_name[35];
   char                            masking_flg;
   struct
   {
      char                            ln[4];
      char                            fiid[4];
      char                            regn[4];
      char                            brch[4];
      short                           user_grp;
      __int32_t                       user_num;
   } user_data;
   char                            site_prod_ind[256];
   char                            err_num[4];
   char                            err_txt[70];
} msg_header_ext_def;
#define msg_header_ext_def_Size 424
#pragma section msg_security_ext
/* Definition MSG-SECURITY-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_security_ext
typedef struct __msg_security_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   char                            alias[16];
   char                            password[8];
   char                            new_password[8];
   char                            screen_id[4];
   char                            end_tim[4];
   char                            logoff_interval[5];
   char                            user_prod_ind[256];
   char                            resource_node[12][16];
} msg_security_ext_def;
#define msg_security_ext_def_Size 917
#pragma section msg_err_ext
/* Definition MSG-ERR-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_err_ext
typedef struct __msg_err_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
} msg_err_ext_def;
#define msg_err_ext_def_Size 424
#pragma section msg_file_maint_1024_ext
/* Definition MSG-FILE-MAINT-1024-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_1024_ext
typedef struct __msg_file_maint_1024_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[1024];
} msg_file_maint_1024_ext_def;
#define msg_file_maint_1024_ext_def_Size 1476
#pragma section msg_file_maint_2048_ext
/* Definition MSG-FILE-MAINT-2048-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_2048_ext
typedef struct __msg_file_maint_2048_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[2048];
} msg_file_maint_2048_ext_def;
#define msg_file_maint_2048_ext_def_Size 2500
#pragma section msg_file_maint_4096_ext
/* Definition MSG-FILE-MAINT-4096-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_4096_ext
typedef struct __msg_file_maint_4096_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[4096];
} msg_file_maint_4096_ext_def;
#define msg_file_maint_4096_ext_def_Size 4548
#pragma section msg_file_maint_5120_ext
/* Definition MSG-FILE-MAINT-5120-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_5120_ext
typedef struct __msg_file_maint_5120_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[5120];
} msg_file_maint_5120_ext_def;
#define msg_file_maint_5120_ext_def_Size 5572
#pragma section msg_file_maint_9216_ext
/* Definition MSG-FILE-MAINT-9216-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_9216_ext
typedef struct __msg_file_maint_9216_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[9216];
} msg_file_maint_9216_ext_def;
#define msg_file_maint_9216_ext_def_Size 9668
#pragma section msg_file_maint_12288_ext
/* Definition MSG-FILE-MAINT-12288-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_file_maint_12288_ext
typedef struct __msg_file_maint_12288_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   struct
   {
      char                            fm_timestamp[16];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            filler_0;
   } last_fm;
   char                            rec_image[12288];
} msg_file_maint_12288_ext_def;
#define msg_file_maint_12288_ext_def_Size 12740
#pragma section msg_list_ext
/* Definition MSG-LIST-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __msg_list_ext
typedef struct __msg_list_ext
{
   struct
   {
      short                           repl_cde;
      char                            appl_cde[2];
      char                            tran_cde[2];
      char                            term_id[24];
      char                            omf_audit;
      char                            frmt_cde;
      struct
      {
         short                           err_cde;
         short                           err_sub_cde;
      } err_status;
      char                            lconf_name[35];
      char                            masking_flg;
      struct
      {
         char                            ln[4];
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
         short                           user_grp;
         __int32_t                       user_num;
      } user_data;
      char                            site_prod_ind[256];
      char                            err_num[4];
      char                            err_txt[70];
   } msg_header;
   char                            env_data;
   char                            setl_data;
   struct
   {
      char                            val[28];
      short                           len;
   } key_data[5];
   short                           line_cnt;
   char                            line_data[18][78];
   union
   {
      struct
      {
         short                           pos_data[50];
      } position_block;
      struct
      {
         __int32_t                       pos_key;
         short                           pos_filler[48];
      } position_key;
   } u_position_block;
   char                            hdr1_pos[2];
   char                            hdr2_pos[2];
   char                            hdr_cnt[2];
} msg_list_ext_def;
#define msg_list_ext_def_Size 2088
#pragma section user_context_ext
/* Definition USER-CONTEXT-EXT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __user_context_ext
typedef struct __user_context_ext
{
   char                            lnet[4];
   char                            new_lnet[4];
   char                            lconf_name[35];
   struct
   {
      char                            alias[16];
      char                            filler_0;
      short                           user_grp;
      __int32_t                       user_num;
      char                            fiid[4];
      char                            regn[4];
      char                            brch[4];
      char                            user_prod_ind[256];
      char                            site_prod_ind[256];
      short                           curr_prod;
      char                            omf_audit;
   } user_data;
   char                            masking_flg;
   struct
   {
      struct
      {
         short                           scrn_prod;
         struct
         {
            char                            r_access;
            char                            a_access;
            char                            d_access;
            char                            u_access;
         } scrn_access;
      } scrn_access_list[48];
   } scrn_access_info;
   struct
   {
      char                            prog_prefix[6];
      char                            prog_suffix[4];
   } prog_name;
   char                            new_prog_suffix[4];
   short                           logon_func;
   union
   {
      char                            user_fld[38];
      struct
      {
         char                            crtauth_dest[4];
         char                            crtauth_src[4];
         char                            rqmega_dest[4];
         char                            filler_1[26];
      } crtauth_data;
      struct
      {
         char                            filler_2[12];
         char                            logoff_interval[5];
         char                            rel_indicator;
         char                            filler_3[20];
      } logoff_interval_data;
      struct
      {
         char                            filler_4[18];
         char                            view_id[2];
         char                            filler_5[18];
      } view_data;
      struct
      {
         char                            filler_6[20];
         char                            dat_frmt_opt;
         char                            filler_7[17];
      } dat_frmt;
      struct
      {
         char                            user_fld1_password_data[21];
         char                            password[16];
         char                            user_fld2_password_data;
      } password_data;
   } u_user_fld;
   char                            opr_title[6];
   unsigned short                  rn_num;
   char                            resource_node[10][16];
} user_context_ext_def;
#define user_context_ext_def_Size 1104
#pragma section ext_msg
/* Definition EXT-MSG created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __ext_msg
typedef struct __ext_msg
{
   char                            typ[4];
   char                            comma1;
   char                            ecf_key[10];
   char                            comma2;
   char                            ovrrd;
   char                            comma3;
   struct
   {
      char                            ilf;
      char                            om;
      char                            saf;
      char                            icf;
      char                            idf;
      char                            tlf;
      char                            itlf;
      char                            icfe;
      char                            user_fld1c;
      char                            user_fld1d;
      char                            ptlf;
      char                            prdf;
      char                            ttlf;
      char                            ttf;
      char                            user_fld1_file_map;
      char                            user_fld2_file_map;
      char                            svhf;
      char                            user_fld1e;
      char                            user_fld1f;
      char                            user_fld1g;
      char                            user_fld4_file_map;
      char                            user_fld5_file_map;
      char                            user_fld6_file_map;
      char                            user_fld7_file_map;
      char                            user_fld8_file_map;
      char                            user_fld9_file_map;
      char                            user_fld10_file_map;
      char                            mbf;
      char                            hmbf;
      char                            ulf;
      char                            user_fld1h;
      char                            user_fld1i;
      char                            user_fld1j;
      char                            user_fld1k;
      char                            hsf;
      char                            user_fld1l;
      char                            user_fld1m;
      char                            user_fld1n;
      char                            user_fld1o;
      char                            user_fld11_file_map;
      char                            user_fld2[92];
   } file_map;
   char                            comma4;
   char                            vol_id[6];
   char                            comma5;
   char                            strt_partial[3];
   char                            comma6;
   char                            end_partial[3];
   char                            user_fld3;
} ext_msg_def;
#define ext_msg_def_Size 166
#pragma section extract_data
/* Definition EXTRACT-DATA created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __extract_data
typedef struct __extract_data
{
   long long                       hash_ttl;
   short                           extract_typ;
   short                           lconf_name[12];
   short                           base_rpt_num;
   short                           extr_rpt_num;
   short                           extr_rpt_line_cnt;
   short                           extr_rpt_error;
   union
   {
      char                            reset_dat[6];
      char                            stat_dat[6];
   } u_reset_dat;
   char                            logical_net[4];
   char                            acct_num_typ;
   char                            dat_dspy_typ;
   char                            vol_id[6];
   short                           strt_partial;
   short                           end_partial;
} extract_data_def;
#define extract_data_def_Size 64
#pragma section trh
/* Definition TRH created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __trh
typedef struct __trh
{
   short                           lgth;
   short                           sys_fld;
   char                            typ[2];
} trh_def;
#define trh_def_Size 6
#pragma section trha
/* Definition TRHA created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __trha
typedef struct __trha
{
   char                            lgth[6];
   char                            typ[2];
} trha_def;
#define trha_def_Size 8
#pragma section xh
/* Definition XH created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __xh
typedef struct __xh
{
   char                            char_set;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } extract_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } extract_tim;
   char                            ln[4];
   char                            rel_num[2];
   char                            file_id[8];
   char                            name[35];
   char                            user_fld1[18];
} xh_def;
#define xh_def_Size 82
#pragma section xt
/* Definition XT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __xt
typedef struct __xt
{
   char                            file_id[8];
   char                            name[35];
   char                            user_fld1;
   short                           stat;
   long long                       amt;
   __int32_t                       cnt;
   char                            user_fld2[330];
} xt_def;
#define xt_def_Size 388
#pragma section xta
/* Definition XTA created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __xta
typedef struct __xta
{
   char                            file_id[8];
   char                            name[35];
   char                            user_fld1;
   char                            stat[5];
   char                            amt[19];
   char                            cnt[10];
   char                            user_fld2[330];
} xta_def;
#define xta_def_Size 408
#pragma section svlconf_req_res
/* Definition SVLCONF-REQ-RES created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __svlconf_req_res
typedef struct __svlconf_req_res
{
   short                           repl_cde;
   char                            ln[4];
   char                            lconf_fname[35];
   char                            filler_0;
   short                           err_cde;
   char                            err_txt[70];
} svlconf_req_res_def;
#define svlconf_req_res_def_Size 114
#pragma section lnmap_entry
/* Definition LNMAP-ENTRY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __lnmap_entry
typedef struct __lnmap_entry
{
   union
   {
      char                            ln[4];
      short                           word;
   } u_ln;
   char                            lconf_name[35];
} lnmap_entry_def;
#define lnmap_entry_def_Size 39
#pragma section passthru
/* Definition PASSTHRU created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __passthru
typedef struct __passthru
{
   short                           abort;
   short                           lnmap_addr;
   short                           msg_lgth;
   char                            msg[132];
} passthru_def;
#define passthru_def_Size 138
#pragma section process
/* Definition PROCESS created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __process
typedef struct __process
{
   short                           pid[4];
} process_def;
#define process_def_Size 8
#pragma section request
/* Definition REQUEST created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __request
typedef struct __request
{
   short                           rqst_typ;
   char                            ln[4];
} request_def;
#define request_def_Size 6
#pragma section startup
/* Definition STARTUP created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __startup
typedef struct __startup
{
   short                           lgth;
   char                            msg[40];
} startup_def;
#define startup_def_Size 42
#pragma section hi_pcs_rqst
/* Definition HI-PCS-RQST created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __hi_pcs_rqst
typedef struct __hi_pcs_rqst
{
   char                            cmd[9];
   char                            dpc_num[4];
} hi_pcs_rqst_def;
#define hi_pcs_rqst_def_Size 13
#pragma section hi_pcs_resp
/* Definition HI-PCS-RESP created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __hi_pcs_resp
typedef struct __hi_pcs_resp
{
   char                            pro_name[16];
   struct
   {
      char                            num[4];
      char                            link[2];
      char                            saf_pending;
      char                            filler_0;
      short                           percent_out;
      short                           saf_cnt;
      short                           period_dur;
      __int32_t                       rqst_lmt;
      struct
      {
         short                           num_rqsts;
         short                           percent_timed_out;
         short                           avg_resp_time;
      } period[3];
      struct
      {
         char                            name[16];
         char                            stat;
      } sta_tbl[32];
   } dpc;
} hi_pcs_resp_def;
#define hi_pcs_resp_def_Size 596
#pragma section si_pcs_rqst
/* Definition SI-PCS-RQST created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __si_pcs_rqst
typedef struct __si_pcs_rqst
{
   char                            cmd[9];
} si_pcs_rqst_def;
#define si_pcs_rqst_def_Size 9
#pragma section si_pcs_resp
/* Definition SI-PCS-RESP created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __si_pcs_resp
typedef struct __si_pcs_resp
{
   char                            pro_name[16];
   struct
   {
      char                            name[16];
      struct
      {
         short                           acq;
         short                           iss;
      } link_up;
      struct
      {
         short                           acq;
         short                           iss;
      } logon;
      short                           traffic_flg;
      struct
      {
         short                           cur;
         short                           max;
      } timeouts;
   } sta_tbl[4];
   struct
   {
      short                           cur;
      short                           max;
   } rqst_out;
   short                           ilf_percent;
   short                           isaf_percent;
   struct
   {
      short                           cur;
      short                           max;
   } timers;
   short                           saf_pending;
   __int32_t                       mm_in_perf;
   struct
   {
      short                           present;
      __int32_t                       out_rqst_lmt;
      __int32_t                       in_rqst_lmt;
      struct
      {
         struct
         {
            __int32_t                       cnt;
            __int32_t                       timeouts;
            long long                       ttl_time;
         } out_rqst;
         struct
         {
            __int32_t                       cnt;
            __int32_t                       timeouts;
            long long                       ttl_time;
         } in_rqst;
      } perf[5];
   } atm_perf;
   struct
   {
      short                           present;
      __int32_t                       out_rqst_lmt;
      __int32_t                       in_rqst_lmt;
      struct
      {
         struct
         {
            __int32_t                       cnt;
            __int32_t                       timeouts;
            long long                       ttl_time;
         } out_rqst;
         struct
         {
            __int32_t                       cnt;
            __int32_t                       timeouts;
            long long                       ttl_time;
         } in_rqst;
      } perf[5];
   } pos_perf;
} si_pcs_resp_def;
#define si_pcs_resp_def_Size 494
#pragma section half_session_seg
/* Definition HALF-SESSION-SEG created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __half_session_seg
typedef struct __half_session_seg
{
   char                            seq[4][2];
} half_session_seg_def;
#define half_session_seg_def_Size 8
#pragma section hscb
/* Definition HSCB created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __hscb
typedef struct __hscb
{
   char                            trace[2];
   struct
   {
      char                            seq[4][2];
   } rcv;
   struct
   {
      char                            seq[4][2];
   } snd;
   char                            state;
   char                            num_of_pending_responses[2];
} hscb_def;
#define hscb_def_Size 21
#pragma section req_hdr
/* Definition REQ-HDR created on 10/18/2023 at 17:46 */
typedef char                            req_hdr_def[3];
#pragma section req_unit
/* Definition REQ-UNIT created on 10/18/2023 at 17:46 */
typedef char                            req_unit_def[492];
#pragma section transmit_hdr
/* Definition TRANSMIT-HDR created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __transmit_hdr
typedef struct __transmit_hdr
{
   char                            th1;
   char                            filler_0;
   char                            daf;
   char                            oaf;
   char                            seq[2];
} transmit_hdr_def;
#define transmit_hdr_def_Size 6
#pragma section sna
/* Definition SNA created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __sna
typedef struct __sna
{
   union
   {
      struct
      {
         char                            trace[2];
         struct
         {
            char                            seq[4][2];
         } rcv;
         struct
         {
            char                            seq[4][2];
         } snd;
         char                            state;
         char                            num_of_pending_responses[2];
      } sscp_pu;
      struct
      {
         char                            trace[2];
         struct
         {
            char                            seq[4][2];
         } rcv;
         struct
         {
            char                            seq[4][2];
         } snd;
         char                            state;
         char                            num_of_pending_responses[2];
      } hscb;
   } u_sscp_pu;
   struct
   {
      char                            trace[2];
      struct
      {
         char                            seq[4][2];
      } rcv;
      struct
      {
         char                            seq[4][2];
      } snd;
      char                            state;
      char                            num_of_pending_responses[2];
   } sscp_lu;
   char                            filler_0[21];
   struct
   {
      char                            trace[2];
      struct
      {
         char                            seq[4][2];
      } rcv;
      struct
      {
         char                            seq[4][2];
      } snd;
      char                            state;
      char                            num_of_pending_responses[2];
   } lu_lu;
   char                            lnme;
   char                            nme[8];
   char                            state[25];
   char                            lack;
   unsigned char                   retry_count;
   char                            pu_type;
} sna_def;
#define sna_def_Size 121
#pragma section sna_hdrs
/* Definition SNA-HDRS created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __sna_hdrs
typedef struct __sna_hdrs
{
   struct
   {
      char                            th1;
      char                            filler_0;
      char                            daf;
      char                            oaf;
      char                            seq[2];
   } th;
   char                            rh[3];
} sna_hdrs_def;
#define sna_hdrs_def_Size 9
#pragma section sna_msg
/* Definition SNA-MSG created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __sna_msg
typedef struct __sna_msg
{
   struct
   {
      char                            th1;
      char                            filler_0;
      char                            daf;
      char                            oaf;
      char                            seq[2];
   } th;
   char                            rh[3];
   char                            ru[492];
} sna_msg_def;
#define sna_msg_def_Size 501
#pragma section isopsem
/* Definition ISOPSEM created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __isopsem
typedef struct __isopsem
{
   char                            strt_of_txt[3];
   char                            prod_id[2];
   char                            rel_num[2];
   char                            stat[3];
   char                            originator;
   char                            responder;
   char                            typ[4];
   char                            pri_bit_map[16];
   char                            secndry_bit_map[16];
   struct
   {
      char                            len[2];
      char                            data[19];
   } pan;
   struct
   {
      char                            tran_cde[2];
      char                            from_acct_typ[2];
      char                            to_acct_typ[2];
   } proc_cde;
   char                            tran_amt[12];
   char                            setl_amt[12];
   char                            bill_amt[12];
   char                            xmit_dat_tim[10];
   char                            bill_fee[8];
   char                            setl_conv_rat[8];
   char                            bill_conv_rat[8];
   char                            trace_num[6];
   char                            tran_tim[6];
   char                            tran_dat[4];
   char                            exp_dat[4];
   char                            setl_dat[4];
   char                            conv_dat[4];
   char                            cap_dat[4];
   char                            mrcht_typ_cde[4];
   char                            acq_inst_cntry_cde[3];
   char                            pan_ext_cntry_cde[3];
   char                            frwd_inst_cntry_cde[3];
   char                            entry_mde[3];
   char                            mbr_num[3];
   char                            netw_intl_id[3];
   char                            pt_tran_spcl_cde[2];
   char                            pos_pin_capture_cde[2];
   char                            auth_id_resp_len;
   struct
   {
      char                            ind;
      char                            amt[8];
   } tran_fee;
   struct
   {
      char                            ind;
      char                            amt[8];
   } setl_fee;
   struct
   {
      char                            ind;
      char                            amt[8];
   } tran_proc_fee;
   struct
   {
      char                            ind;
      char                            amt[8];
   } setl_proc_fee;
   struct
   {
      char                            len[2];
      char                            num[11];
   } acq_inst_id;
   struct
   {
      char                            len[2];
      char                            num[11];
   } frwd_inst_id;
   struct
   {
      char                            len[2];
      char                            num[28];
   } pan_extnd;
   struct
   {
      char                            len[2];
      char                            data[37];
   } track2;
   struct
   {
      char                            len[3];
      char                            data[104];
   } track3;
   struct
   {
      union
      {
         char                            data[12];
         struct
         {
            char                            tran_seq_num[6];
            char                            dev_seq_num[6];
         } tlr;
         struct
         {
            char                            seq_num[12];
         } atm;
         struct
         {
            char                            seq_num[12];
         } pos;
         struct
         {
            char                            seq_num[12];
         } tb;
      } u_data;
   } retrvl_ref_num;
   char                            auth_id_resp[6];
   char                            resp_cde[2];
   char                            service_cde[3];
   char                            term_id[16];
   char                            crd_accpt_id_cde[15];
   struct
   {
      char                            term_owner[22];
      char                            term_city[13];
      char                            term_st[3];
      char                            term_cntry[2];
   } crd_accpt_name_loc;
   struct
   {
      char                            len[2];
      union
      {
         char                            data[25];
         struct
         {
            char                            presence_ind;
            char                            ledg_bal[12];
            union
            {
               char                            avail_bal[12];
               char                            avail_credit[12];
            } u_avail_bal;
         } bal;
         struct
         {
            char                            resp_data;
            char                            addr_vrfy_stat;
            char                            reserved[23];
         } pos;
         struct
         {
            char                            pmnt_dat[8];
            char                            reserved[17];
         } tb;
      } u_data;
   } resp_data;
   struct
   {
      char                            len[2];
      char                            data[76];
   } track1;
   struct
   {
      char                            len[3];
      char                            data[100];
   } add_data_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } add_data_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[200];
         struct
         {
            char                            shrg_grp[24];
            char                            term_tran_allowed;
            char                            term_st[2];
            char                            term_cnty[3];
            char                            term_cntry[3];
            char                            term_rte_grp[11];
            char                            reserved[156];
         } atm;
         struct
         {
            char                            retl_id[19];
            char                            retl_grp[4];
            char                            retl_regn[4];
            char                            reserved[173];
         } pos;
         struct
         {
            char                            filler_0[27];
            char                            srv_digit[2];
            char                            reserved[171];
         } csm_pos;
         struct
         {
            char                            mbr_num[3];
            char                            fiid[4];
            char                            acct_typ[2];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } nb_tran_dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } nb_tran_tim;
            char                            sp_typ[2];
            char                            sp_seq[5];
            char                            sp_amt[12];
            char                            reserved[158];
         } fhm;
         struct
         {
            char                            mbr_num[3];
            char                            fiid[4];
            char                            acct_typ[2];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } nb_tran_dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } nb_tran_tim;
            char                            spf_hi_chk_num[11];
            char                            spf_lo_chk_num[11];
            char                            whff_rec_typ[2];
            char                            whff_amt[15];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } whff_dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } whff_tim;
            char                            reserved[124];
         } fhm_expand;
         struct
         {
            struct
            {
               char                            version_num[2];
               char                            ack_to_swi;
               char                            ack_from_swi;
               char                            acq_standin;
               char                            iss_standin;
               char                            cutover_stat;
               char                            encrypt_typ;
               char                            num_keys;
               char                            key_lgth;
               char                            key_proc_typ;
               char                            mac_typ;
               char                            mac_data_typ;
               char                            rsrvd_options[3];
               char                            mac_key_lgth;
            } options;
            char                            reserved[183];
         } nmm;
         struct
         {
            char                            rte_grp[11];
            char                            interbnk_rtg;
            char                            bnk_rtg_cde[11];
            char                            bnk_relnshp[24];
            char                            reserved[153];
         } tlr;
         struct
         {
            char                            user_def_data[200];
         } tb;
      } u_data;
   } add_data_prvt;
   char                            crncy_cde[3];
   char                            setl_crncy[3];
   char                            bill_crncy[3];
   char                            pin[16];
   union
   {
      char                            sec_cntrl_info[16];
      struct
      {
         char                            key_typ[2];
         char                            key_dir[2];
         char                            rsrvd_info[12];
      } base24_sec_info;
   } u_sec_cntrl_info;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[120];
         struct
         {
            char                            amt[12];
            char                            setl_amt[12];
            char                            reserved[96];
         } b24_def;
         struct
         {
            struct
            {
               char                            amt[12];
               char                            crncy_cde[3];
            } info_amt2[3];
            char                            reserved[75];
         } csm_b24_def;
         struct
         {
            union
            {
               char                            info[120];
               struct
               {
                  char                            acct_typ[2];
                  char                            amt_typ[2];
                  char                            crncy_cde[3];
                  char                            cr_db_flg;
                  char                            amt[12];
               } amt_data[6];
            } u_info;
         } tb;
      } u_data;
   } add_amts;
   struct
   {
      char                            len[3];
      char                            data[100];
   } pri_rsrvd1_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } pri_rsrvd2_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } pri_rsrvd1_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[200];
         struct
         {
            char                            tkn_id[2];
            char                            fncl_tkn[198];
         } tlr;
      } u_data;
   } pri_rsrvd2_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            tkn_id[2];
            char                            cafu_tkn[98];
         } tlr;
      } u_data;
   } pri_rsrvd3_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            term_fiid[4];
            char                            term_ln[4];
            char                            tlr_id[8];
            char                            crd_fiid[4];
            char                            crd_ln[4];
            char                            regn_id[4];
            char                            brch_id[4];
            char                            term_loc[25];
            char                            dda_cur_flg;
            char                            sav_cur_flg;
            char                            ccd_cur_flg;
            char                            spf_cur_flg;
            char                            nbf_cur_flg;
            char                            whff_cur_flg;
            char                            crncy_cde[3];
            char                            reserved[34];
         } tlr;
         struct
         {
            char                            term_fiid[4];
            char                            term_ln[4];
            char                            term_time_ofst[4];
            char                            reserved[88];
         } atm;
         struct
         {
            char                            term_fiid[4];
            char                            term_ln[4];
            char                            term_time_ofst[4];
            char                            pseudo_term_id[4];
            char                            reserved[84];
         } pos;
         struct
         {
            char                            dpc_num[4];
            char                            sta_index[4];
            char                            ln[4];
            char                            lt_timstp[14];
            char                            log_ind;
            char                            compl_req;
            char                            fm_user_grp[4];
            char                            fm_user_num[8];
            char                            fm_user_sta[4];
            char                            fm_timstp[14];
            char                            reserved[42];
         } fhm;
         struct
         {
            char                            dpc_num[4];
            char                            host_pro_nam[16];
            char                            ln[4];
            char                            msg_id[4];
            char                            fiid[4];
            char                            category_nam[16];
            char                            reserved[52];
         } ems;
         struct
         {
            char                            acq_fiid[4];
            char                            acq_ln[4];
            char                            src_cde[2];
            char                            reserved[90];
         } tb;
      } u_data;
   } pri_rsrvd1_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            crd_fiid[4];
            char                            crd_ln[4];
            char                            save_acct_typ[4];
            char                            authorizer;
            char                            orig_tran_cde[2];
            char                            reserved[85];
         } atm;
         struct
         {
            char                            crd_fiid[4];
            char                            crd_ln[4];
            char                            category;
            char                            save_acct_typ[2];
            char                            ichg_resp[8];
            char                            reserved[81];
         } pos;
         struct
         {
            char                            crd_fiid[4];
            char                            crd_ln[4];
            char                            reserved[92];
         } fhm;
         struct
         {
            struct
            {
               char                            delivery_dat[6];
               char                            delivery_tim[4];
            } certify_stmp;
            char                            delivery_stat;
            char                            loc_nam[16];
            char                            loc_typ;
            char                            mbf_timstp[4];
            char                            sig[16];
            char                            reserved[52];
         } ems;
         struct
         {
            char                            dev_tran_cde[6];
            char                            cust_passbook_bal[19];
            char                            intl_ovrrd_lvl;
            char                            max_term_ovrrd_lvl;
            char                            paperless_tran;
            char                            advc_resp_req;
            char                            crd_present;
            char                            rsn_cde[2];
            char                            save_from_acct_typ[2];
            char                            save_to_acct_typ[2];
            char                            mult_acct;
            char                            term_tim_ofst[5];
            char                            complete_track2_data;
            char                            ovrrd_tlr_id[8];
            char                            reserved[49];
         } tlr;
         struct
         {
            char                            iss_fiid[4];
            char                            iss_ln[4];
            char                            err_flg;
            char                            cust_ref_num[6];
            char                            reserved[85];
         } tb;
      } u_data;
   } pri_rsrvd2_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            postal_cde[10];
            char                            reserved[90];
         } b24_def;
         struct
         {
            char                            term_nam[16];
            char                            reserved[84];
         } ems;
         struct
         {
            char                            exponent;
            char                            reserved[99];
         } fhm_caf;
         struct
         {
            char                            crd_action;
            char                            err_flg;
            char                            min_ovrrd_lvl;
            char                            crd_vrfy_flg;
            char                            acct_ind;
            char                            reserved[95];
         } tlr;
         struct
         {
            char                            prd_typ[2];
            char                            num_prd[4];
            char                            skip_nxt_pmnt_ind;
            char                            reserved[93];
         } tb;
      } u_data;
   } pri_rsrvd3_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[997];
         struct
         {
            char                            new_pin_ofst[16];
            char                            reserved[981];
         } pin_select;
         struct
         {
            char                            rqst_typ[2];
            char                            lookup_typ;
            char                            scroll_thru;
            char                            reserved[993];
         } ems;
         struct
         {
            char                            tkn_id[2];
            char                            nbf_tkn[595];
            char                            reserved[400];
         } tlr;
         struct
         {
            char                            add_data[997];
         } pos;
         struct
         {
            char                            super_tlr_term_id[10][16];
            char                            reserved[837];
         } fhm_caf;
         struct
         {
            char                            super_tlr_term_id[10][16];
            char                            reserved[837];
         } fhm_neg;
         struct
         {
            char                            new_pin_ofst[16];
            char                            old_pin_ofst[16];
            char                            reserved[965];
         } tb;
         struct
         {
            char                            prod_typ[2];
            char                            plastic_typ[2];
            char                            rqst_dat[8];
            char                            pin_chng[8];
            char                            last_iss[8];
            char                            emboss[8];
            char                            last_crv[8];
            char                            last_addr_chng[8];
            char                            last_stat_chng[8];
            char                            opn_dat[8];
            char                            num_iss[2];
            char                            cvv2[3];
            char                            stat;
            char                            blk_cde;
            char                            reclass_cde;
            char                            rate_class;
            char                            bhvr_score[4];
            char                            cash_adv_amt[12];
            char                            purch_amt[12];
            char                            bal_amt[12];
            char                            fraud_score[3];
            char                            wrk_phn[20];
            char                            mob_phn[20];
            char                            email_addr[40];
            char                            id[30];
            char                            prev_crd_num[19];
            char                            pri_nam[40];
            char                            pri_govt_id[20];
            char                            pri_dob[8];
            char                            sec_nam[40];
            char                            adnl_nam[40];
            char                            mthr_mdn_nam[40];
            char                            addr_1[40];
            char                            addr_2[40];
            char                            city[30];
            char                            st[30];
            char                            cntry[3];
            char                            postal_cde[16];
            char                            home_phn[20];
            char                            reserved[381];
         } fhm_semf;
         struct
         {
            struct
            {
               char                            seq_num[12];
               char                            hold_amt[19];
               struct
               {
                  struct
                  {
                     char                            yy[2];
                     char                            mm[2];
                     char                            dd[2];
                  } dat;
                  struct
                  {
                     char                            hh[2];
                     char                            mm[2];
                     char                            ss[2];
                     char                            tt[2];
                  } tim;
               } pr_ts;
               char                            appv_cde[8];
               struct
               {
                  struct
                  {
                     char                            yy[2];
                     char                            mm[2];
                     char                            dd[2];
                  } dat;
                  struct
                  {
                     char                            hh[2];
                     char                            mm[2];
                     char                            ss[2];
                     char                            tt[2];
                  } tim;
               } pr_txn_ts;
               char                            term_id[16];
               char                            acct_typ[2];
               char                            acct_num[19];
               char                            hold_flg;
            } enhnc_pre_auth[9];
            char                            reserved[52];
         } fhm_enhnc_pre_auth_caf;
      } u_data;
   } pri_rsrvd4_prvt;
   char                            pri_mac_cde[16];
} isopsem_def;
#define isopsem_def_Size 3154
#pragma section isossem
/* Definition ISOSSEM created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __isossem
typedef struct __isossem
{
   char                            setl_cde;
   char                            extd_pay_cde[2];
   char                            rcv_inst_cntry_cde[3];
   char                            setl_inst_cntry_cde[3];
   char                            netw_mgmt_cde[3];
   char                            msg_num[4];
   char                            lst_msg_num[4];
   char                            action_dat[6];
   char                            num_cr[10];
   char                            num_cr_rvsl[10];
   char                            num_db[10];
   char                            num_db_rvsl[10];
   char                            num_xfer[10];
   char                            num_xfer_rvsl[10];
   char                            num_inq[10];
   char                            num_auth[10];
   char                            amt_cr_proc_fees[12];
   char                            amt_cr_tran_fees[12];
   char                            amt_db_proc_fees[12];
   char                            amt_db_tran_fees[12];
   char                            amt_cr[16];
   char                            amt_cr_rvsl[16];
   char                            amt_db[16];
   char                            amt_db_rvsl[16];
   union
   {
      struct
      {
         char                            typ[4];
         char                            trace_num[6];
         char                            xmit_dat_tim[10];
         char                            acq_inst_id_num[11];
         char                            frwd_inst_id_num[11];
      } orig_info;
      struct
      {
         char                            orig_typ[4];
         char                            orig_seq_num[12];
         char                            orig_tran_dat[4];
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } orig_tran_tim;
         char                            orig_b24_post_dat[4];
         char                            reserved[10];
      } b24_orig;
   } u_orig_info;
   char                            file_updt_cde;
   char                            file_sec_cde[2];
   char                            resp_ind[5];
   char                            srv_ind[7];
   struct
   {
      char                            amt[12];
      char                            setl_amt[12];
      char                            tran_fee[9];
      char                            setl_fee[9];
   } replacement;
   char                            msg_sec_cde[16];
   struct
   {
      char                            ind;
      char                            amt[16];
   } setl_amt_net;
   char                            payee[25];
   struct
   {
      char                            len[2];
      char                            id_num[11];
   } setl_inst;
   struct
   {
      char                            len[2];
      char                            id_num[11];
   } rcv_inst;
   struct
   {
      char                            len[2];
      char                            name[17];
   } fname;
   struct
   {
      char                            len[2];
      char                            num[28];
   } acct1;
   struct
   {
      char                            len[2];
      char                            num[28];
   } acct2;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            cust_acct_num_vndr[28];
            char                            vndr_nam[32];
            char                            reserved[40];
         } tb;
      } u_data;
   } tran_descr;
   struct
   {
      char                            len[3];
      char                            data[100];
   } secndry_rsrvd1_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } secndry_rsrvd2_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } secndry_rsrvd3_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } secndry_rsrvd4_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } secndry_rsrvd5_iso;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            key_blk[96];
            char                            reserved[4];
         } key_mgmt;
      } u_data;
   } secndry_rsrvd6_iso;
   struct
   {
      char                            len[3];
      char                            data[100];
   } secndry_rsrvd7_iso;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[200];
         struct
         {
            char                            tkn_id[2];
            char                            ovrrd_tkn[198];
         } tlr;
         struct
         {
            char                            seq_num[12];
            char                            hold_amt[19];
            struct
            {
               struct
               {
                  char                            yy[2];
                  char                            mm[2];
                  char                            dd[2];
               } dat;
               struct
               {
                  char                            hh[2];
                  char                            mm[2];
                  char                            ss[2];
                  char                            tt[2];
               } tim;
            } pr_ts;
            char                            appv_cde[8];
            struct
            {
               struct
               {
                  char                            yy[2];
                  char                            mm[2];
                  char                            dd[2];
               } dat;
               struct
               {
                  char                            hh[2];
                  char                            mm[2];
                  char                            ss[2];
                  char                            tt[2];
               } tim;
            } pr_txn_ts;
            char                            term_id[16];
            char                            acct_typ[2];
            char                            acct_num[19];
            char                            hold_flg;
            char                            reserved[95];
         } fhm_enhnc_pre_auth_caf_ext;
      } u_data;
   } secndry_rsrvd1_natl;
   struct
   {
      char                            len[3];
      char                            data[400];
   } secndry_rsrvd2_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[500];
         struct
         {
            char                            tkn_id[2];
            char                            whffi_tkn[498];
         } tlr;
         struct
         {
            char                            prior_ytd_int[18];
            char                            min_amt_due[18];
            char                            cur_int_rate[8];
            char                            cash_adv_int_rate[8];
            char                            next_pmnt_due_dat[6];
            char                            cr_od_lmt_chg_dat[6];
            char                            cyc_cnt[2];
            struct
            {
               union
               {
                  char                            db_cr_hist[10];
                  struct
                  {
                     char                            nsf[5];
                     char                            od[5];
                  } db_hist;
                  struct
                  {
                     char                            num_delinq[5];
                     char                            num_cr_lmt_exceed[5];
                  } cr_hist;
               } u_db_cr_hist;
               char                            acct_bal[18];
               char                            acct_stat;
               char                            user_fld3;
            } cyc_data[12];
            char                            reserved[74];
         } fhm_pbf_csfc;
      } u_data;
   } secndry_rsrvd3_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[400];
         struct
         {
            char                            tkn_id[2];
            char                            whffi_tkn[398];
         } tlr;
         struct
         {
            char                            user_fld_aci[50];
            char                            user_fld_regn[50];
            union
            {
               char                            user_fld_cust[299];
               struct
               {
                  char                            csm_base_pin_ofst[16];
                  char                            csm_base_ttl_pf_lmt[12];
                  char                            csm_base_offl_pf_lmt[12];
                  char                            csm_base_first_used[6];
                  char                            csm_base_last_reset[6];
                  char                            csm_base_credit_class[2];
                  char                            csm_base_track_1[82];
                  char                            csm_base_track_2[40];
                  char                            csm_base_fecha_vig[8];
                  char                            csm_base_bank_fiid[4];
                  char                            csm_atm_ttl_pf_lmt[12];
                  char                            csm_atm_offl_pf_lmt[12];
                  char                            csm_atm_last_used[6];
                  char                            csm_pos_ttl_cuo_lmt[12];
                  char                            csm_pos_offl_cuo_lmt[12];
                  char                            csm_pos_ttl_pf_lmt[12];
                  char                            csm_pos_offl_pf_lmt[12];
                  char                            csm_pos_ttl_pc_lmt[12];
                  char                            csm_pos_offl_pc_lmt[12];
                  char                            csm_pos_last_used[6];
                  char                            reserved[3];
               } csm_fhm_caf;
            } u_user_fld_cust;
            char                            reserved;
         } fhm_caf_base_user_info;
         struct
         {
            char                            user_fld_aci[50];
            char                            user_fld_regn[50];
            char                            user_fld_cust[50];
            char                            reserved[250];
         } fhm_pbf_base_user_info;
      } u_data;
   } secndry_rsrvd4_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[400];
         struct
         {
            char                            tkn_id[2];
            char                            whffi_tkn[398];
         } tlr;
         struct
         {
            char                            use_lmt[4];
            char                            cash_val_ttl_wdl_lmt[12];
            char                            cash_val_offl_wdl_lmt[12];
            char                            cash_val_ttl_cca_lmt[12];
            char                            cash_val_offl_cca_lmt[12];
            char                            ncd1_cde[2];
            char                            ncd1_ttl_wdl_lmt[12];
            char                            ncd1_offl_wdl_lmt[12];
            char                            ncd1_ttl_cca_lmt[12];
            char                            ncd1_offl_cca_lmt[12];
            char                            ncd2_cde[2];
            char                            ncd2_ttl_wdl_lmt[12];
            char                            ncd2_offl_wdl_lmt[12];
            char                            ncd2_ttl_cca_lmt[12];
            char                            ncd2_offl_cca_lmt[12];
            char                            reserved[248];
         } fhm_ncd_caf;
      } u_data;
   } secndry_rsrvd5_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            tkn_id[2];
            char                            pbfu_tkn[98];
         } tlr;
         struct
         {
            char                            atc_lmt[4];
            char                            send_crd_blk;
            char                            send_put_data;
            struct
            {
               char                            lwr_consec_lmt[4];
               char                            data_tag[4];
            } vlcty_lmts;
            char                            send_pin_unblk;
            char                            send_pin_chng;
            char                            pin_sync_act;
            char                            access_script_mgmt_sub_sys;
            char                            iss_appl_data_frmt;
            char                            action_table_index;
            char                            cap_apsn_1[2];
            char                            cap_dki_1[2];
            char                            cap_apsn_2[2];
            char                            cap_dki_2[2];
            char                            bad_cap_tkn_ovrrd_flg;
            char                            script_tplt_tag;
            char                            script_mac_lgth;
            char                            reserved[69];
         } fhm_caf_emv;
      } u_data;
   } secndry_rsrvd6_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            tkn_id[2];
            char                            spfu_tkn[98];
         } tlr;
         struct
         {
            char                            acct_num[19];
            char                            tran_cde[2];
            char                            from_acct_typ[2];
            char                            to_acct_typ[2];
            char                            rcpt_opt;
            char                            amt[19];
            char                            prfl_updt_ind;
            char                            ada_ind;
            char                            mrkt_seg_ind[2];
            char                            reserved[51];
         } fhm_caf_pfrd_txn;
         struct
         {
            char                            cash_adv_min[15];
            char                            cash_adv_incr[15];
            struct
            {
               struct
               {
                  char                            amt[15];
                  char                            cnt[4];
               } xfer;
            } prd_lmt;
            struct
            {
               struct
               {
                  char                            amt[15];
                  char                            cnt[4];
               } xfer;
            } cyc_lmt;
            char                            reserved[32];
         } fhm_pbf;
      } u_data;
   } secndry_rsrvd7_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[100];
         struct
         {
            char                            tkn_id[2];
            char                            whffu_tkn[98];
         } tlr;
         struct
         {
            char                            corp_num[10];
            char                            chk_base_flg;
            char                            csf_chk_base_flg;
            char                            csf_chk_use_lmt[4];
            char                            ttl_chk_lmt[12];
            char                            offl_chk_lmt[12];
            char                            ttl_csf_chk_lmt[12];
            char                            offl_csf_chk_lmt[12];
            char                            reserved[36];
         } fhm_caf_ssbc;
         struct
         {
            char                            corp_num[10];
            char                            reserved[90];
         } fhm_neg_ssbc;
      } u_data;
   } secndry_rsrvd8_natl;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[150];
         struct
         {
            char                            tkn_id[2];
            char                            admin_tkn[148];
         } tlr;
         struct
         {
            char                            term_name_loc[25];
            char                            brch_id[4];
            char                            regn_id[4];
            char                            reserved[117];
         } atm;
         struct
         {
            char                            term_name_loc[25];
            char                            brch_id[4];
            char                            reserved[121];
         } pos;
         struct
         {
            char                            crd_typ[2];
            char                            crd_stat;
            char                            pin_ofst[16];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            aggr_lmt[12];
            char                            offl_aggr_lmt[12];
            char                            exp_dat[4];
            char                            effective_dat[4];
            struct
            {
               char                            exp_dat_2[4];
               char                            effective_dat_2[4];
               char                            crd_stat_2;
               char                            user_fld1_scnd_crd_data;
            } scnd_crd_data;
            char                            reserved[41];
         } fhm_caf_expand;
         struct
         {
            char                            crd_typ[2];
            char                            crd_stat;
            char                            pin_ofst[16];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            aggr_lmt[12];
            char                            offl_aggr_lmt[12];
            char                            exp_dat[4];
            char                            reserved[55];
         } fhm_caf;
         struct
         {
            char                            crd_typ[2];
            char                            rsn_cde[2];
            char                            capture_cde;
            char                            add_dat[6];
            char                            exp_dat[4];
            char                            reserved[135];
         } fhm_neg;
         struct
         {
            char                            acct_stat;
            char                            avail_bal[12];
            char                            ledg_bal[12];
            char                            amt_on_hld[12];
            char                            ovrdrft_lmt[8];
            char                            last_dep_dat[6];
            char                            last_dep_amt[12];
            char                            last_wdl_dat[6];
            char                            last_wdl_amt[12];
            char                            reserved[69];
         } fhm_pbf;
         struct
         {
            char                            acct_stat;
            char                            avail_bal[19];
            char                            ledg_bal[19];
            char                            amt_on_hld[19];
            char                            ovrdrft_lmt[11];
            char                            last_dep_dat[6];
            char                            last_dep_amt[15];
            char                            last_wdl_dat[6];
            char                            last_wdl_amt[15];
            char                            reserved[39];
         } fhm_pbf_expand_rel5;
         struct
         {
            char                            acct_stat;
            char                            avail_bal[19];
            char                            ledg_bal[19];
            char                            amt_on_hld[19];
            char                            ovrdrft_lmt[11];
            char                            last_dep_dat[6];
            char                            last_dep_amt[15];
            char                            last_wdl_dat[6];
            char                            last_wdl_amt[15];
            char                            crncy_cde[3];
            char                            reserved[36];
         } fhm_pbf_expand;
         struct
         {
            char                            cur_bal[12];
            char                            pay_amt[8];
            char                            reserved[130];
         } fhm_laf;
         struct
         {
            char                            amt[15];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } tim;
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } exp_dat;
            char                            descr[35];
            char                            pbf_sp_warn_stat;
            char                            reserved[79];
         } spf;
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } exp_dat;
            char                            descr[35];
            char                            pbf_sp_warn_stat;
            char                            reserved[108];
         } whff;
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } post_dat;
            char                            prnt_stat;
            char                            prnt_bal[12];
            char                            posting_sys;
            char                            tran_typ;
            char                            tran_cde[6];
            char                            tran_amt[12];
            char                            reserved[111];
         } nbf;
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } post_dat;
            char                            prnt_stat;
            char                            prnt_bal[19];
            char                            posting_sys;
            char                            tran_typ[2];
            char                            tran_cde[6];
            char                            tran_amt[15];
            char                            dev_tran_cde[6];
            char                            tlr_id[8];
            char                            regn_id[4];
            char                            brch_id[4];
            char                            city[13];
            char                            reserved[65];
         } nbf_expand;
         struct
         {
            char                            chk_digits[6];
            char                            reserved[144];
         } key_mgmt;
         struct
         {
            char                            corp_num[10];
            char                            corp_descr[25];
            char                            corp_cnt[2];
            char                            reserved[113];
         } fhm_ccf;
         struct
         {
            char                            inst_id_num[11];
            char                            acct_num[19];
            char                            rgstr_pan[19];
            char                            rgstr_mbr_num[3];
            char                            chk_stat;
            char                            ret_chk_flg;
            char                            chk_lmt[15];
            char                            reserved[81];
         } fhm_csf;
         struct
         {
            char                            acct_qual[4];
            char                            ver[4];
            char                            stat;
            char                            descr[15];
            struct
            {
               char                            db;
               char                            cr;
               char                            inq;
            } act_alwd;
            char                            reserved[123];
         } fhm_carf;
         struct
         {
            char                            ver[4];
            char                            fiid[4];
            char                            prfl[8];
            char                            stat[2];
            char                            typ;
            char                            pin_chng_req;
            char                            pvd[16];
            char                            pvk_idx;
            char                            cust_info[60];
            char                            dflt_acct_typ[2];
            char                            dflt_acct_num[28];
            char                            max_hist_recs[4];
            char                            reserved[19];
         } fhm_cust;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            bhvr_score[3];
            char                            recent_reiss_ind;
            char                            cvv_val[3];
            char                            num_iss[2];
            char                            user_fld4;
            char                            reserved[132];
         } fhm_ccif0005;
         struct
         {
            char                            acct_typ[2];
            char                            acct_qual[4];
            char                            fiid[4];
            char                            stat;
            char                            ver[4];
            char                            descr[15];
            char                            act_alwd_db;
            char                            act_alwd_cr;
            char                            act_alwd_inq;
            char                            beg_dat[8];
            char                            end_dat[8];
            char                            reserved[101];
         } fhm_cact;
         struct
         {
            char                            prsnl_id[28];
            char                            id_typ[2];
            char                            ver[4];
            char                            reserved[116];
         } fhm_cpit;
         struct
         {
            char                            card_num[19];
            char                            ica[6];
            char                            card_program[3];
            char                            resp_cde[2];
            char                            entry_rsn;
            char                            reg_ind1;
            char                            purge_dat1[6];
            char                            reg_ind2;
            char                            purge_dat2[6];
            char                            reg_ind3;
            char                            purge_dat3[6];
            char                            reg_ind4;
            char                            purge_dat4[6];
            char                            reg_ind5;
            char                            purge_dat5[6];
            char                            reg_ind6;
            char                            purge_dat6[6];
            char                            reserved[77];
         } fhm_mcc103;
      } u_data;
   } secndry_rsrvd1_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[150];
         struct
         {
            char                            clerk_id[6];
            char                            crt_auth_grp[4];
            char                            crt_auth_user_id[8];
            char                            auth_ind;
            char                            auth_ind2;
            char                            reserved[130];
         } pos;
         struct
         {
            char                            use_lmt[4];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            dep_cr_lmt[8];
            char                            iss_txn_prfl[16];
            char                            reserved[74];
         } fhm_caf_expand;
         struct
         {
            char                            use_lmt[4];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            dep_cr_lmt[8];
            char                            reserved[90];
         } fhm_caf;
         struct
         {
            char                            tkn_id[2];
            char                            native_tkn[148];
         } tlr;
         struct
         {
            char                            pin_new_1[16];
            char                            pin_new_2[16];
            char                            reserved[118];
         } tb;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            str_addr3[30];
            char                            phn_othr2[20];
            char                            phn_othr2_descr[8];
            char                            reserved[84];
         } fhm_ccif0001;
      } u_data;
   } secndry_rsrvd2_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[200];
         struct
         {
            char                            crd_iss_id_num[11];
            char                            reserved[189];
         } b24;
         struct
         {
            char                            ttl_pur_lmt[12];
            char                            offl_pur_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            use_lmt[4];
            char                            ttl_rfnd_cr_lmt[12];
            char                            offl_rfnd_cr_lmt[12];
            char                            rsn_cde;
            char                            iss_txn_prfl[16];
            char                            reserved[83];
         } fhm_caf_expand;
         struct
         {
            char                            ttl_pur_lmt[12];
            char                            offl_pur_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            use_lmt[4];
            char                            ttl_rfnd_cr_lmt[12];
            char                            offl_rfnd_cr_lmt[12];
            char                            rsn_cde;
            char                            reserved[99];
         } fhm_caf;
         struct
         {
            char                            ttl_float[12];
            char                            cur_float[12];
            char                            reserved[176];
         } fhm_pbf;
         struct
         {
            char                            ttl_float[15];
            char                            cur_float[15];
            char                            reserved[170];
         } fhm_pbf_expand;
         struct
         {
            struct
            {
               char                            pickup_stat;
               char                            pickup_dat[6];
               char                            pickup_tim[4];
            } aft_stmp;
            char                            category_nam[16];
            char                            compl_cde[2];
            char                            delivery_mde;
            struct
            {
               char                            dat[6];
               char                            tim[4];
            } exp_stmp;
            struct
            {
               char                            msg_dat[6];
               char                            msg_id[4];
            } id;
            char                            invoice_num[5];
            char                            msg_source_nam[16];
            char                            msg_source_typ;
            char                            resp_req;
            char                            timstp[4];
            char                            reserved[123];
         } ems;
         struct
         {
            char                            tkn_id[2];
            char                            acct_tkn[198];
         } tlr;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            nam[30];
            char                            govt_id[15];
            char                            mthr_mdn_nam[20];
            char                            dob[6];
            char                            reserved[121];
         } fhm_ccif0002;
         struct
         {
            char                            error_cde[6];
            char                            reg_ind1;
            char                            vig_dat1[6];
            char                            purge_dat1[6];
            char                            reg_ind2;
            char                            vig_dat2[6];
            char                            purge_dat2[6];
            char                            reg_ind3;
            char                            vig_dat3[6];
            char                            purge_dat3[6];
            char                            reg_ind4;
            char                            vig_dat4[6];
            char                            purge_dat4[6];
            char                            reg_ind5;
            char                            vig_dat5[6];
            char                            purge_dat5[6];
            char                            reg_ind6;
            char                            vig_dat6[6];
            char                            purge_dat6[6];
            char                            reserved[53];
         } fhm_mcc103;
      } u_data;
   } secndry_rsrvd3_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[550];
         struct
         {
            char                            amt_dep_cr[12];
            char                            setl_amt_dep_cr[12];
            char                            reserved[526];
         } atm;
         struct
         {
            char                            invoice_num[10];
            char                            orig_invoice_num[10];
            char                            reserved[530];
         } pos;
         struct
         {
            struct
            {
               struct
               {
                  char                            yy[2];
                  char                            mm[2];
                  char                            dd[2];
               } post_dat;
               char                            dpc_num[4];
               char                            term_id[16];
               struct
               {
                  char                            rttn[11];
                  char                            acct[28];
                  char                            nam[40];
               } retl;
               char                            setl_typ;
               char                            bal_flg;
               char                            batch_num[3];
               char                            shift_num[3];
               struct
               {
                  char                            yy[2];
                  char                            mm[2];
                  char                            dd[2];
               } tran_dat;
               char                            tran_tim[6];
               char                            ob_flg;
               char                            ach_comp_id[10];
               char                            billing_info[10];
               char                            auth_crncy_cde[3];
               char                            auth_conv_rate[8];
               char                            setl_crncy_cde[3];
               char                            setl_conv_rate[8];
            } set_recx1a;
            char                            reserved[382];
         } pos_setl1a;
         struct
         {
            char                            ttl_dep_amt[12];
            char                            confidential_flg;
            char                            sp_stat;
            char                            accrued_interest_ytd[8];
            char                            strt_bal[12];
            char                            passbook_bal[12];
            char                            nbf_rec_cnt[4];
            char                            sig_crd_loc[9];
            char                            passbook_ind;
            char                            cust_class;
            char                            cashout_lmt[12];
            char                            cashin_lmt[12];
            char                            reserved[465];
         } fhm_pbf;
         struct
         {
            char                            ttl_dep_amt[15];
            char                            confidential_flg;
            char                            sp_stat;
            char                            accrued_interest_ytd[19];
            char                            strt_bal[19];
            char                            passbook_bal[19];
            char                            nbf_rec_cnt[4];
            char                            sig_crd_loc[9];
            char                            passbook_ind;
            char                            cust_class;
            char                            cashout_lmt[12];
            char                            cashin_lmt[12];
            char                            reserved[437];
         } fhm_pbf_expand;
         struct
         {
            char                            ver[4];
            char                            fiid[4];
            char                            prfl[8];
            char                            vrfy_flg[2];
            char                            last_vrfy_flg_upd_ts[20];
            char                            typ[2];
            char                            pvd[16];
            char                            last_pvd_updt_ts[20];
            char                            pvk_idx;
            char                            dflt_acct_num[28];
            char                            dflt_acct_typ[2];
            char                            max_hist_recs[5];
            char                            cust_info_1[20];
            char                            cust_info_2[20];
            char                            cust_info_3[20];
            char                            alt_contact[30];
            char                            beg_dat[8];
            char                            end_dat[8];
            char                            brch_id[4];
            char                            pin_chng_req;
            char                            bp_bill_typ[2];
            char                            pckt_stat;
            char                            last_bp_bill_typ_updt_ts[20];
            char                            last_pckt_stat_updt_ts[20];
            char                            bp_bill_grp[4];
            char                            bp_txn_lmt[15];
            char                            svc_fee_acct[19];
            char                            svc_fee_acct_typ[2];
            char                            reserved[244];
         } fhm_cstt;
         struct
         {
            char                            prsnl_id[28];
            char                            ver[4];
            char                            fiid[4];
            char                            nam_fmly[20];
            char                            nam_given[10];
            char                            nam_m_i;
            char                            nam_tkn_fmly[16];
            char                            nam_tkn_given[6];
            char                            title[6];
            char                            govt_id[15];
            char                            dob[8];
            char                            str_addr_1[30];
            char                            str_addr_2[30];
            char                            str_addr_3[30];
            char                            city[25];
            char                            st_cde[2];
            char                            cntry_cde[3];
            char                            postal_cde[10];
            char                            lang_ind[4];
            char                            phn_home[20];
            char                            phn_work[20];
            char                            phn_other_1[20];
            char                            phn_other_1_descr[10];
            char                            phn_other_2[20];
            char                            phn_other_2_descr[10];
            char                            mthr_mdn_nam[20];
            char                            reserved[178];
         } fhm_pit;
         struct
         {
            char                            data[550];
         } x917_csm;
         struct
         {
            struct
            {
               char                            txt_lines[2];
               char                            txt[11][40];
            } mail_msg;
            char                            reserved[108];
         } ems;
         struct
         {
            char                            tkn_id[2];
            char                            spfi_tkn[548];
         } tlr;
         struct
         {
            char                            branch_num[4];
            char                            dept_num[2];
            char                            pin_mailer;
            char                            card_carrier;
            char                            cardholder_title;
            char                            open_text1[40];
            char                            name_line_1[30];
            char                            name_line_2[30];
            char                            addr_line_1[34];
            char                            addr_line_2[34];
            char                            city[22];
            char                            state[3];
            char                            postal_code[9];
            char                            country_code[3];
            char                            issue_stat[2];
            char                            cards_to_issue[2];
            char                            cards_ret[2];
            char                            srvc_cde[3];
            char                            reserved[327];
         } fhm_caf;
         struct
         {
            char                            acct1_qual[4];
            char                            acct2_qual[4];
            char                            reserved[542];
         } tb;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            phn_home[20];
            char                            phn_wrk[20];
            char                            phn_othr1[20];
            char                            phn_othr1_descr[8];
            char                            phn_othr2[20];
            char                            phn_othr2_descr[8];
            char                            reserved[446];
         } fhm_ccif0004;
      } u_data;
   } secndry_rsrvd4_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[684];
         struct
         {
            char                            dep_typ;
            char                            reserved[683];
         } atm;
         struct
         {
            char                            batch_seq_num[3];
            char                            batch_num[3];
            char                            shift_num[3];
            char                            reserved[675];
         } pos;
         struct
         {
            struct
            {
               char                            num_srv[4];
               struct
               {
                  char                            typ[2];
                  char                            db_cnt[4];
                  char                            db[18];
                  char                            cr_cnt[4];
                  char                            cr[18];
                  char                            adj_cnt[4];
                  char                            adj[18];
               } srv[10];
            } set_recx2;
         } pos_setl2;
         struct
         {
            char                            ttl_pur_lmt[12];
            char                            offl_pur_lmt[12];
            char                            ttl_cca_lmt[12];
            char                            offl_cca_lmt[12];
            char                            ttl_wdl_lmt[12];
            char                            offl_wdl_lmt[12];
            char                            use_lmt[4];
            char                            rsn_cde;
            struct
            {
               char                            cnt[4];
               char                            amt[12];
            } ttl_key_entry_lmt;
            struct
            {
               char                            cnt[4];
               char                            amt[12];
            } offl_key_entry_lmt;
            char                            per_db_tran_lmt[7];
            char                            pin_req;
            char                            old_crd_exp_dat[4];
            char                            old_crd_stat;
            char                            old_crd_rsn_cde;
            char                            reserved[561];
         } fhm_caf;
         struct
         {
            char                            crd_exp_dat[4];
            char                            old_crd_exp_dat[4];
            char                            old_crd_rsn_cde[2];
            char                            reserved[674];
         } fhm_neg;
         struct
         {
            char                            ttl_float[12];
            char                            cur_float[12];
            char                            reserved[660];
         } fhm_pbf;
         struct
         {
            char                            add_data[684];
         } tlr;
         struct
         {
            struct
            {
               char                            seq_num[12];
               char                            hold_amt[19];
               struct
               {
                  struct
                  {
                     char                            yy[2];
                     char                            mm[2];
                     char                            dd[2];
                  } dat;
                  struct
                  {
                     char                            hh[2];
                     char                            mm[2];
                     char                            ss[2];
                     char                            tt[2];
                  } tim;
               } pr_ts;
               char                            acct_typ[2];
               char                            acct[19];
            } pre_auth[2];
            char                            reserved[24];
         } fhm_pre_auth_caf;
         struct
         {
            struct
            {
               char                            seq_num[12];
               char                            hold_amt[19];
               struct
               {
                  struct
                  {
                     char                            yy[2];
                     char                            mm[2];
                     char                            dd[2];
                  } dat;
                  struct
                  {
                     char                            hh[2];
                     char                            mm[2];
                     char                            ss[2];
                     char                            tt[2];
                  } tim;
               } pr_ts;
            } pre_auth[10];
            char                            reserved[234];
         } fhm_pre_auth_pbf;
         struct
         {
            char                            tkn_data[400];
            char                            reserved[284];
         } tb;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            nam[30];
            char                            govt_id[15];
            char                            mthr_mdn_nam[20];
            char                            dob[6];
            char                            str_addr1[30];
            char                            str_addr2[30];
            char                            city[18];
            char                            st[3];
            char                            cntry[3];
            char                            postal_cde[10];
            char                            phn_home[20];
            char                            phn_wrk[20];
            char                            phn_othr1[20];
            char                            phn_othr1_descr[8];
            char                            reserved[443];
         } fhm_ccif0000;
         struct
         {
            char                            pan[19];
            char                            ver[4];
            char                            dat_lost[6];
            char                            dat_rptd[6];
            char                            rpt_taken_by[3];
            char                            lost_stln_ind;
            char                            line_cnt[2];
            char                            memo_data[8][72];
            char                            reserved[67];
         } fhm_ccmf;
      } u_data;
   } secndry_rsrvd5_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[680];
         struct
         {
            char                            proc_acct_ind;
            char                            reserved[679];
         } atm;
         struct
         {
            char                            page_ind[2];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } lst_stmt_dat;
            char                            header_lines[2];
            char                            column_lines[2];
            char                            stmt_fld[360];
            char                            user_fld[308];
         } stmt;
         struct
         {
            char                            srv[2];
            char                            orig[4];
            char                            dest[4];
            char                            dft_capture_flg;
            char                            setl_flg;
            char                            reserved[668];
         } pos;
         struct
         {
            struct
            {
               struct
               {
                  struct
                  {
                     char                            db_cnt[4];
                     char                            db[18];
                     char                            cr_cnt[4];
                     char                            cr[18];
                     char                            adj_cnt[4];
                     char                            adj[18];
                  } dc_tot;
                  struct
                  {
                     char                            db_cnt[4];
                     char                            db[18];
                     char                            cr_cnt[4];
                     char                            cr[18];
                     char                            adj_cnt[4];
                     char                            adj[18];
                  } tot;
                  struct
                  {
                     char                            db_cnt[4];
                     char                            db[18];
                     char                            cr_cnt[4];
                     char                            cr[18];
                     char                            adj_cnt[4];
                     char                            adj[18];
                  } cn_dc_tot;
                  struct
                  {
                     char                            db_cnt[4];
                     char                            db[18];
                     char                            cr_cnt[4];
                     char                            cr[18];
                     char                            adj_cnt[4];
                     char                            adj[18];
                  } cn_tot;
               } stl;
            } set_recx1b;
            char                            reserved[416];
         } pos_setl1b;
         struct
         {
            char                            days_delinq[2];
            char                            months_active[2];
            char                            cycle_1[2];
            char                            cycle_2[2];
            char                            cycle_3[2];
            char                            reserved[670];
         } fhm_pbf_parametric_auth;
         struct
         {
            char                            cr_line_acct[28];
            char                            cr_line_acct_typ[2];
            char                            cr_line_amt[12];
            char                            cr_line_amt_chb[12];
            char                            crncy_cde[3];
            char                            reserved[623];
         } tb;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            str_addr1[30];
            char                            str_addr2[30];
            char                            str_addr3[30];
            char                            city[18];
            char                            st[3];
            char                            cntry[3];
            char                            postal_cde[10];
            char                            reserved[548];
         } fhm_ccif0003;
      } u_data;
   } secndry_rsrvd6_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[998];
         struct
         {
            char                            pre_auth_hld[3];
            char                            pre_auth_seq_num[12];
            char                            rfrl_phone[20];
            char                            rea_for_chrgbck[2];
            char                            num_of_chrgbck;
            char                            reserved[960];
         } pos;
         struct
         {
            char                            acct_cnt[2];
            struct
            {
               char                            typ[2];
               char                            num[28];
               char                            stat;
               union
               {
                  char                            descr[10];
                  char                            ach_rttn[10];
               } u_descr;
               union
               {
                  char                            corp_pbf_ind;
                  char                            ach_ind;
               } u_corp_pbf_ind;
            } acct[2];
            char                            reserved[324];
         } fhm_caf_acct;
         struct
         {
            char                            acct_cnt[2];
            struct
            {
               char                            typ[2];
               char                            num[28];
               char                            stat;
               union
               {
                  char                            descr[10];
                  char                            ach_rttn[10];
               } u_descr;
               union
               {
                  char                            corp_pbf_ind;
                  char                            ach_ind;
               } u_corp_pbf_ind;
               char                            qual;
            } acct[16];
            char                            reserved[308];
         } fhm_caf_acct_expand;
         struct
         {
            struct
            {
               char                            acct_num[19];
            } cr_line_acct;
            char                            cr_line_acct_typ[2];
            char                            reserved[977];
         } fhm_pbf_cr_line;
         struct
         {
            char                            tkn_id[2];
            char                            pbfi_tkn[798];
            char                            reserved[198];
         } tlr;
         struct
         {
            struct
            {
               char                            inst_id_num[11];
               char                            acct_num[19];
               char                            acct_stat;
               char                            chk_lmt[15];
            } corp_acct[15];
            char                            reserved[308];
         } fhm_ccf;
         struct
         {
            char                            last_txn_cnt[2];
            char                            crncy_cde[3];
            char                            user_fld;
            struct
            {
               char                            dat[6];
               char                            amt[12];
               char                            chq_num[12];
               char                            db_cr_ind;
               char                            src_ind;
               char                            txn_flgs[16];
               char                            host_txn_cde[8];
            } hist[15];
            char                            reserved[152];
         } tb;
         struct
         {
            char                            cnt[2];
            char                            adnl_data_flg;
            char                            cust_typ[2];
            char                            cust_vrfy_flg[2];
            char                            cust_info_1[20];
            char                            cust_info_2[20];
            char                            cust_info_3[20];
            char                            user_fld;
            struct
            {
               char                            num[19];
               char                            typ[2];
               char                            qual[4];
               char                            fiid[4];
               char                            stat;
               char                            descr[15];
               char                            act_alwd_db;
               char                            act_alwd_cr;
               char                            act_alwd_inq;
            } acct[15];
            char                            reserved[210];
         } tb_acct_list_inq_data;
         struct
         {
            char                            cnt[2];
            char                            adnl_data_flg;
            char                            user_fld;
            struct
            {
               char                            cvnd_num[5];
               char                            cust_acct_vndr[28];
               char                            acct_vrfy;
               char                            acct_vrfy_gmt[20];
               char                            acct_beg_dat[8];
               char                            acct_end_dat[8];
               char                            budget_cat[4];
               char                            cvnd_short_nam[16];
               char                            user_info_1[20];
               char                            user_info_2[20];
               struct
               {
                  char                            cvnd_updt_typ;
                  char                            cvnd_grp_num[5];
                  char                            cvnd_user_num[5];
                  char                            cvnd_term_nam[24];
                  char                            cvnd_aft_ts[20];
                  char                            cvnd_oltp_ts[20];
                  char                            cvnd_xfiller;
               } cvnd_fm_tag;
               char                            vndr_nam[30];
               char                            main_branch_num[4];
               char                            remit_branch_num[4];
               char                            remit_person[22];
               char                            vrfy;
               char                            vrfy_descr[10];
               char                            vrfy_gmt[20];
               char                            vndr_beg_dat[8];
               char                            vndr_end_dat[8];
               char                            govt_id[15];
               char                            inst_id[11];
               char                            acct_num[19];
               char                            acct_typ[2];
               char                            remit_typ[3];
               char                            remit_rpt_typ[2];
               char                            dflt_vbud_cat[4];
               char                            audio_tkn[20];
               char                            warn_pmnt_lmt_amt[20];
               char                            vndr_mask_grp[4];
               char                            vndr_typ;
               char                            vndr_typ_descr[7];
               char                            prenote_bus_dat[8];
               char                            vndr_spec_data_typ[2];
               char                            vndr_spec_data_descr[30];
               char                            vndr_user_remit_info_1[20];
               char                            vndr_user_remit_info_2[20];
               char                            cat_cde[4];
               struct
               {
                  char                            vndr_updt_typ;
                  char                            vndr_grp_num[5];
                  char                            vndr_user_num[5];
                  char                            vndr_term_nam[24];
                  char                            vndr_aft_ts[20];
                  char                            vndr_oltp_ts[20];
                  char                            vndr_xfiller;
               } vndr_fm_tag;
               char                            xfiller1;
               char                            vndr_num[9];
               char                            brch_num[4];
               char                            vndr_brch_nam[30];
               char                            addr_1[30];
               char                            addr_2[30];
               char                            city[25];
               char                            st[2];
               char                            postal_cde[10];
               char                            cnty[3];
               char                            cntry[3];
               char                            phn[20];
               char                            contact_person[22];
               char                            fax_phn[20];
               char                            company_phn[20];
               char                            mask_grp[4];
               char                            vndb_user_remit_info_1[20];
               char                            vndb_user_remit_info_2[20];
               struct
               {
                  char                            vndb_updt_typ;
                  char                            vndb_grp_num[5];
                  char                            vndb_user_num[5];
                  char                            vndb_term_nam[24];
                  char                            vndb_aft_ts[20];
                  char                            vndb_oltp_ts[20];
                  char                            vndb_xfiller;
               } vndb_fm_tag;
               char                            cust_vbud_cat_descr[30];
               char                            dflt_vbud_cat_descr[30];
            } cust_vndr_data;
            char                            reserved[4];
         } tb_cust_vndr_inq_data;
         struct
         {
            char                            cnt[2];
            char                            adnl_data_flg;
            char                            user_fld;
            struct
            {
               char                            pmnt_made[4];
               char                            ttl_pmnt[4];
               char                            init_pmnt_dat[8];
               char                            recur_prd[2];
               char                            sti_part_num[5];
               char                            sti_pmnt_dat[8];
               char                            retry_nxt_proc_gmt[20];
               char                            ref_num[6];
               char                            cust_vndr_num[5];
               char                            vndr_num[9];
               char                            cust_acct_vndr[28];
               char                            bp_gmt[20];
               char                            txn_typ[2];
               char                            from_fiid[4];
               char                            from_acct_num[19];
               char                            from_acct_typ[2];
               char                            to_fiid[4];
               char                            to_acct_num[19];
               char                            to_acct_typ[2];
               char                            amt[12];
               char                            txn_src[2];
               char                            txn_src_num[6];
               char                            txn_src_lct[20];
               char                            vndr_specific_data[30];
               char                            pmnt_dat[8];
               char                            sched_typ;
               char                            blg_txt[28];
               char                            processing_stat[2];
               char                            sti_rqst_gmt[20];
               char                            retry_cnt_transient[4];
               char                            retry_cnt_nontransient[4];
               char                            retry_last_resp_cde[3];
               char                            remit_typ[3];
               struct
               {
                  char                            futr_updt_typ;
                  char                            futr_grp_num[5];
                  char                            futr_user_num[5];
                  char                            futr_term_nam[24];
                  char                            futr_aft_ts[20];
                  char                            futr_oltp_ts[20];
                  char                            futr_xfiller;
               } futr_fm_tag;
               char                            vndr_nam[30];
               char                            vndr_tkn[20];
               char                            crncy_cde[3];
               char                            from_acct_typ_descr[6];
               char                            xfiller1;
            } pmnt_info[2];
            char                            reserved[94];
         } tb_sched_pmnt_inq_data;
         struct
         {
            char                            cnt[2];
            char                            adnl_data_flg;
            char                            user_fld;
            struct
            {
               char                            pmnt_made[4];
               char                            ttl_pmnt[4];
               char                            init_pmnt_dat[8];
               char                            recur_prd[2];
               char                            sti_part_num[5];
               char                            sti_pmnt_dat[8];
               char                            retry_nxt_proc_gmt[20];
               char                            ref_num[6];
               char                            cust_vndr_num[5];
               char                            vndr_num[9];
               char                            cust_acct_vndr[28];
               char                            bp_gmt[20];
               char                            txn_typ[2];
               char                            from_fiid[4];
               char                            from_acct_num[19];
               char                            from_acct_typ[2];
               char                            to_fiid[4];
               char                            to_acct_num[19];
               char                            to_acct_typ[2];
               char                            amt[12];
               char                            txn_src[2];
               char                            txn_src_num[6];
               char                            txn_src_lct[20];
               char                            vndr_specific_data[30];
               char                            pmnt_dat[8];
               char                            sched_typ;
               char                            blg_txt[28];
               char                            processing_stat[2];
               char                            sti_rqst_gmt[20];
               char                            retry_cnt_transient[4];
               char                            retry_cnt_nontransient[4];
               char                            retry_last_resp_cde[3];
               char                            remit_typ[3];
               struct
               {
                  char                            futr_updt_typ;
                  char                            futr_grp_num[5];
                  char                            futr_user_num[5];
                  char                            futr_term_nam[24];
                  char                            futr_aft_ts[20];
                  char                            futr_oltp_ts[20];
                  char                            futr_xfiller;
               } futr_fm_tag;
               char                            crncy_cde[3];
               char                            from_acct_typ_descr[6];
               char                            to_acct_typ_descr[6];
               char                            xfiller1;
            } xfer_info[2];
            char                            reserved[182];
         } tb_sched_xfer_inq_data;
         struct
         {
            char                            cnt[2];
            char                            adnl_data_flg;
            char                            user_fld;
            struct
            {
               char                            part_num[5];
               char                            gmt[20];
               char                            ref_num[6];
               char                            cust_vndr_num[5];
               char                            vndr_num[9];
               char                            cust_acct_vndr[28];
               char                            bp_gmt[20];
               char                            txn_typ[2];
               char                            from_fiid[4];
               char                            from_acct_num[19];
               char                            from_acct_typ[2];
               char                            to_fiid[4];
               char                            to_acct_num[19];
               char                            to_acct_typ[2];
               char                            amt[12];
               char                            txn_src[2];
               char                            txn_src_num[6];
               char                            txn_src_lct[20];
               char                            vndr_specific_data[30];
               char                            pmnt_dat[8];
               char                            sched_typ;
               char                            blg_txt[28];
               char                            orig_ref_num[6];
               char                            resp_cde[3];
               char                            rvsl_reason[4];
               char                            auth_act_cde[3];
               char                            auth_apprv_cde[9];
               char                            coll_stat;
               char                            bus_dat[8];
               char                            remit_bus_dat[8];
               char                            remit_stat;
               char                            remit_typ[3];
               char                            remit_ack_gmt[20];
               char                            remit_ack_num[10];
               char                            remit_ack_rcvd_gmt[20];
               struct
               {
                  char                            hist_updt_typ;
                  char                            hist_grp_num[5];
                  char                            hist_user_num[5];
                  char                            hist_term_nam[24];
                  char                            hist_aft_ts[20];
                  char                            hist_oltp_ts[20];
                  char                            hist_xfiller;
               } hist_fm_tag;
               char                            from_acct_typ_descr[6];
               char                            to_acct_typ_descr[6];
               char                            resp_cde_descr[30];
               char                            vndr_nam[30];
               char                            vndr_tkn[20];
               char                            crncy_cde[3];
               char                            txn_typ_fin_descr[4];
               char                            xfiller1;
            } txn_info;
            char                            reserved[470];
         } tb_last_set_pmnt_data;
         struct
         {
            char                            cnt[2];
            struct
            {
               char                            acct_num[19];
               char                            acct_typ[2];
               char                            act_cde[2];
               char                            bal_dat[8];
               char                            crncy_cde[3];
               struct
               {
                  char                            bal_amt_typ[2];
                  char                            bal_amt_sign;
                  char                            bal_amt[12];
                  char                            user_fld2;
               } bal_data[2];
            } acct_bal_info[13];
            char                            reserved[138];
         } tb_mult_acct_bal_data;
         struct
         {
            char                            last_txn_cnt[2];
            char                            crncy_cde[3];
            char                            adnl_data_flg;
            struct
            {
               char                            dat[6];
               char                            amt[12];
               char                            chq_num[12];
               char                            db_cr_ind;
               char                            src_ind;
               char                            txn_flgs[16];
               char                            host_txn_cde[8];
               char                            fi_txn_id[32];
               char                            spcl_data_typ;
               char                            reserved;
               union
               {
                  char                            spcl_data[160];
                  struct
                  {
                     char                            payee_nam[32];
                     char                            payee_addr1[32];
                     char                            payee_addr2[32];
                     char                            payee_city[32];
                     char                            payee_st[2];
                     char                            payee_zip[10];
                     char                            payee_phone[20];
                  } pmnt;
                  struct
                  {
                     char                            other_acct[19];
                     char                            other_acct_typ[2];
                     char                            reserved[139];
                  } xfer;
               } u_spcl_data;
            } hist[3];
            char                            reserved[242];
         } tb_stmt_dwnld_data;
         struct
         {
            char                            last_txn_cnt[2];
            char                            crncy_cde[3];
            char                            adnl_data_flg;
            struct
            {
               char                            fi_txn_id[32];
               char                            clos_dat[6];
               char                            clos_bal[12];
               char                            beg_post_dat[6];
               char                            end_post_dat[6];
            } info[16];
         } tb_stmt_clos_dwnld_data;
         struct
         {
            char                            add_data[936];
         } atm;
      } u_data;
   } secndry_rsrvd7_prvt;
   struct
   {
      char                            len[3];
      union
      {
         char                            data[200];
         char                            pos_user_data[200];
         struct
         {
            char                            micr_data[43];
            char                            reserved[157];
         } atm;
         struct
         {
            char                            addr[20];
            char                            zip_cde[9];
            char                            reserved[171];
         } fhm_caf_addr;
         struct
         {
            char                            cust_short_nam[40];
            char                            reserved[160];
         } fhm_pbf_nam;
         struct
         {
            char                            tkn_id[2];
            char                            cafi_tkn[198];
         } tlr;
         struct
         {
            char                            last_txn_alwd_cnt[2];
            char                            last_txn_cust_max[4];
            char                            reserved[194];
         } tb;
         struct
         {
            char                            seg_id[4];
            char                            ver[4];
            char                            discr_data[72];
            char                            reserved[120];
         } fhm_ccif0006;
      } u_data;
   } secndry_rsrvd8_prvt;
   char                            secndry_mac_cde[16];
} isossem_def;
#define isossem_def_Size 7180
#pragma section stm
/* Definition STM created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __stm
typedef struct __stm
{
   char                            typ[4];
   char                            prod_id[2];
   short                           dpc_num;
   char                            tran_cde[2];
   char                            from_acct_typ[2];
   char                            to_acct_typ[2];
   struct
   {
      char                            stat[2];
      char                            not_on_us_flg;
      char                            orig_pro_name[16];
      char                            hld_orig_pro_name[16];
      char                            originator;
      char                            responder;
      char                            excpt_flg;
   } rte;
   char                            crd_ln[4];
   char                            rcv_inst_id_num[11];
   char                            crd_fiid[4];
   char                            shrg_grp[24];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   char                            user_fld1;
   short                           tim_ofst;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } acq_ichg_setl_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } iss_ichg_setl_dat;
   char                            term_owner_fiid[4];
   char                            term_id[16];
   char                            term_ln[4];
   char                            brch_id[4];
   char                            regn_id[4];
   char                            seq_num[12];
   char                            dep_setl_imp_flg;
   char                            adj_setl_imp_flg;
   char                            proc_acct_ind;
   union
   {
      char                            term_capture_flg;
      char                            user_fld2;
   } u_term_capture_flg;
   union
   {
      struct
      {
         char                            track2[40];
         char                            pin_ofst[16];
         char                            mbr_num[3];
         char                            term_typ[2];
         char                            orig_crncy_cde[3];
         union
         {
            struct
            {
               char                            auth_crncy_cde[3];
               char                            setl_crncy_cde[3];
               char                            auth_conv_rate[8];
               char                            setl_conv_rate[8];
               long long                       conv_dat_tim;
            } mult_crncy;
            char                            user_fld3[30];
         } u_mult_crncy;
         char                            acq_inst_id_num[11];
         char                            mult_acct;
         char                            rvsl_cde[2];
         struct
         {
            char                            acct_num[19];
         } from_acct;
         char                            user_fld4;
         struct
         {
            char                            acct_num[19];
         } to_acct;
         char                            pin[16];
         char                            pin_size[2];
         char                            pin_tries;
         char                            pin_key[16];
         char                            pin_frmt;
         char                            pinpad_char;
         short                           ansi_ofst;
         char                            user_key[16];
         char                            user_fld4a[2];
         char                            cust_bal_info;
         char                            cust_bal_dspy;
         long long                       amt_1;
         long long                       amt_2;
         long long                       amt_3;
         __int32_t                       dep_bal_cr;
         char                            avail_dep_typ;
         char                            dep_typ;
         char                            compl_req;
         char                            resp[3];
         char                            term_name_loc[25];
         char                            term_owner_name[22];
         char                            term_city[13];
         char                            term_st_x[3];
         char                            term_cntry_x[2];
         struct
         {
            char                            seq_num[12];
            char                            tran_dat[4];
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } tran_tim;
            char                            b24_post_dat[4];
         } orig;
         char                            term_tran_allowed;
         char                            trace_num[6];
         char                            term_st[2];
         char                            term_cnty[3];
         char                            term_cntry[3];
         char                            user_fld5[16];
         char                            pri_dest[16];
         char                            alt_dest[16];
         char                            auth_dest[16];
         char                            dest_order;
         char                            rte_grp[11];
         struct
         {
            char                            from_acct_typ[2];
            char                            to_acct_typ[2];
         } save_acct;
         char                            postal_cde[10];
         char                            user_fld6[38];
         char                            frmt;
         char                            prnt_siz[3];
      } rqst;
      struct
      {
         struct
         {
            char                            acct_typ[2];
            char                            cnt;
            char                            user_fld7;
            struct
            {
               struct
               {
                  char                            acct_num[19];
               } num;
               char                            user_fld8;
               char                            descr[10];
            } info[5];
         } mult[2];
         char                            pin_vrfy_flg;
         char                            save_area[171];
      } acct;
      struct
      {
         char                            crd_stat;
         char                            user_fld8a;
         short                           pin_tries;
         long long                       limit;
         short                           cnt;
         struct
         {
            char                            typ[2];
            struct
            {
               char                            acct_num[19];
            } num;
            char                            stat;
         } accts[16];
         char                            save_area[114];
      } crd_review;
      struct
      {
         char                            hi_pro_name[16];
         char                            track2[40];
         char                            save_from_acct_typ[2];
         char                            mbr_num[3];
         char                            term_typ[2];
         char                            acq_inst_id_num[11];
         struct
         {
            char                            acct_num[19];
         } from_acct;
         char                            resp[3];
         struct
         {
            char                            page_ind[2];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } last_stmt_dat;
            char                            header_lines[2];
            char                            column_lines[2];
            char                            stmt_fld[360];
            char                            user_fld9[8];
            char                            frmt;
            char                            prnt_siz[3];
         } stmt;
      } stmt_info;
   } u_rqst;
   long long                       entry_tim;
   long long                       exit_tim;
   long long                       re_entry_tim;
   char                            crd_accpt_id_num[11];
   char                            frwd_inst_id_num[11];
   char                            crd_iss_id_num[11];
   char                            auth_id_resp[6];
   char                            track3[107];
   char                            micr_data[43];
   char                            user_fld10;
} stm_def;
#define stm_def_Size 872
#pragma section fstm
/* Definition FSTM created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __fstm
typedef struct __fstm
{
   char                            typ[4];
   char                            prod_id[2];
   short                           dpc_num;
   struct
   {
      char                            stat[2];
      char                            orig_pro_name[16];
      char                            originator;
      char                            responder;
   } rte;
   char                            crd_ln[4];
   char                            rcv_inst_id_num[11];
   char                            crd_fiid[4];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            term_owner_fiid[4];
   char                            term_id[16];
   char                            term_ln[4];
   char                            xmit_dat_tim[10];
   char                            seq_num[12];
   char                            resp_cde_bnet[2];
   struct
   {
      char                            type_file[2];
      char                            file_updt_cde;
      char                            security_cde[5];
      struct
      {
         char                            len[2];
         char                            name[17];
      } fname;
      union
      {
         char                            fhm_buf[400];
         struct
         {
            struct
            {
               char                            card_num[19];
               char                            ica[6];
               char                            card_program[3];
               char                            resp_cde[2];
               char                            entry_rsn;
               char                            user_fld[25];
               char                            reg_ind1;
               char                            purge_dat1[6];
               char                            reg_ind2;
               char                            purge_dat2[6];
               char                            reg_ind3;
               char                            purge_dat3[6];
               char                            reg_ind4;
               char                            purge_dat4[6];
               char                            reg_ind5;
               char                            purge_dat5[6];
               char                            reg_ind6;
               char                            purge_dat6[6];
               char                            sv_suffix_103;
               char                            flg_type_msg;
            } fhm_mcc103;
            struct
            {
               char                            error_cde[6];
               char                            reg_ind1;
               char                            vig_dat1[6];
               char                            purge_dat1[6];
               char                            reg_ind2;
               char                            vig_dat2[6];
               char                            purge_dat2[6];
               char                            reg_ind3;
               char                            vig_dat3[6];
               char                            purge_dat3[6];
               char                            reg_ind4;
               char                            vig_dat4[6];
               char                            purge_dat4[6];
               char                            reg_ind5;
               char                            vig_dat5[6];
               char                            purge_dat5[6];
               char                            reg_ind6;
               char                            vig_dat6[6];
               char                            purge_dat6[6];
            } resp_add_data;
            char                            reserved[213];
         } bnet;
      } u_fhm_buf;
      char                            trace_num[6];
   } rqst;
   long long                       entry_tim;
   long long                       exit_tim;
} fstm_def;
#define fstm_def_Size 564
#pragma section pstm
/* Definition PSTM created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __pstm
typedef struct __pstm
{
   char                            typ[4];
   char                            prod_id[2];
   short                           dpc_num;
   char                            rte_stat[2];
   char                            orig_pro_name[16];
   char                            ast_rtn_pro_name[16];
   char                            router1_name[16];
   char                            router2_name[16];
   char                            msg_orig_ind;
   char                            originator;
   char                            responder;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            term_ln[4];
   char                            term_fiid[4];
   char                            term_id[16];
   char                            term_name_loc[25];
   char                            term_owner_name[22];
   char                            term_city[13];
   char                            term_st[3];
   char                            term_cntry_cde[2];
   char                            term_typ[2];
   char                            brch_id[4];
   char                            orig_crncy_cde[3];
   char                            auth_ind2;
   short                           term_tim_ofst;
   char                            clerk_id[6];
   struct
   {
      char                            grp[4];
      char                            user_id[8];
   } crt_auth;
   char                            seq_num[12];
   char                            pre_auth_seq_num[12];
   char                            invoice_num[10];
   char                            orig_invoice_num[10];
   char                            batch_seq_num[3];
   char                            batch_num[3];
   char                            shift_num[3];
   char                            acq_inst_id_num[11];
   char                            rcv_inst_id_num[11];
   char                            retl_id[19];
   char                            retl_regn[4];
   char                            retl_grp[4];
   char                            retl_sic_cde[4];
   struct
   {
      struct
      {
         char                            tc[2];
         char                            t;
         char                            aa[2];
         char                            c;
      } tran_cde;
      char                            orig[4];
      char                            dest[4];
      char                            crd_ln[4];
      char                            crd_fiid[4];
      struct
      {
         char                            acct_num[19];
      } acct;
      char                            resp_cde[3];
      char                            rsn_cde[2];
      char                            track2[40];
      char                            mbr_num[3];
      char                            exp_dat[4];
      union
      {
         char                            user_fld2;
         char                            csm_sat_flg;
      } u_user_fld2;
      long long                       amt_1;
      long long                       amt_2;
      union
      {
         struct
         {
            char                            auth_crncy_cde[3];
            char                            setl_crncy_cde[3];
            char                            auth_conv_rate[8];
            char                            setl_conv_rate[8];
            long long                       conv_dat_tim;
         } mult_crncy;
         char                            user_fld3[30];
      } u_mult_crncy;
      short                           pre_auth_hld;
      char                            apprv_cde_lgth;
      char                            apprv_cde[8];
      char                            ichg_resp[8];
      char                            pseudo_term_id[4];
      char                            dft_capture_flg;
      char                            setl_flg;
      char                            rfrl_phone[20];
      char                            save_acct_typ[2];
      char                            ovrrde_flg;
   } tran;
   struct
   {
      char                            srv[2];
      char                            retl_prog;
      char                            iss[2];
      char                            over_lmt;
      __int32_t                       onl_lmt;
      __int32_t                       offl_lmt;
      char                            pri[16];
      char                            alt1[16];
      char                            alt2[16];
      char                            auth_ind;
      char                            dflt;
      char                            hit_nneg;
      char                            ast_fnd;
   } rte;
   char                            compl_req;
   union
   {
      char                            adj_flg;
      char                            pre_auth_opt;
   } u_adj_flg;
   short                           admin_sec_ind;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } acq_ichg_setl_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } iss_ichg_setl_dat;
   char                            rvsl_cde[2];
   char                            pt_srv_cond_cde[2];
   char                            pt_srv_entry_mde[3];
   char                            pin[16];
   char                            pin_size[2];
   char                            pin_tries;
   char                            pin_key[16];
   char                            user_key[16];
   char                            pin_frmt;
   char                            pinpad_char;
   short                           ansi_ofst;
   char                            host_trace_num[6];
   long long                       entry_tim;
   long long                       exit_tim;
   long long                       re_entry_tim;
   char                            frwd_inst_id_num[11];
   char                            crd_accpt_id_num[15];
   char                            crd_iss_id_num[11];
   struct
   {
      char                            msg_typ[4];
      struct
      {
         char                            hh[2];
         char                            mm[2];
         char                            ss[2];
         char                            tt[2];
      } trn_tim;
      char                            trn_dat[4];
      char                            tran_seq_num[12];
      char                            b24_post_dat[4];
   } orig_data;
   char                            rea_for_chrgbck[2];
   char                            num_of_chrgbck;
   union
   {
      char                            check_id_typ[2];
      char                            addr_typ[2];
   } u_check_id_typ;
   union
   {
      char                            check_id_num[24];
      struct
      {
         char                            addr[20];
         char                            addr_vrfy_stat;
         char                            csm_de48_device_type[2];
         char                            user_fld1;
      } addr_flds;
   } u_check_id_num;
   char                            state_cde[2];
   char                            birth_dat[6];
   char                            zip_cde[9];
   char                            csm_campana;
   char                            postal_cde[10];
   char                            user_fld10;
   char                            data_flag;
   short                           num_services;
   struct
   {
      char                            typ[2];
      char                            tran_profile;
      char                            elec_followup;
      __int32_t                       flr_lmt;
      __int32_t                       tran_lmt;
   } srvcs[30];
} pstm_def;
#define pstm_def_Size 1174
#pragma section att
/* Record ATT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __att
typedef struct __att
{
   struct
   {
      char                            acct_typ[2];
   } prikey;
   struct
   {
      char                            acct_typ_nam[6];
   } altkey;
   short                           ver;
   struct
   {
      struct
      {
         long long                       afm_ts;
         short                           updt_typ;
         struct
         {
            short                           grp_num;
            __int32_t                       user_num;
         } user_id;
         char                            term_nam[24];
      } fm;
   } last_afm;
} att_def;
#define att_def_Size 50
/* Constant ATT-VER-JAN94-L created on 10/18/2023 at 17:46 */
#define ATT_VER_JAN94_L 1000
#pragma section tss_msg
/* Definition TSS-MSG created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __tss_msg
typedef struct __tss_msg
{
   char                            msg_hdr[108];
   union
   {
      char                            tss_data[4300];
      struct
      {
         char                            cmd_typ[2];
         char                            crd_exp_dat[4];
         char                            svc_cde[3];
         union
         {
            char                            keya_grp[16];
            struct
            {
               char                            profile[4];
               char                            exp_dat[4];
               char                            aci_key_srch[8];
            } key_srch;
         } u_keya_grp;
         char                            cvd[3];
         char                            pan[19];
         char                            pan_lgth[2];
         struct
         {
            union
            {
               char                            cavv_unpredictable_num[4];
               char                            cavv_rndm_num[4];
            } u_cavv_unpredictable_num;
         } siv;
         char                            version[2];
         char                            cv_algo;
         char                            cv_4_digit[4];
         char                            cv_5_digit[5];
         char                            cv_exp_dat[4];
         union
         {
            char                            rqst_filler_01[4231];
            struct
            {
               char                            eci[2];
               char                            data_prfl[16];
               char                            iav[8];
               char                            suppl_data_lgth[3];
               char                            suppl_data[200];
               char                            rqst_filler_01_ver_3[4002];
            } rqst_01_ver_3;
         } u_rqst_filler_01;
      } cmd_01_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            version[2];
         char                            cv_rslts[3];
         union
         {
            char                            resp_filler_01[4291];
            struct
            {
               char                            amex_csc_algo_ver_used;
               char                            ver_2_resp_filler_01[4290];
            } ver_2_resp;
         } u_resp_filler_01;
      } cmd_01_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            fnct_typ;
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            drvtn_key_idx;
         char                            pan[19];
         char                            mbr_num[3];
         char                            conv_resp_cde[2];
         char                            arqc[8];
         char                            crypto_ver_num;
         char                            cvr[4];
         char                            amt_auth[6];
         char                            amt_other[6];
         char                            term_cntry_cde[2];
         char                            tvr[5];
         char                            txn_crncy_cde[2];
         char                            txn_dat[3];
         char                            txn_typ;
         char                            unpredictable_num[4];
         char                            aip[2];
         char                            atc[2];
         char                            tss_msg_bit_map[4];
         char                            data_blk_lgth[2];
         char                            data_blk[100];
         char                            rqst_filler_02[4100];
      } cmd_02_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            fnct_typ;
         char                            resp_stat[2];
         char                            arpc[16];
         char                            resp_filler_02[4279];
      } cmd_02_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            mbr_num[3];
         char                            atc[2];
         char                            arqc[8];
         char                            script_data[128];
         char                            script_data_lgth[3];
         struct
         {
            char                            key_loc[16];
            char                            txn_orig;
            char                            new_pin_in[16];
            char                            drvtn_key_idx;
            char                            pin_issue_num[3];
            char                            cur_pin_in[16];
            char                            cipher_text_ofst[4];
         } pin_data;
         char                            rqst_filler_03[4058];
      } cmd_03_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            mac_val[16];
         char                            encrypt_pin_out[32];
         char                            resp_filler_03[4248];
      } cmd_03_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_loc[16];
         char                            docutel_typ;
         char                            docutel_vrfy_cnst[16];
         char                            txn_orig;
         char                            num_chk_dgt;
         char                            idx_updt;
         union
         {
            char                            rqst_filler_04[4259];
            struct
            {
               struct
               {
                  char                            new_key_idx;
               } tki;
               char                            ver_num[2];
               struct
               {
                  char                            variant_flg;
               } as2805_data;
               char                            aci_opt[4255];
            } opt;
         } u_rqst_filler_04;
      } cmd_04_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            new_key_chk_dgt[6];
         char                            key_lgth;
         char                            new_key_dist_hdr[8];
         char                            new_key_dist[48];
         char                            new_key_dist_mac[16];
         char                            new_key_store[16];
         char                            docutel_vrfy_val[16];
         union
         {
            char                            resp_filler_04[4182];
            struct
            {
               struct
               {
                  char                            new_key_idx;
               } tki;
               struct
               {
                  char                            ver_num[2];
                  char                            variant_flg;
               } as2805_data;
               char                            aci_opt[4178];
            } opt;
         } u_resp_filler_04;
      } cmd_04_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            new_key_chk_dgt[6];
         char                            key_lgth;
         char                            new_key_dist_hdr[8];
         char                            new_key_dist[48];
         char                            new_key_dist_mac[16];
         char                            new_key_store[16];
         char                            docutel_vrfy_val[16];
         union
         {
            char                            resp_filler_04[4182];
            struct
            {
               struct
               {
                  char                            new_key_idx;
               } tki;
               char                            ver_num[2];
               struct
               {
                  char                            encrypt_typ[2];
               } as2805_data;
               char                            extrn_key_blk_frmt;
               short                           new_key_dist_tr31_lgth;
               char                            new_key_dist_tr31[4174];
            } opt;
         } u_resp_filler_04;
      } cmd_04_ver2_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_loc[16];
         char                            txn_orig;
         char                            rqst_filler_05[4278];
      } cmd_05_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_loc[16];
         char                            resp_filler_05[4277];
      } cmd_05_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            key_typ[2];
         char                            key_xlate_hdr[8];
         char                            key_xlate[48];
         char                            key_xlate_mac[16];
         char                            key_dir;
         char                            kek_loc[16];
         char                            txn_orig;
         char                            num_chk_dgt;
         union
         {
            char                            rqst_filler_06[4205];
            struct
            {
               struct
               {
                  char                            new_key_idx;
               } tki;
               char                            ver_num[2];
               struct
               {
                  char                            variant_flg;
               } as2805_data;
               struct
               {
                  char                            idx_updt;
               } ver_2;
               struct
               {
                  char                            extrn_key_blk_frmt;
                  char                            rqst_filler_even;
                  short                           key_tr31_lgth;
                  char                            key_tr31[1024];
               } ver_3;
               char                            aci_opt[3172];
            } opt;
         } u_rqst_filler_06;
      } cmd_06_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_chk_dgt[6];
         char                            key_store[16];
         char                            resp_filler_06[4272];
      } cmd_06_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            kek_loc[16];
         char                            txn_orig;
         char                            num_chk_dgt;
         union
         {
            char                            rqst_filler_07[4277];
            struct
            {
               struct
               {
                  char                            new_key_idx;
               } tki;
               char                            ver_num[2];
               char                            aci_opt[4274];
            } opt;
         } u_rqst_filler_07;
      } cmd_07_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_chk_dgt[6];
         char                            key_lgth;
         char                            key_dist_hdr[8];
         char                            key_dist[48];
         char                            key_dist_mac[16];
         union
         {
            char                            resp_filler_07[4215];
            struct
            {
               struct
               {
                  char                            new_key_idx;
               } tki;
               char                            ver_num[2];
               struct
               {
                  char                            extrn_key_blk_frmt;
                  char                            resp_filler_even;
                  short                           key_tr31_lgth;
                  char                            key_tr31[1024];
               } ver_2;
               char                            aci_opt[3184];
            } opt;
         } u_resp_filler_07;
      } cmd_07_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            mac_resp_lgth_cde;
         char                            mac_data[4096];
         char                            mac_data_lgth[4];
         char                            key_loc[16];
         char                            txn_orig;
         char                            key_dir;
         char                            old_key_flg;
         char                            iv_flg;
         char                            mac_function;
         union
         {
            char                            rqst_filler_08[176];
            struct
            {
               struct
               {
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[175];
            } opt;
         } u_rqst_filler_08;
      } cmd_08_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            mac_chk_dgt[6];
         char                            mac_val[16];
         union
         {
            char                            resp_filler_08[4274];
            struct
            {
               struct
               {
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[4273];
            } opt;
         } u_resp_filler_08;
      } cmd_08_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            mac_resp_lgth_cde;
         char                            mac_val[16];
         char                            mac_data[4096];
         char                            mac_data_lgth[4];
         char                            key_loc[16];
         char                            txn_orig;
         char                            key_dir;
         char                            old_key_flg;
         union
         {
            char                            rqst_filler_09[162];
            struct
            {
               struct
               {
                  char                            racal_mac_funct;
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[160];
            } opt;
         } u_rqst_filler_09;
      } cmd_09_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            mac_chk_dgt[6];
         union
         {
            char                            resp_filler_09[4290];
            struct
            {
               struct
               {
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[4289];
            } opt;
         } u_resp_filler_09;
      } cmd_09_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin[16];
         char                            key_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_blk_typ;
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         char                            rqst_filler_10[4209];
      } cmd_10_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            resp_filler_10[4282];
      } cmd_10_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            diebold_algo_num[2];
         char                            pin[16];
         char                            key_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_blk_typ;
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         char                            rqst_filler_11[4207];
      } cmd_11_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            resp_filler_11[4282];
      } cmd_11_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin[16];
         char                            kpe_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_blk_typ;
         char                            pvk_ind;
         char                            pvv_val[4];
         char                            txn_orig;
         char                            rqst_filler_12[4218];
      } cmd_12_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            pvv_val[12];
         char                            pvv_lgth[2];
         char                            resp_filler_12[4282];
      } cmd_12_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            kpe_loc_in[16];
         char                            kpe_loc_out[16];
         char                            pin_in[16];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            txn_orig;
         union
         {
            char                            rqst_filler_13[4228];
            struct
            {
               struct
               {
                  char                            input_pin_key_idx;
                  char                            output_pin_key_idx;
               } tki;
               char                            aci_opt[4226];
            } opt;
         } u_rqst_filler_13;
      } cmd_13_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            pin_out[16];
         union
         {
            char                            resp_filler_13[4280];
            struct
            {
               struct
               {
                  char                            output_pin_key_idx;
               } tki;
               char                            aci_opt[4279];
            } opt;
         } u_resp_filler_13;
      } cmd_13_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin[16];
         char                            kpe_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         union
         {
            char                            rqst_filler_14[4210];
            struct
            {
               struct
               {
                  char                            pin_key_idx;
               } tki;
               char                            aci_opt[4209];
            } opt;
         } u_rqst_filler_14;
      } cmd_14_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_14[4296];
      } cmd_14_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            diebold_algo_num[2];
         char                            pin[16];
         char                            kpe_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         union
         {
            char                            rqst_filler_15[4208];
            struct
            {
               struct
               {
                  char                            pin_key_idx;
               } tki;
               char                            aci_opt[4207];
            } opt;
         } u_rqst_filler_15;
      } cmd_15_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_15[4296];
      } cmd_15_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin[16];
         char                            kpe_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pvk_ind;
         char                            pvv_val[4];
         char                            txn_orig;
         union
         {
            char                            rqst_filler_16[4219];
            struct
            {
               struct
               {
                  char                            pin_key_idx;
               } tki;
               char                            aci_opt[4218];
            } opt;
         } u_rqst_filler_16;
      } cmd_16_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_16[4296];
      } cmd_16_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            drvtn_key_idx;
         char                            pan[19];
         char                            mbr_num[3];
         char                            crypto_ver_num;
         char                            atc[2];
         char                            encrypt_cntrs[8];
         char                            key_drvtn_method;
         char                            rqst_filler_17[4243];
      } cmd_17_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            offl_cumulated_txn_amt[6];
         char                            offl_cnsc_txn_num[2];
         char                            resp_filler_17[4288];
      } cmd_17_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_loc[16];
         char                            txn_orig;
         char                            rqst_filler_18[4278];
      } cmd_18_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_loc[16];
         char                            resp_filler_18[4277];
      } cmd_18_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            kpe_loc_in[16];
         char                            kpe_loc_out[16];
         char                            pin_in[16];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            mac_data[4096];
         char                            mac_data_lgth[4];
         char                            mac_data_typ;
         char                            pin_loc[4];
         union
         {
            char                            rqst_filler_19[124];
            struct
            {
               struct
               {
                  char                            pin_key_idx;
                  char                            mac_key_dir;
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[121];
            } opt;
         } u_rqst_filler_19;
      } cmd_19_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            pin_out[16];
         char                            mac_val[16];
         char                            mac_chk_dgt[6];
         union
         {
            char                            resp_filler_19[4258];
            struct
            {
               struct
               {
                  char                            pin_key_idx;
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[4256];
            } opt;
         } u_resp_filler_19;
      } cmd_19_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            key_loc[16];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_idx;
         char                            txn_orig;
         char                            num_chk_dgt;
         char                            rqst_filler_20[4274];
      } cmd_20_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            chk_dgt[6];
         char                            resp_filler_20[4288];
      } cmd_20_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            fnct_typ;
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            drvtn_key_idx;
         char                            pan[19];
         char                            mbr_num[3];
         char                            conv_resp_cde[16];
         char                            arqc[8];
         char                            crypto_ver_num;
         char                            unpredictable_num[4];
         char                            atc[2];
         char                            data_blk_lgth[2];
         char                            data_blk[100];
         char                            key_drvtn_method;
         char                            rqst_filler_22[4118];
      } cmd_22_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            fnct_typ;
         char                            arpc[16];
         char                            resp_filler_22[4277];
      } cmd_22_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            fnct_typ;
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            mbr_num[3];
         char                            atc[2];
         char                            arqc[8];
         char                            script_data[128];
         char                            script_data_lgth[2];
         char                            key_drvtn_method;
         struct
         {
            char                            key_loc[16];
            char                            txn_orig;
            char                            new_pin_in[16];
            char                            drvtn_key_idx;
            char                            pin_issue_num[3];
            char                            cur_pin_in[16];
            char                            cipher_text_ofst[4];
         } pin_data;
         char                            rqst_filler_23[4055];
      } cmd_23_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            fnct_typ;
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            mbr_num[3];
         char                            atc[2];
         char                            arqc[8];
         char                            script_data[128];
         char                            script_data_lgth[2];
         char                            key_drvtn_method;
         char                            crypto_ver_num;
         struct
         {
            char                            key_loc[16];
            char                            txn_orig;
            char                            new_pin_in[16];
            char                            drvtn_key_idx;
            char                            pin_issue_num[3];
            char                            cur_pin_in[16];
            char                            cipher_text_ofst[4];
         } pin_data;
         char                            rqst_filler_23[4054];
      } cmd_23_ver2_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            fnct_typ;
         char                            mac_val[16];
         char                            encrypt_pin_out[32];
         char                            resp_filler_23[4245];
      } cmd_23_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_loc[16];
         char                            pvk_hdr[8];
         char                            pvk[48];
         char                            pvk_mac[16];
         char                            txn_orig;
         char                            rqst_filler_25[4206];
      } cmd_25_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_chk_dgt[6];
         char                            key_lgth;
         char                            pvk_xlate_hdr[8];
         char                            pvk_xlate[48];
         char                            pvk_xlate_mac[16];
         char                            resp_filler_25[4215];
      } cmd_25_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            key_rgstr_roll_opt;
         char                            fld_a_b[16];
         char                            msg_lgth[4];
         char                            msg_txt[4259];
      } cmd_26_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            encrypt_mac_residue[8];
         char                            resp_filler_26[4286];
      } cmd_26_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            key_rgstr_roll_opt;
         char                            fld_a_b[16];
         char                            encrypt_mac_residue[8];
         char                            msg_lgth[4];
         char                            msg_txt[4251];
      } cmd_27_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            resp_filler_27[4294];
      } cmd_27_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            key_rgstr_roll_opt;
         char                            acct_num_ptr[2];
         char                            fld_c_d[16];
         char                            pin_blk_ptr[4];
         char                            msg_lgth[4];
         char                            msg_txt[4253];
      } cmd_28_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            encrypt_mac_residue[8];
         char                            resp_filler_28[4286];
      } cmd_28_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            key_rgstr_roll_opt;
         char                            acct_num_ptr[2];
         char                            msg_lgth[4];
         char                            msg_txt[4273];
      } cmd_29_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            encrypt_mac_residue[8];
         char                            resp_filler_29[4286];
      } cmd_29_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            fld_a_b[16];
         char                            auth_param[16];
         char                            encrypt_mac_residue[8];
         char                            msg_lgth[4];
         char                            msg_txt[4236];
      } cmd_30_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            resp_mac[8];
         char                            encrypt_mac_residue[8];
         char                            resp_filler_30[4278];
      } cmd_30_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            var_data[4280];
      } cmd_31_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            term_id[16];
         char                            resp_filler_31[4280];
      } cmd_31_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            rqst_filler_32[4280];
      } cmd_32_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            term_id[16];
         char                            var_data[4280];
      } cmd_32_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            rqst_filler_33[4280];
      } cmd_33_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         short                           msg_lgth;
         char                            msg_txt[4294];
      } cmd_33_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           pub_key_typ;
         char                            serial_num_vrfy[2];
         char                            fiid[4];
         short                           msg_lgth;
         char                            msg_txt[4270];
      } cmd_34_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            term_id[16];
         char                            resp_filler_34[4280];
      } cmd_34_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           dev_data_lgth;
         char                            dev_data[4278];
      } cmd_35_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            term_id[16];
         short                           msg_lgth;
         char                            msg_txt[4278];
      } cmd_35_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           msg_lgth;
         char                            msg_txt[4278];
      } cmd_36_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            term_id[16];
         char                            resp_filler_36[4280];
      } cmd_36_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            serial_num[8];
         char                            serial_num_vrfy[2];
         char                            fiid[4];
         short                           sig_lgth;
         char                            sig[4264];
      } cmd_37_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            term_id[16];
         char                            var_data[4280];
      } cmd_37_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            ver_num[2];
         char                            key_typ[2];
         char                            rqst_filler_38[4276];
      } cmd_38_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_38[4296];
      } cmd_38_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ep_typ[2];
         char                            key_locator[16];
         char                            key_typ[2];
         char                            key_dir;
         char                            key_idx;
         char                            transport_flg;
         char                            chk_dgts[6];
         char                            rqst_filler_39[4269];
      } cmd_39_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_39[4296];
      } cmd_39_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            fnct;
         char                            src_key_loc[16];
         char                            src_txn_orig;
         char                            dest_key_loc[16];
         char                            dest_txn_orig;
         char                            input_data_lgth[4];
         char                            input_data[4096];
         union
         {
            char                            rqst_filler_41[163];
            struct
            {
               struct
               {
                  char                            src_key_dir;
                  char                            src_key_idx;
                  char                            dest_key_dir;
                  char                            dest_key_idx;
               } tki;
               char                            aci_opt[159];
            } opt;
         } u_rqst_filler_41;
      } cmd_41_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            fnct;
         char                            chk_dgt1[6];
         char                            chk_dgt2[6];
         char                            chk_dgt3[6];
         char                            chk_dgt4[6];
         char                            output_data_lgth[4];
         char                            output_data[4096];
         char                            encrypt_data_typ;
         char                            encrypt_data_mde;
         union
         {
            char                            resp_filler_41[169];
            struct
            {
               struct
               {
                  char                            src_key_idx;
                  char                            dest_key_idx;
               } tki;
               char                            aci_opt[167];
            } opt;
         } u_resp_filler_41;
      } cmd_41_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            fnct;
         char                            dest_key_loc[16];
         char                            dest_txn_orig;
         char                            iv_flg;
         char                            mac_data_lgth[3];
         char                            mac_data[240];
         char                            input_data_lgth[4];
         char                            input_data[3500];
         char                            src_key_loc[16];
         char                            src_txn_orig;
         union
         {
            char                            rqst_filler_42[515];
            struct
            {
               struct
               {
                  char                            src_key_dir;
                  char                            src_key_idx;
                  char                            dest_key_dir;
                  char                            dest_key_idx;
                  char                            mac_key_dir;
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[509];
            } opt;
         } u_rqst_filler_42;
      } cmd_42_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            fnct;
         char                            mac[8];
         char                            mac_chk_dgt[6];
         char                            in_chk_dgt[6];
         char                            out_chk_dgt[6];
         char                            iv[74];
         char                            end_iv[74];
         char                            output_data_lgth[4];
         char                            output_data[4096];
         char                            encrypt_data_type;
         char                            encrypt_des_mode;
         union
         {
            char                            resp_filler_42[19];
            struct
            {
               struct
               {
                  char                            src_key_idx;
                  char                            dest_key_idx;
                  char                            mac_key_idx;
               } tki;
               char                            aci_opt[16];
            } opt;
         } u_resp_filler_42;
      } cmd_42_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            fnct_typ[2];
         char                            key_loc[16];
         char                            txn_orig;
         char                            idx_updt;
         char                            rvs_rvt[32];
         char                            rqst_filler_43[4246];
      } cmd_43_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            fnct_typ[2];
         char                            rvs_rvt_lgth[2];
         char                            rvs_rvt[32];
         char                            resp_filler_43[4260];
      } cmd_43_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin[16];
         char                            key_loc[16];
         char                            keya_grp[16];
         char                            ver_num[3];
         char                            pin_data_blk[16];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         char                            rqst_filler_44[4195];
      } cmd_44_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_44[4296];
      } cmd_44_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin_frmt;
         char                            pin[16];
         char                            kpe_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         union
         {
            char                            rqst_filler_45[4209];
            struct
            {
               struct
               {
                  char                            pin_key_idx;
               } tki;
               char                            aci_opt[4208];
            } opt;
         } u_rqst_filler_45;
      } cmd_45_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            resp_filler_45[4296];
      } cmd_45_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            pin[16];
         char                            kpe_loc[16];
         char                            keya_grp[16];
         char                            crd_exp_dat[4];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pin_blk_typ;
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            txn_orig;
         char                            rqst_filler_46[4209];
      } cmd_46_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            pin_ofst[12];
         char                            pin_ofst_lgth[2];
         char                            resp_filler_46[4282];
      } cmd_46_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            rqst_filler_47[4278];
      } cmd_47_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            resp_stat[2];
         char                            emv_scheme;
         char                            resp_filler_47[4295];
      } cmd_47_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            drv_key_loc[16];
         char                            kpe_loc_out[16];
         char                            pin_in[16];
         char                            ksn[20];
         char                            ksn_lgth[2];
         char                            ksn_descr[3];
         char                            pan[19];
         char                            txn_orig;
         union
         {
            char                            rqst_filler_48[4203];
            struct
            {
               char                            mac_data_lgth[4];
               char                            mac_data[4096];
               char                            mac_val[16];
               char                            aci_opt[87];
            } rqst_48_ver_2;
            struct
            {
               char                            isecd_key_loc[16];
               char                            mac_char_set;
               char                            pin_ofst_in_mac[4];
               char                            pin_key_idx;
               char                            mac_key_dir;
               char                            mac_key_idx;
               char                            mac_data_lgth[4];
               char                            mac_data[4096];
               char                            aci_opt[79];
            } rqst_48_ver_3;
         } u_rqst_filler_48;
      } cmd_48_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            pin_out[16];
         union
         {
            char                            resp_filler_48[4278];
            struct
            {
               char                            mac_val[16];
               char                            mac_chk_dgt[6];
               char                            pin_key_idx;
               char                            mac_key_idx;
               char                            aci_opt[4254];
            } resp_48_ver_3;
         } u_resp_filler_48;
      } cmd_48_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            drv_key_loc[16];
         char                            ksn[20];
         char                            ksn_lgth[2];
         char                            ksn_descr[3];
         char                            mac_data[4096];
         char                            mac_data_lgth[4];
         char                            mac_val[16];
         char                            txn_orig;
         char                            mac_key_loc[16];
         char                            rqst_filler_49[122];
      } cmd_49_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            resp_filler_49[4294];
      } cmd_49_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            drv_key_loc[16];
         char                            ksn[20];
         char                            ksn_lgth[2];
         char                            ksn_descr[3];
         char                            mac_data[4096];
         char                            mac_data_lgth[4];
         char                            txn_orig;
         char                            mac_key_loc[16];
         char                            mac_opt;
         char                            rqst_filler_50[137];
      } cmd_50_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            mac_val[16];
         char                            resp_filler_50[4278];
      } cmd_50_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            rqst_filler_50[4280];
      } cmd_51_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            resp_filler_51[4294];
      } cmd_51_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            key_loc[16];
         char                            host_nam[16];
         char                            serial_num[16];
         char                            serial_num_vrfy[2];
         char                            fiid[4];
         short                           sig_lgth;
         char                            sig[4222];
      } cmd_52_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           aci_pub_key_lgth;
         char                            aci_pub_key[300];
         short                           dev_data_lgth;
         char                            dev_data[3972];
      } cmd_52_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            key_loc[16];
         char                            host_nam[16];
         char                            serial_num[16];
         char                            serial_num_vrfy[2];
         char                            fiid[4];
         char                            key_opt;
         char                            rqst_filler_52_ver2;
         short                           sig_lgth;
         char                            sig[4220];
      } cmd_52_ver2_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           aci_pub_key_lgth;
         char                            aci_pub_key[300];
         char                            key_opt;
         char                            resp_filler_52_ver2;
         short                           dev_data_lgth;
         char                            dev_data[3970];
      } cmd_52_ver2_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            key_loc[16];
         char                            host_nam[16];
         char                            sig_typ[2];
         char                            serial_num_vrfy[2];
         char                            fiid[4];
         short                           epp_pub_key_lgth;
         char                            epp_pub_key[300];
         short                           dev_data_lgth;
         char                            dev_data[3932];
         char                            key_typ[2];
      } cmd_53_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            resp_filler_53[4276];
      } cmd_53_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            key_loc[16];
         char                            host_nam[16];
         short                           dev_data_lgth;
         char                            dev_data[100];
         char                            key_typ[2];
         char                            rqst_filler_54[4142];
      } cmd_54_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           mstr_key_lgth;
         char                            mstr_key[300];
         short                           dev_data_lgth;
         char                            dev_data[3972];
      } cmd_54_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            device_typ[2];
         char                            key_typ[3];
         char                            key_lgth[2];
         char                            rqst_filler_55[4289];
      } cmd_55_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            frmt;
         char                            rqst_filler_even;
         short                           string_lgth;
         char                            rqst_filler_55[4292];
      } cmd_55_ver3_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            random_string[48];
         char                            resp_filler_55[4246];
      } cmd_55_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            random_string[128];
         char                            resp_filler_55[4166];
      } cmd_55_ver3_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            device_typ[2];
         short                           sign_data_lgth;
         char                            sign_data[62];
         short                           sign_lgth;
         char                            signature[256];
         char                            rqst_filler_56[3972];
      } cmd_56_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            host_nam[16];
         char                            device_typ[2];
         short                           sig_lgth;
         char                            sig[512];
         short                           sig_data_lgth;
         char                            sig_data[2048];
         char                            rqst_filler_56[1714];
      } cmd_56_ver2_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            resp_filler_56[4294];
      } cmd_56_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            device_typ[2];
         short                           sign_data_lgth;
         char                            sign_data[61];
         char                            rqst_filler_57[4231];
      } cmd_57_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            host_nam[16];
         char                            device_typ[2];
         short                           sig_data_lgth;
         char                            sig_data[2048];
         char                            rqst_filler_57[2228];
      } cmd_57_ver2_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            signature[256];
         char                            resp_filler_57[4038];
      } cmd_57_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         short                           sig_lgth;
         char                            sig[512];
         char                            resp_filler_57[3780];
      } cmd_57_ver2_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            algo;
         char                            key_loc[16];
         char                            crd_exp_dat[4];
         char                            dcvd[5];
         struct
         {
            char                            num[19];
         } pan;
         char                            pan_seq_num[3];
         char                            atc[2];
         char                            svc_cde[3];
         char                            exp_dat[4];
         char                            dcv_unpredictable_num[4];
         char                            trk_static_data_lgth[3];
         char                            trk_static_data[160];
         char                            trk_ivcvc3[5];
         char                            rqst_filler_58[4067];
      } cmd_58_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            algo;
         char                            resp_stat[2];
         char                            udk_chk_dgt[6];
         char                            resp_filler_58[4287];
      } cmd_58_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            key_opt;
         char                            host_nam[16];
         char                            rqst_filler_even;
         short                           epp_rndm_num_lgth;
         char                            epp_rndm_num[100];
         char                            rqst_filler_59[4158];
      } cmd_59_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            key_opt;
         char                            resp_filler_59;
         short                           aci_pub_key_lgth;
         char                            aci_pub_key[300];
         short                           sig_lgth;
         char                            sig[3970];
      } cmd_59_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            cap_grp[16];
         char                            crd_exp_dat[4];
         char                            drvtn_key_idx;
         char                            pan[19];
         char                            mbr_num[3];
         char                            cap_tkn[18];
         char                            atc[2];
         char                            unpredictable_num[4];
         char                            amt_auth[6];
         char                            crncy_cde[2];
         char                            rqst_filler_60[4221];
      } cmd_60_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            new_atc[2];
         char                            resp_filler_60[4292];
      } cmd_60_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            fnct;
         char                            src_txn_orig;
         char                            drv_key_loc[16];
         char                            ksn_lgth[2];
         char                            ksn[20];
         char                            ksn_descr[3];
         char                            input_data_lgth[4];
         char                            input_data[4096];
         char                            rqst_filler_62[153];
      } cmd_62_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            fnct;
         char                            output_data_lgth[4];
         char                            output_data[4096];
         char                            resp_filler_62[193];
      } cmd_62_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            dev_typ[2];
         char                            term_id[16];
         char                            cur_host_nam[16];
         char                            new_host_nam[16];
         short                           epp_rndm_num_cert_lgth;
         char                            epp_rndm_num_cert[99];
         char                            rqst_filler_63[4145];
      } cmd_63_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            dev_typ[2];
         char                            term_id[16];
         short                           rebind_cert_lgth;
         char                            rebind_cert[4274];
      } cmd_63_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            key_loc[16];
         char                            txn_orig;
         char                            rqst_filler_65[4279];
      } cmd_65_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            version[2];
         char                            resp_stat[2];
         char                            extrn_key_blk_frmt;
         char                            resp_filler_65[4293];
      } cmd_65_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            key_typ[2];
         char                            key_gen_opt;
         char                            rqst_filler_a0[4276];
      } cmd_a0_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_lgth;
         char                            mac_key_send[48];
         char                            mac_key_rcv[48];
         char                            kpe[48];
         char                            encrypt_data_key_send[48];
         char                            encrypt_data_key_rcv[48];
         char                            encrypt_typ[2];
         char                            resp_filler_a0[4049];
      } cmd_a0_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            ppasn[18];
         char                            rqst_filler_a1[4261];
      } cmd_a1_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            resp_filler_a1[4294];
      } cmd_a1_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            mac_key_rcv[48];
         char                            kpe[48];
         char                            encrypt_data_key_rcv[48];
         char                            new_key_idx;
         char                            rqst_filler_a2[4134];
      } cmd_a2_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            resp_filler_a2[4294];
      } cmd_a2_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            acq_key_loc[16];
         char                            iss_key_loc[16];
         char                            pin_in[16];
         char                            pan[19];
         char                            pan_lgth[2];
         char                            stan[6];
         char                            amt[12];
         char                            input_pin_key_idx;
         char                            output_pin_key_idx;
         char                            rqst_filler_a3[4206];
      } cmd_a3_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            pin_out[8];
         char                            output_pin_key_idx;
         char                            resp_filler_a3[4285];
      } cmd_a3_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            rqst_filler_a4[4279];
      } cmd_a4_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            rndm_num[48];
         char                            rndm_num_inverted[48];
         char                            resp_filler_a4[4198];
      } cmd_a4_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            rndm_num[48];
         char                            rqst_filler_a5[4231];
      } cmd_a5_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            rndm_num_inverted[48];
         char                            resp_filler_a5[4246];
      } cmd_a5_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            pin_vrfy_method;
         char                            txn_orig;
         char                            acq_key_loc[16];
         char                            auth_key_loc[16];
         char                            crd_exp_dat[4];
         char                            pin[16];
         char                            stan[6];
         char                            amt[12];
         char                            kpvv_idx;
         char                            pan[19];
         char                            pan_lgth[2];
         char                            pvv_ofst_val[12];
         char                            pvv_ofst_lgth[2];
         char                            isec_pin_key_idx;
         char                            rqst_filler_a6[4187];
      } cmd_a6_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            resp_filler_a6[4294];
      } cmd_a6_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            key_typ[2];
         char                            idx_updt;
         char                            key_idx_gen;
         char                            rqst_filler_a7[4275];
      } cmd_a7_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            key_typ[2];
         char                            key_lgth;
         char                            mac_key_send[48];
         char                            kpe[48];
         char                            encrypt_data_key_send[48];
         char                            new_key_idx;
         char                            resp_filler_a7[4146];
      } cmd_a7_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            txn_orig;
         char                            key_loc[16];
         char                            kek1_val[52];
         char                            kek2_val[52];
         char                            ppasn[18];
         char                            rqst_filler_a9[4157];
      } cmd_a9_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            resp_filler_a9[4294];
      } cmd_a9_resp;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            pin_data_encrypt;
         char                            key_loc[16];
         char                            input_encryp_key_loc;
         char                            keyi_grp[16];
         char                            crd_exp_dat[4];
         char                            drvtn_key_idx;
         char                            pos_id[16];
         char                            rqst_filler_xx2[4241];
      } cmd_xx2_rqst;
      struct
      {
         char                            cmd_typ[2];
         char                            ver_num[2];
         char                            resp_stat[2];
         char                            work_key[48];
         char                            check_digits[6];
         char                            resp_filler_xx2[4240];
      } cmd_xx2_resp;
   } u_tss_data;
} tss_msg_def;
#define tss_msg_def_Size 4408
#pragma section card_vrfy
/* Record CARD-VRFY created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __card_vrfy
typedef struct __card_vrfy
{
   __int32_t                       ver_num;
   struct
   {
      char                            card_vrfy_prfl[16];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   long long                       fm_ts;
   char                            key_encrypt_1[96];
   char                            key_encrypt_2[96];
   char                            key_encrypt_chk_vals_1[16];
   char                            key_encrypt_chk_vals_2[16];
   char                            key_encrypt_1_hdr[32];
   char                            key_encrypt_1_kam[16];
   struct
   {
      char                            key_encrypt_1_opt_hdr[48];
   } tss_301;
   char                            user_fld1[3702];
} card_vrfy_def;
#define card_vrfy_def_Size 4062
#pragma section chan_sec
/* Record CHAN-SEC created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __chan_sec
typedef struct __chan_sec
{
   __int32_t                       ver_num;
   char                            chan_id[16];
   long long                       fm_ts;
   char                            pin_pad_char;
   char                            pin_blk_typ;
   __int32_t                       old_key_timr_lmt;
   char                            kkt_pt_keyx[96];
   char                            kkt_pt_vvk[16];
   char                            kkt_pt_variant;
   char                            kkt_am_keyx[96];
   char                            kkt_am_vvk[16];
   char                            kkt_am_variant;
   char                            inbnd_kpt1_keyx[96];
   char                            inbnd_kpt1_vvk[16];
   char                            inbnd_kpt_old_keyx[96];
   char                            inbnd_kpt_old_vvk[16];
   char                            inbnd_old_pin_timr[36];
   char                            inbnd_kam1_keyx[96];
   char                            inbnd_kam1_vvk[16];
   char                            inbnd_kam_old_keyx[96];
   char                            inbnd_kam_old_vvk[16];
   char                            inbnd_old_mac_timr[36];
   char                            kkt_pt_hdr[32];
   char                            kkt_pt_lgth;
   char                            kkt_pt_kam[16];
   char                            kkt_am_hdr[32];
   char                            kkt_am_kam[16];
   char                            kkt_am_lgth;
   char                            inbnd_kpt1_hdr[32];
   char                            inbnd_kpt1_kam[16];
   char                            inbnd_kpt_lgth;
   char                            inbnd_kpt_old_hdr[32];
   char                            inbnd_kpt_old_kam[16];
   char                            inbnd_kam1_hdr[32];
   char                            inbnd_kam1_kam[16];
   char                            inbnd_kam_lgth;
   char                            inbnd_kam_old_hdr[32];
   char                            inbnd_kam_old_kam[16];
   short                           kam_typ;
   char                            kkt_pt_old_hdr[32];
   char                            kkt_pt_old_keyx[96];
   char                            kkt_pt_old_kam[16];
   char                            kkt_pt_old_vvk[16];
   char                            kkt_am_old_hdr[32];
   char                            kkt_am_old_keyx[96];
   char                            kkt_am_old_kam[16];
   char                            kkt_am_old_vvk[16];
   char                            kkt_old_pt_timr[36];
   char                            kkt_old_am_timr[36];
   char                            extrn_key_blk_frmt;
   char                            encrypt_data_typ;
   short                           encrypt_des_mde;
   short                           encrypt_layers;
   char                            kkt_dt_hdr[32];
   char                            kkt_dt_keyx[96];
   char                            kkt_dt_kam[16];
   char                            kkt_dt_vvk[16];
   char                            kkt_dt_old_hdr[32];
   char                            kkt_dt_old_keyx[96];
   char                            kkt_dt_old_kam[16];
   char                            kkt_dt_old_vvk[16];
   char                            kkt_dt_variant;
   char                            kkt_dt_lgth;
   char                            kkt_old_dt_timr[36];
   char                            outbnd_iv_hdr[32];
   char                            outbnd_iv_keyx[96];
   char                            outbnd_iv_kam[16];
   short                           kam_lgth;
   char                            outbnd_kdt1_lvl1_hdr[32];
   char                            outbnd_kdt1_lvl1_keyx[96];
   char                            outbnd_kdt1_lvl1_kam[16];
   char                            outbnd_kdt1_lvl1_vvk[16];
   char                            outbnd_kdt1_lvl2_hdr[32];
   char                            outbnd_kdt1_lvl2_keyx[96];
   char                            outbnd_kdt1_lvl2_kam[16];
   char                            outbnd_kdt1_lvl2_vvk[16];
   char                            outbnd_kdt1_lvl1_old_hdr[32];
   char                            outbnd_kdt1_lvl1_old_keyx[96];
   char                            outbnd_kdt1_lvl1_old_kam[16];
   char                            outbnd_kdt1_lvl1_old_vvk[16];
   char                            outbnd_kdt1_lvl2_old_hdr[32];
   char                            outbnd_kdt1_lvl2_old_keyx[96];
   char                            outbnd_kdt1_lvl2_old_kam[16];
   char                            outbnd_kdt1_lvl2_old_vvk[16];
   char                            outbnd_old_data_timr[36];
   char                            outbnd_kdt_lgth;
   char                            kkt_am_export_vrnt;
   char                            outbnd_kam1_hdr[32];
   char                            outbnd_kam1_keyx[96];
   char                            outbnd_kam1_kam[16];
   char                            outbnd_kam1_vvk[16];
   char                            outbnd_old_mac_timr[36];
   char                            outbnd_kam_old_hdr[32];
   char                            outbnd_kam_old_keyx[96];
   char                            outbnd_kam_old_kam[16];
   char                            outbnd_kam_old_vvk[16];
   char                            key_rgstr_init[96];
   char                            key_rgstr_new[96];
   char                            key_rgstr_cur[96];
   char                            key_rgstr_prev[96];
   char                            ppasn[18];
   char                            outbnd_kam_lgth;
   char                            chan_dev_typ;
   struct
   {
      short                           inbnd_kam_key_typ;
      short                           outbnd_kam_key_typ;
      short                           inbnd_kdt_key_typ;
      short                           outbnd_kdt_key_typ;
      char                            inbnd_kdt1_lvl1_hdr[32];
      char                            inbnd_kdt1_lvl1_keyx[96];
      char                            inbnd_kdt1_lvl1_kam[16];
      char                            inbnd_kdt1_lvl1_vvk[16];
      char                            inbnd_kdt_lgth;
      char                            inbnd_kdt1_lvl1_old_hdr[32];
      char                            inbnd_kdt1_lvl1_old_keyx[96];
      char                            inbnd_kdt1_lvl1_old_kam[16];
      char                            inbnd_kdt1_lvl1_old_vvk[16];
      char                            cross_acq_hdr[32];
      char                            cross_acq_keyx[96];
      char                            cross_acq_kam[16];
      char                            cross_acq_vvk[16];
      char                            cross_acq_lgth;
      char                            acq_init_hdr[32];
      char                            acq_init_keyx[96];
      char                            acq_init_kam[16];
      char                            acq_init_vvk[16];
      char                            acq_init_lgth;
      char                            init_kam_hdr[32];
      char                            init_kam_keyx[96];
      char                            init_kam_kam[16];
      char                            init_kam_vvk[16];
      char                            init_kam_lgth;
      char                            mstr1_hdr[32];
      char                            mstr1_keyx[96];
      char                            mstr1_kam[16];
      char                            mstr1_vvk[16];
      char                            mstr1_lgth;
      char                            mstr1_old_hdr[32];
      char                            mstr1_old_keyx[96];
      char                            mstr1_old_kam[16];
      char                            mstr1_old_vvk[16];
      char                            mstr2_hdr[32];
      char                            mstr2_keyx[96];
      char                            mstr2_kam[16];
      char                            mstr2_vvk[16];
      char                            mstr2_lgth;
      char                            mstr2_old_hdr[32];
      char                            mstr2_old_keyx[96];
      char                            mstr2_old_kam[16];
      char                            mstr2_old_vvk[16];
      char                            inbnd_old_data_timr[36];
      short                           zka_drv_flg;
      char                            key_gen_num[2];
      char                            key_ver_num[2];
      short                           key_table_num;
      short                           drv_depth;
      char                            drv_id[16];
   } tss_092;
   struct
   {
      char                            key_hierarchy;
      char                            kkt_opt;
      char                            mstr1_export_hdr[32];
      char                            mstr1_export_keyx[96];
      char                            mstr1_export_kam[16];
      char                            mstr1_export_vvk[16];
      char                            mstr_export_lgth;
      char                            inbnd_kdt1_lvl2_hdr[32];
      char                            inbnd_kdt1_lvl2_keyx[96];
      char                            inbnd_kdt1_lvl2_kam[16];
      char                            inbnd_kdt1_lvl2_vvk[16];
      char                            inbnd_kdt1_lvl2_old_hdr[32];
      char                            inbnd_kdt1_lvl2_old_keyx[96];
      char                            inbnd_kdt1_lvl2_old_kam[16];
      char                            inbnd_kdt1_lvl2_old_vvk[16];
      char                            futr_keys_usg;
   } tss_111;
   struct
   {
      short                           kam_encrypt_mthd;
      short                           pin_encrypt_mthd;
   } tss_212;
   struct
   {
      char                            key_sep_flg;
      char                            kkt_pt_opt_hdr[48];
      char                            kkt_am_opt_hdr[48];
      char                            inbnd_kpt1_opt_hdr[48];
      char                            inbnd_kpt_old_opt_hdr[48];
      char                            inbnd_kam1_opt_hdr[48];
      char                            inbnd_kam_old_opt_hdr[48];
      char                            kkt_pt_old_opt_hdr[48];
      char                            kkt_am_old_opt_hdr[48];
      char                            kkt_dt_opt_hdr[48];
      char                            kkt_dt_old_opt_hdr[48];
      char                            outbnd_iv_opt_hdr[48];
      char                            outbnd_kdt1_lvl1_opt_hdr[48];
      char                            outbnd_kdt1_lvl2_opt_hdr[48];
      char                            outbnd_kdt1_lvl1_old_opt_hdr[48];
      char                            outbnd_kdt1_lvl2_old_opt_hdr[48];
      char                            outbnd_kam1_opt_hdr[48];
      char                            outbnd_kam_old_opt_hdr[48];
      char                            inbnd_kdt1_lvl1_opt_hdr[48];
      char                            inbnd_kdt1_lvl1_old_opt_hdr[48];
      char                            cross_acq_opt_hdr[48];
      char                            acq_init_opt_hdr[48];
      char                            init_kam_opt_hdr[48];
      char                            mstr1_opt_hdr[48];
      char                            mstr1_old_opt_hdr[48];
      char                            mstr2_opt_hdr[48];
      char                            mstr2_old_opt_hdr[48];
      char                            mstr1_export_opt_hdr[48];
      char                            inbnd_kdt1_lvl2_opt_hdr[48];
      char                            inbnd_kdt1_lvl2_old_opt_hdr[48];
      char                            key_rgstr_init_hdr[32];
      char                            key_rgstr_init_opt_hdr[48];
      char                            key_rgstr_init_kam[16];
      char                            key_rgstr_new_hdr[32];
      char                            key_rgstr_new_opt_hdr[48];
      char                            key_rgstr_new_kam[16];
      char                            key_rgstr_cur_hdr[32];
      char                            key_rgstr_cur_opt_hdr[48];
      char                            key_rgstr_cur_kam[16];
      char                            key_rgstr_prev_hdr[32];
      char                            key_rgstr_prev_opt_hdr[48];
      char                            key_rgstr_prev_kam[16];
      char                            regn_scheme;
      short                           data_encrypt_mthd;
      char                            refr_ts[12];
      char                            refr_id[32];
   } tss_301;
   char                            user_fld1[20406];
} chan_sec_def;
#define chan_sec_def_Size 27648
#pragma section dnt
/* Record DNT created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __dnt
typedef struct __dnt
{
   __int32_t                       ver_num;
   struct
   {
      char                            pin_vrfy_prfl[16];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   long long                       fm_ts;
   short                           intrn_loc;
   char                            algo_num[2];
   char                            key_encrypt_hdr[8];
   char                            key_encrypt[48];
   char                            key_encrypt_kam[16];
   char                            key_encrypt_chk_vals[6];
   char                            key_1_hdr[8];
   char                            key_1[48];
   char                            key_1_kam[16];
   char                            key_1_chk_vals[6];
   char                            key_2_hdr[8];
   char                            key_2[48];
   char                            key_2_kam[16];
   char                            key_2_chk_vals[6];
   char                            key_3_hdr[8];
   char                            key_3[48];
   char                            key_3_kam[16];
   char                            key_3_chk_vals[6];
   char                            key_4_hdr[8];
   char                            key_4[48];
   char                            key_4_kam[16];
   char                            key_4_chk_vals[6];
   char                            key_5_hdr[8];
   char                            key_5[48];
   char                            key_5_kam[16];
   char                            key_5_chk_vals[6];
   char                            key_6_hdr[8];
   char                            key_6[48];
   char                            key_6_kam[16];
   char                            key_6_chk_vals[6];
   char                            key_7_hdr[8];
   char                            key_7[48];
   char                            key_7_kam[16];
   char                            key_7_chk_vals[6];
   char                            key_8_hdr[8];
   char                            key_8[48];
   char                            key_8_kam[16];
   char                            key_8_chk_vals[6];
   char                            key_9_hdr[8];
   char                            key_9[48];
   char                            key_9_kam[16];
   char                            key_9_chk_vals[6];
   char                            key_10_hdr[8];
   char                            key_10[48];
   char                            key_10_kam[16];
   char                            key_10_chk_vals[6];
   char                            key_11_hdr[8];
   char                            key_11[48];
   char                            key_11_kam[16];
   char                            key_11_chk_vals[6];
   char                            key_12_hdr[8];
   char                            key_12[48];
   char                            key_12_kam[16];
   char                            key_12_chk_vals[6];
   char                            key_13_hdr[8];
   char                            key_13[48];
   char                            key_13_kam[16];
   char                            key_13_chk_vals[6];
   char                            key_14_hdr[8];
   char                            key_14[48];
   char                            key_14_kam[16];
   char                            key_14_chk_vals[6];
   char                            key_15_hdr[8];
   char                            key_15[48];
   char                            key_15_kam[16];
   char                            key_15_chk_vals[6];
   char                            key_16_hdr[8];
   char                            key_16[48];
   char                            key_16_kam[16];
   char                            key_16_chk_vals[6];
   char                            key_17_hdr[8];
   char                            key_17[48];
   char                            key_17_kam[16];
   char                            key_17_chk_vals[6];
   char                            key_18_hdr[8];
   char                            key_18[48];
   char                            key_18_kam[16];
   char                            key_18_chk_vals[6];
   char                            key_19_hdr[8];
   char                            key_19[48];
   char                            key_19_kam[16];
   char                            key_19_chk_vals[6];
   char                            key_20_hdr[8];
   char                            key_20[48];
   char                            key_20_kam[16];
   char                            key_20_chk_vals[6];
   char                            key_21_hdr[8];
   char                            key_21[48];
   char                            key_21_kam[16];
   char                            key_21_chk_vals[6];
   char                            key_22_hdr[8];
   char                            key_22[48];
   char                            key_22_kam[16];
   char                            key_22_chk_vals[6];
   char                            key_23_hdr[8];
   char                            key_23[48];
   char                            key_23_kam[16];
   char                            key_23_chk_vals[6];
   char                            key_24_hdr[8];
   char                            key_24[48];
   char                            key_24_kam[16];
   char                            key_24_chk_vals[6];
   char                            key_25_hdr[8];
   char                            key_25[48];
   char                            key_25_kam[16];
   char                            key_25_chk_vals[6];
   char                            key_26_hdr[8];
   char                            key_26[48];
   char                            key_26_kam[16];
   char                            key_26_chk_vals[6];
   char                            key_27_hdr[8];
   char                            key_27[48];
   char                            key_27_kam[16];
   char                            key_27_chk_vals[6];
   char                            key_28_hdr[8];
   char                            key_28[48];
   char                            key_28_kam[16];
   char                            key_28_chk_vals[6];
   char                            key_29_hdr[8];
   char                            key_29[48];
   char                            key_29_kam[16];
   char                            key_29_chk_vals[6];
   char                            key_30_hdr[8];
   char                            key_30[48];
   char                            key_30_kam[16];
   char                            key_30_chk_vals[6];
   char                            key_31_hdr[8];
   char                            key_31[48];
   char                            key_31_kam[16];
   char                            key_31_chk_vals[6];
   char                            key_32_hdr[8];
   char                            key_32[48];
   char                            key_32_kam[16];
   char                            key_32_chk_vals[6];
   char                            entry_typ;
   char                            user_fld1[1443];
} dnt_def;
#define dnt_def_Size 4062
#pragma section emv_sec
/* Record EMV-SEC created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __emv_sec
typedef struct __emv_sec
{
   __int32_t                       ver_num;
   struct
   {
      char                            emv_auth_key_prfl[16];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   long long                       fm_ts;
   short                           emv_scheme;
   char                            secure_msg_key[96];
   short                           num_crypto_keys;
   char                            crypto_key_1[96];
   char                            crypto_key_2[96];
   char                            crypto_key_3[96];
   char                            crypto_key_4[96];
   char                            crypto_key_5[96];
   char                            crypto_key_6[96];
   char                            crypto_key_7[96];
   char                            crypto_key_8[96];
   char                            crypto_key_9[96];
   char                            crypto_key_10[96];
   char                            crypto_key_11[96];
   char                            crypto_key_12[96];
   char                            crypto_key_13[96];
   char                            crypto_key_14[96];
   char                            crypto_key_15[96];
   char                            crypto_key_16[96];
   char                            crypto_key_17[96];
   char                            crypto_key_18[96];
   char                            crypto_key_19[96];
   char                            crypto_key_20[96];
   char                            crypto_key_21[96];
   char                            crypto_key_22[96];
   char                            crypto_key_23[96];
   char                            crypto_key_24[96];
   char                            crypto_key_1_hdr[32];
   char                            crypto_key_1_kam[16];
   char                            crypto_key_2_hdr[32];
   char                            crypto_key_2_kam[16];
   char                            crypto_key_3_hdr[32];
   char                            crypto_key_3_kam[16];
   char                            crypto_key_4_hdr[32];
   char                            crypto_key_4_kam[16];
   char                            crypto_key_5_hdr[32];
   char                            crypto_key_5_kam[16];
   char                            crypto_key_6_hdr[32];
   char                            crypto_key_6_kam[16];
   char                            crypto_key_7_hdr[32];
   char                            crypto_key_7_kam[16];
   char                            crypto_key_8_hdr[32];
   char                            crypto_key_8_kam[16];
   char                            crypto_key_9_hdr[32];
   char                            crypto_key_9_kam[16];
   char                            crypto_key_10_hdr[32];
   char                            crypto_key_10_kam[16];
   char                            crypto_key_11_hdr[32];
   char                            crypto_key_11_kam[16];
   char                            crypto_key_12_hdr[32];
   char                            crypto_key_12_kam[16];
   char                            crypto_key_13_hdr[32];
   char                            crypto_key_13_kam[16];
   char                            crypto_key_14_hdr[32];
   char                            crypto_key_14_kam[16];
   char                            crypto_key_15_hdr[32];
   char                            crypto_key_15_kam[16];
   char                            crypto_key_16_hdr[32];
   char                            crypto_key_16_kam[16];
   char                            crypto_key_17_hdr[32];
   char                            crypto_key_17_kam[16];
   char                            crypto_key_18_hdr[32];
   char                            crypto_key_18_kam[16];
   char                            crypto_key_19_hdr[32];
   char                            crypto_key_19_kam[16];
   char                            crypto_key_20_hdr[32];
   char                            crypto_key_20_kam[16];
   char                            crypto_key_21_hdr[32];
   char                            crypto_key_21_kam[16];
   char                            crypto_key_22_hdr[32];
   char                            crypto_key_22_kam[16];
   char                            crypto_key_23_hdr[32];
   char                            crypto_key_23_kam[16];
   char                            crypto_key_24_hdr[32];
   char                            crypto_key_24_kam[16];
   char                            crypto_key_chk_vals_1[16];
   char                            crypto_key_chk_vals_2[16];
   char                            crypto_key_chk_vals_3[16];
   char                            crypto_key_chk_vals_4[16];
   char                            crypto_key_chk_vals_5[16];
   char                            crypto_key_chk_vals_6[16];
   char                            crypto_key_chk_vals_7[16];
   char                            crypto_key_chk_vals_8[16];
   char                            crypto_key_chk_vals_9[16];
   char                            crypto_key_chk_vals_10[16];
   char                            crypto_key_chk_vals_11[16];
   char                            crypto_key_chk_vals_12[16];
   char                            crypto_key_chk_vals_13[16];
   char                            crypto_key_chk_vals_14[16];
   char                            crypto_key_chk_vals_15[16];
   char                            crypto_key_chk_vals_16[16];
   char                            crypto_key_chk_vals_17[16];
   char                            crypto_key_chk_vals_18[16];
   char                            crypto_key_chk_vals_19[16];
   char                            crypto_key_chk_vals_20[16];
   char                            crypto_key_chk_vals_21[16];
   char                            crypto_key_chk_vals_22[16];
   char                            crypto_key_chk_vals_23[16];
   char                            crypto_key_chk_vals_24[16];
   char                            secure_msg_key_hdr[32];
   char                            secure_msg_key_kam[16];
   char                            secure_msg_key_chk_vals[16];
   char                            secure_msg_cnfdntl_key_hdr[32];
   char                            secure_msg_cnfdntl_key[96];
   char                            secure_msg_cnfdntl_key_kam[16];
   char                            secure_msg_cnfdntl_vvk[16];
   char                            dest_pin_blk_typ;
   char                            user_fld1_aci;
   short                           crypto_key_idx_1;
   short                           crypto_key_idx_2;
   short                           crypto_key_idx_3;
   short                           crypto_key_idx_4;
   short                           crypto_key_idx_5;
   short                           crypto_key_idx_6;
   short                           crypto_key_idx_7;
   short                           crypto_key_idx_8;
   short                           crypto_key_idx_9;
   short                           crypto_key_idx_10;
   short                           crypto_key_idx_11;
   short                           crypto_key_idx_12;
   short                           crypto_key_idx_13;
   short                           crypto_key_idx_14;
   short                           crypto_key_idx_15;
   short                           crypto_key_idx_16;
   short                           crypto_key_idx_17;
   short                           crypto_key_idx_18;
   short                           crypto_key_idx_19;
   short                           crypto_key_idx_20;
   short                           crypto_key_idx_21;
   short                           crypto_key_idx_22;
   short                           crypto_key_idx_23;
   short                           crypto_key_idx_24;
   short                           brch_hght;
   short                           encrypt_des_mde;
   struct
   {
      char                            crypto_ver_num[2];
   } tss_092;
   struct
   {
      char                            crypto_key_1_opt_hdr[48];
      char                            crypto_key_2_opt_hdr[48];
      char                            crypto_key_3_opt_hdr[48];
      char                            crypto_key_4_opt_hdr[48];
      char                            crypto_key_5_opt_hdr[48];
      char                            crypto_key_6_opt_hdr[48];
      char                            crypto_key_7_opt_hdr[48];
      char                            crypto_key_8_opt_hdr[48];
      char                            crypto_key_9_opt_hdr[48];
      char                            crypto_key_10_opt_hdr[48];
      char                            crypto_key_11_opt_hdr[48];
      char                            crypto_key_12_opt_hdr[48];
      char                            crypto_key_13_opt_hdr[48];
      char                            crypto_key_14_opt_hdr[48];
      char                            crypto_key_15_opt_hdr[48];
      char                            crypto_key_16_opt_hdr[48];
      char                            crypto_key_17_opt_hdr[48];
      char                            crypto_key_18_opt_hdr[48];
      char                            crypto_key_19_opt_hdr[48];
      char                            crypto_key_20_opt_hdr[48];
      char                            crypto_key_21_opt_hdr[48];
      char                            crypto_key_22_opt_hdr[48];
      char                            crypto_key_23_opt_hdr[48];
      char                            crypto_key_24_opt_hdr[48];
      char                            secure_msg_key_opt_hdr[48];
      char                            secure_msg_cnfdntl_key_opt_hdr[48];
   } tss_301;
   char                            user_fld1[22140];
} emv_sec_def;
#define emv_sec_def_Size 27648
#pragma section identikey
/* Record IDENTIKEY created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __identikey
typedef struct __identikey
{
   __int32_t                       ver_num;
   struct
   {
      char                            pin_vrfy_prfl[16];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   long long                       fm_ts;
   char                            bnk_id[8];
   short                           pan_ofst;
   short                           pan_lgth;
   char                            cmp_ind;
   char                            user_fld1[4009];
} identikey_def;
#define identikey_def_Size 4062
#pragma section ibm_des
/* Record IBM-DES created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ibm_des
typedef struct __ibm_des
{
   __int32_t                       ver_num;
   struct
   {
      char                            pin_vrfy_prfl[16];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   long long                       fm_ts;
   char                            dec_tbl[16];
   char                            pan_pad;
   char                            pan_vrfy_ofst[2];
   char                            pan_vrfy_lgth[2];
   char                            key_encrypt[96];
   char                            key_encrypt_chk_vals[16];
   char                            key_encrypt_hdr[32];
   char                            key_encrypt_kam[16];
   struct
   {
      char                            key_encrypt_opt_hdr[48];
      char                            regn_scheme;
   } tss_301;
   char                            user_fld1[3792];
} ibm_des_def;
#define ibm_des_def_Size 4062
#pragma section isec
/* Record ISEC created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __isec
typedef struct __isec
{
   __int32_t                       ver_num;
   char                            intf_nam[16];
   long long                       fm_ts;
   char                            pin_blk_typ;
   char                            pin_pad_char;
   __int32_t                       old_key_timr_lmt;
   char                            kkt_pt_variant;
   char                            kkt_am_variant;
   char                            outbnd_kpt1_keyx[96];
   char                            outbnd_kpt1_vvk[16];
   char                            outbnd_kpt2_keyx[96];
   char                            outbnd_kpt2_vvk[16];
   short                           outbnd_kpt_idx;
   __int32_t                       outbnd_u_kpt_cntr;
   char                            outbnd_old_pin_timr[36];
   char                            outbnd_kam1_keyx[96];
   char                            outbnd_kam1_vvk[16];
   char                            outbnd_kam2_keyx[96];
   char                            outbnd_kam2_vvk[16];
   short                           outbnd_kam_idx;
   __int32_t                       outbnd_u_kam_cntr;
   char                            outbnd_old_mac_timr[36];
   char                            inbnd_kpt1_keyx[96];
   char                            inbnd_kpt1_vvk[16];
   char                            inbnd_kpt2_keyx[96];
   char                            inbnd_kpt2_vvk[16];
   short                           inbnd_kpt_idx;
   __int32_t                       inbnd_u_kpt_cntr;
   char                            inbnd_old_pin_timr[36];
   char                            inbnd_kam1_keyx[96];
   char                            inbnd_kam1_vvk[16];
   char                            inbnd_kam2_keyx[96];
   char                            inbnd_kam2_vvk[16];
   short                           inbnd_kam_idx;
   __int32_t                       inbnd_u_kam_cntr;
   char                            inbnd_old_mac_timr[36];
   char                            kkt_pt_lgth;
   char                            kkt_am_lgth;
   char                            outbnd_kpt1_hdr[32];
   char                            outbnd_kpt1_kam[16];
   char                            outbnd_kpt2_hdr[32];
   char                            outbnd_kpt2_kam[16];
   char                            outbnd_kpt_lgth;
   char                            outbnd_kam1_hdr[32];
   char                            outbnd_kam1_kam[16];
   char                            outbnd_kam2_hdr[32];
   char                            outbnd_kam2_kam[16];
   char                            outbnd_kam_lgth;
   char                            inbnd_kpt1_hdr[32];
   char                            inbnd_kpt1_kam[16];
   char                            inbnd_kpt2_hdr[32];
   char                            inbnd_kpt2_kam[16];
   char                            inbnd_kpt_lgth;
   char                            inbnd_kam1_hdr[32];
   char                            inbnd_kam1_kam[16];
   char                            inbnd_kam2_hdr[32];
   char                            inbnd_kam2_kam[16];
   char                            inbnd_kam_lgth;
   short                           kam_typ;
   char                            kkt_pt_import_hdr[32];
   char                            kkt_pt_import_keyx[96];
   char                            kkt_pt_import_kam[16];
   char                            kkt_pt_import_vvk[16];
   char                            kkt_pt_export_hdr[32];
   char                            kkt_pt_export_keyx[96];
   char                            kkt_pt_export_kam[16];
   char                            kkt_pt_export_vvk[16];
   short                           kkt_pt_key_opt;
   char                            kkt_am_import_hdr[32];
   char                            kkt_am_import_keyx[96];
   char                            kkt_am_import_kam[16];
   char                            kkt_am_import_vvk[16];
   char                            kkt_am_export_hdr[32];
   char                            kkt_am_export_keyx[96];
   char                            kkt_am_export_kam[16];
   char                            kkt_am_export_vvk[16];
   short                           kkt_am_key_opt;
   char                            extrn_key_blk_frmt;
   char                            encrypt_data_typ;
   short                           encrypt_des_mde;
   short                           encrypt_layers;
   char                            kkt_dt_import_hdr[32];
   char                            kkt_dt_import_keyx[96];
   char                            kkt_dt_import_kam[16];
   char                            kkt_dt_import_vvk[16];
   char                            kkt_dt_export_hdr[32];
   char                            kkt_dt_export_keyx[96];
   char                            kkt_dt_export_kam[16];
   char                            kkt_dt_export_vvk[16];
   short                           kkt_dt_key_opt;
   char                            kkt_dt_key_lgth;
   char                            kkt_dt_variant;
   char                            inbnd_kdt1_lvl1_hdr[32];
   char                            inbnd_kdt1_lvl1_keyx[96];
   char                            inbnd_kdt1_lvl1_kam[16];
   char                            inbnd_kdt1_lvl1_vvk[16];
   char                            inbnd_kdt1_lvl2_hdr[32];
   char                            inbnd_kdt1_lvl2_keyx[96];
   char                            inbnd_kdt1_lvl2_kam[16];
   char                            inbnd_kdt1_lvl2_vvk[16];
   char                            inbnd_kdt2_lvl1_hdr[32];
   char                            inbnd_kdt2_lvl1_keyx[96];
   char                            inbnd_kdt2_lvl1_kam[16];
   char                            inbnd_kdt2_lvl1_vvk[16];
   char                            inbnd_kdt2_lvl2_hdr[32];
   char                            inbnd_kdt2_lvl2_keyx[96];
   char                            inbnd_kdt2_lvl2_kam[16];
   char                            inbnd_kdt2_lvl2_vvk[16];
   short                           inbnd_kdt_idx;
   char                            inbnd_old_data_timr[36];
   char                            outbnd_kdt1_lvl1_hdr[32];
   char                            outbnd_kdt1_lvl1_keyx[96];
   char                            outbnd_kdt1_lvl1_kam[16];
   char                            outbnd_kdt1_lvl1_vvk[16];
   char                            outbnd_kdt1_lvl2_hdr[32];
   char                            outbnd_kdt1_lvl2_keyx[96];
   char                            outbnd_kdt1_lvl2_kam[16];
   char                            outbnd_kdt1_lvl2_vvk[16];
   char                            outbnd_kdt2_lvl1_hdr[32];
   char                            outbnd_kdt2_lvl1_keyx[96];
   char                            outbnd_kdt2_lvl1_kam[16];
   char                            outbnd_kdt2_lvl1_vvk[16];
   char                            outbnd_kdt2_lvl2_hdr[32];
   char                            outbnd_kdt2_lvl2_keyx[96];
   char                            outbnd_kdt2_lvl2_kam[16];
   char                            outbnd_kdt2_lvl2_vvk[16];
   short                           outbnd_kdt_idx;
   char                            outbnd_old_data_timr[36];
   char                            outbnd_iv_hdr[32];
   char                            outbnd_iv_keyx[96];
   char                            outbnd_iv_kam[16];
   short                           kam_lgth;
   char                            inbnd_iv_hdr[32];
   char                            inbnd_iv_keyx[96];
   char                            inbnd_iv_kam[16];
   char                            inbnd_kdt_lgth;
   char                            outbnd_kdt_lgth;
   char                            kkt_pt_mstr_hdr[32];
   char                            kkt_pt_mstr_keyx[96];
   char                            kkt_pt_mstr_kam[16];
   char                            kkt_pt_mstr_vvk[16];
   char                            kkt_am_mstr_hdr[32];
   char                            kkt_am_mstr_keyx[96];
   char                            kkt_am_mstr_kam[16];
   char                            kkt_am_mstr_vvk[16];
   struct
   {
      short                           inbnd_kam_key_typ;
      short                           outbnd_kam_key_typ;
      short                           inbnd_kdt_key_typ;
      short                           outbnd_kdt_key_typ;
      short                           import_kkt_key_typ;
      short                           export_kkt_key_typ;
      char                            kkt_pend_pt_import_hdr[32];
      char                            kkt_pend_pt_import_keyx[96];
      char                            kkt_pend_pt_import_kam[16];
      char                            kkt_pend_pt_import_vvk[16];
      char                            kkt_pend_am_import_hdr[32];
      char                            kkt_pend_am_import_keyx[96];
      char                            kkt_pend_am_import_kam[16];
      char                            kkt_pend_am_import_vvk[16];
      char                            kkt_pend_dt_import_hdr[32];
      char                            kkt_pend_dt_import_keyx[96];
      char                            kkt_pend_dt_import_kam[16];
      char                            kkt_pend_dt_import_vvk[16];
      char                            kkt_pend_pt_export_hdr[32];
      char                            kkt_pend_pt_export_keyx[96];
      char                            kkt_pend_pt_export_kam[16];
      char                            kkt_pend_pt_export_vvk[16];
      char                            kkt_pend_am_export_hdr[32];
      char                            kkt_pend_am_export_keyx[96];
      char                            kkt_pend_am_export_kam[16];
      char                            kkt_pend_am_export_vvk[16];
      char                            kkt_pend_dt_export_hdr[32];
      char                            kkt_pend_dt_export_keyx[96];
      char                            kkt_pend_dt_export_kam[16];
      char                            kkt_pend_dt_export_vvk[16];
      short                           input_key_typ;
      short                           zka_drv_flg;
      char                            key_gen_num[2];
      char                            key_ver_num[2];
      short                           key_table_num;
      short                           drv_depth;
      char                            drv_id[16];
   } tss_092;
   struct
   {
      short                           key_hierarchy;
      short                           kkt_opt;
      char                            mstr1_export_hdr[32];
      char                            mstr1_export_keyx[96];
      char                            mstr1_export_kam[16];
      char                            mstr1_export_vvk[16];
      char                            mstr1_import_hdr[32];
      char                            mstr1_import_keyx[96];
      char                            mstr1_import_kam[16];
      char                            mstr1_import_vvk[16];
      char                            mstr1_kkt_lgth;
      char                            mstr1_import_kkt_pt_hdr[32];
      char                            mstr1_import_kkt_pt_keyx[96];
      char                            mstr1_import_kkt_pt_kam[16];
      char                            mstr1_import_kkt_pt_vvk[16];
      char                            mstr1_kpt_lgth;
      char                            mstr1_import_kkt_am_hdr[32];
      char                            mstr1_import_kkt_am_keyx[96];
      char                            mstr1_import_kkt_am_kam[16];
      char                            mstr1_import_kkt_am_vvk[16];
      char                            mstr1_kam_lgth;
      char                            mstr1_import_kkt_dt_hdr[32];
      char                            mstr1_import_kkt_dt_keyx[96];
      char                            mstr1_import_kkt_dt_kam[16];
      char                            mstr1_import_kkt_dt_vvk[16];
      char                            mstr1_kdt_lgth;
      char                            old_kek_timr[36];
      char                            futr_keys_usg;
      char                            multi_flg;
      char                            series_enabled_flg;
   } tss_111;
   struct
   {
      char                            outbnd_kpt1_opt_hdr[48];
      char                            outbnd_kpt2_opt_hdr[48];
      char                            outbnd_kam1_opt_hdr[48];
      char                            outbnd_kam2_opt_hdr[48];
      char                            inbnd_kpt1_opt_hdr[48];
      char                            inbnd_kpt2_opt_hdr[48];
      char                            inbnd_kam1_opt_hdr[48];
      char                            inbnd_kam2_opt_hdr[48];
      char                            kkt_pt_import_opt_hdr[48];
      char                            kkt_pt_export_opt_hdr[48];
      char                            kkt_am_import_opt_hdr[48];
      char                            kkt_am_export_opt_hdr[48];
      char                            kkt_dt_import_opt_hdr[48];
      char                            kkt_dt_export_opt_hdr[48];
      char                            inbnd_kdt1_lvl1_opt_hdr[48];
      char                            inbnd_kdt1_lvl2_opt_hdr[48];
      char                            inbnd_kdt2_lvl1_opt_hdr[48];
      char                            inbnd_kdt2_lvl2_opt_hdr[48];
      char                            outbnd_kdt1_lvl1_opt_hdr[48];
      char                            outbnd_kdt1_lvl2_opt_hdr[48];
      char                            outbnd_kdt2_lvl1_opt_hdr[48];
      char                            outbnd_kdt2_lvl2_opt_hdr[48];
      char                            outbnd_iv_opt_hdr[48];
      char                            inbnd_iv_opt_hdr[48];
      char                            kkt_pt_mstr_opt_hdr[48];
      char                            kkt_am_mstr_opt_hdr[48];
      char                            kkt_pt_import_old_opt_hdr[48];
      char                            kkt_am_import_old_opt_hdr[48];
      char                            kkt_dt_import_old_opt_hdr[48];
      char                            kkt_pt_export_old_opt_hdr[48];
      char                            kkt_am_export_old_opt_hdr[48];
      char                            kkt_dt_export_old_opt_hdr[48];
      char                            mstr1_export_opt_hdr[48];
      char                            mstr1_import_opt_hdr[48];
      char                            mstr1_import_kkt_pt_opt_hdr[48];
      char                            mstr1_import_kkt_am_opt_hdr[48];
      char                            mstr1_import_kkt_dt_opt_hdr[48];
      char                            regn_scheme;
   } tss_301;
   char                            user_fld1[19590];
} isec_def;
#define isec_def_Size 27648
#pragma section secdcd
/* Record SECDCD created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __secdcd
typedef struct __secdcd
{
   __int32_t                       ver_num;
   char                            dev_nam[32];
   long long                       fm_ts;
   char                            dev_typ;
   char                            svc_ind;
   short                           dev_subtyp;
   short                           max_consec_err;
   short                           dev_tim_lmt;
   short                           ntfy_intrvl;
   char                            dev_init_txt[100];
   char                            dev_conf_txt[100];
   char                            pki_enbl_flg;
   char                            user_fld1;
   short                           hdwr_mdl;
   short                           proto_intf;
   short                           key_scheme;
   char                            firmware_ver[16];
   __int32_t                       max_buf_lgth;
   short                           dev_reset_timr_lmt;
} secdcd_def;
#define secdcd_def_Size 284
#pragma section vpvvd
/* Record VPVVD created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __vpvvd
typedef struct __vpvvd
{
   __int32_t                       ver_num;
   struct
   {
      char                            pin_vrfy_prfl[16];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   long long                       fm_ts;
   char                            key_encrypt_1[96];
   char                            key_encrypt_2[96];
   char                            key_encrypt_3[96];
   char                            key_encrypt_4[96];
   char                            key_encrypt_5[96];
   char                            key_encrypt_6[96];
   char                            key_encrypt_7[96];
   char                            key_encrypt_8[96];
   char                            key_encrypt_9[96];
   char                            key_encrypt_10[96];
   char                            key_encrypt_11[96];
   char                            key_encrypt_12[96];
   char                            key_encrypt_chk_vals_1[16];
   char                            key_encrypt_chk_vals_2[16];
   char                            key_encrypt_chk_vals_3[16];
   char                            key_encrypt_chk_vals_4[16];
   char                            key_encrypt_chk_vals_5[16];
   char                            key_encrypt_chk_vals_6[16];
   char                            key_encrypt_chk_vals_7[16];
   char                            key_encrypt_chk_vals_8[16];
   char                            key_encrypt_chk_vals_9[16];
   char                            key_encrypt_chk_vals_10[16];
   char                            key_encrypt_chk_vals_11[16];
   char                            key_encrypt_chk_vals_12[16];
   char                            key_encrypt_1_hdr[32];
   char                            key_encrypt_1_kam[16];
   char                            key_encrypt_3_hdr[32];
   char                            key_encrypt_3_kam[16];
   char                            key_encrypt_5_hdr[32];
   char                            key_encrypt_5_kam[16];
   char                            key_encrypt_7_hdr[32];
   char                            key_encrypt_7_kam[16];
   char                            key_encrypt_9_hdr[32];
   char                            key_encrypt_9_kam[16];
   char                            key_encrypt_11_hdr[32];
   char                            key_encrypt_11_kam[16];
   struct
   {
      char                            key_encrypt_13[96];
      char                            key_encrypt_14[96];
      char                            key_encrypt_15[96];
      char                            key_encrypt_16[96];
      char                            key_encrypt_17[96];
      char                            key_encrypt_18[96];
      char                            key_encrypt_19[96];
      char                            key_encrypt_20[96];
      char                            key_encrypt_chk_values_13[16];
      char                            key_encrypt_chk_values_14[16];
      char                            key_encrypt_chk_values_15[16];
      char                            key_encrypt_chk_values_16[16];
      char                            key_encrypt_chk_values_17[16];
      char                            key_encrypt_chk_values_18[16];
      char                            key_encrypt_chk_values_19[16];
      char                            key_encrypt_chk_values_20[16];
      char                            key_encrypt_13_hdr[32];
      char                            key_encrypt_15_hdr[32];
      char                            key_encrypt_17_hdr[32];
      char                            key_encrypt_19_hdr[32];
      char                            key_encrypt_13_kam[16];
      char                            key_encrypt_15_kam[16];
      char                            key_encrypt_17_kam[16];
      char                            key_encrypt_19_kam[16];
   } tss_201;
   struct
   {
      char                            key_encrypt_1_opt_hdr[48];
      char                            key_encrypt_3_opt_hdr[48];
      char                            key_encrypt_5_opt_hdr[48];
      char                            key_encrypt_7_opt_hdr[48];
      char                            key_encrypt_9_opt_hdr[48];
      char                            key_encrypt_11_opt_hdr[48];
      char                            key_encrypt_13_opt_hdr[48];
      char                            key_encrypt_15_opt_hdr[48];
      char                            key_encrypt_17_opt_hdr[48];
      char                            key_encrypt_19_opt_hdr[48];
      char                            regn_scheme;
   } tss_301;
   char                            user_fld1[2221];
} vpvvd_def;
#define vpvvd_def_Size 5462
#pragma section drvkd
/* Record DRVKD created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __drvkd
typedef struct __drvkd
{
   __int32_t                       ver_num;
   struct
   {
      char                            prfl[16];
   } prikey;
   long long                       fm_ts;
   char                            drv_key_hdr[32];
   char                            drv_key[96];
   char                            drv_key_kam[16];
   char                            drv_key_chk_vals[16];
   char                            drv_key_opt;
   struct
   {
      char                            encrypt_des_mde[2];
   } tss_092;
   struct
   {
      char                            bdk_typ;
      char                            mac_mde;
      char                            drv_key_opt_hdr[48];
   } tss_301;
   char                            user_fld1[3903];
} drvkd_def;
#define drvkd_def_Size 4144
#pragma section saf
/* Record SAF created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __saf
typedef struct __saf
{
   struct
   {
      short                           dpc_id;
      short                           timestmp[3];
      union
      {
         short                           unique_key;
         short                           msg_lgth;
      } u_unique_key;
      short                           prod_id;
      short                           seq_num;
   } k1;
   char                            save_area[4048];
} saf_def;
#define saf_def_Size 4062
#pragma section safx
/* Definition SAFX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __safx
typedef struct __safx
{
   struct
   {
      char                            dpc_id[5];
      char                            timestmp[12];
      char                            unique_key[5];
      char                            prod_id[5];
      char                            seq_num[5];
   } k1;
   char                            save_area[4048];
} safx_def;
#define safx_def_Size 4080
#pragma section saf_ext
/* Definition SAF-EXT created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __saf_ext
typedef struct __saf_ext
{
   char                            cmnd[10];
   char                            dpc_no[4];
} saf_ext_def;
#define saf_ext_def_Size 14
#pragma section saf_resp
/* Definition SAF-RESP created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __saf_resp
typedef struct __saf_resp
{
   char                            cmnd[10];
   char                            dpc_no[4];
   char                            filler_0;
   char                            nbr_safs[10];
   char                            filler_1;
   char                            file_name[24];
} saf_resp_def;
#define saf_resp_def_Size 50
#pragma section saf_comp
/* Definition SAF-COMP created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __saf_comp
typedef struct __saf_comp
{
   char                            cmnd[10];
   char                            dpc_no[4];
   char                            filler_0;
   char                            nbr_safs_purged[10];
} saf_comp_def;
#define saf_comp_def_Size 25
#pragma section vsmreq
/* Definition VSMREQ created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __vsmreq
typedef struct __vsmreq
{
   char                            stx;
   char                            hdr[4];
   char                            tran_cde[2];
   union
   {
      char                            var_data[890];
      struct
      {
         char                            mode;
         char                            key_typ[3];
         char                            lmk_key_scheme;
         char                            zmk[16];
         char                            zmk_key_scheme;
         char                            atalla_variant;
      } a0;
      struct
      {
         char                            xkey[16];
      } aa_ac_ge_kc;
      struct
      {
         char                            cvka[16];
         char                            cvkb[16];
      } ay;
      struct
      {
         char                            skey[16];
         char                            dkey[16];
         char                            maxpin[2];
         char                            epin[16];
         char                            spbt[2];
         char                            dpbt[2];
         char                            pan[12];
      } ca_cc;
      struct
      {
         char                            idx_flag;
         char                            dnt_idx[3];
         char                            algo_num[2];
         char                            epin[16];
         char                            pan[12];
         char                            valdata[16];
      } ce;
      struct
      {
         char                            pkey[16];
         char                            idx_flag;
         char                            dnt_idx[3];
         char                            algo_num[2];
         char                            epin[16];
         char                            pbt[2];
         char                            pan[12];
         char                            valdata[16];
         char                            offset[4];
      } cg_eg;
      struct
      {
         char                            dkey[32];
         char                            skey[16];
         char                            ksn_descr[3];
         char                            ksn[20];
         char                            epin[16];
         char                            dpbt[2];
         char                            pan[12];
      } ci;
      struct
      {
         char                            cvka[16];
         char                            cvkb[16];
         char                            pan[25];
         char                            delimiter;
         char                            exp_dat[4];
         char                            serv_cde[3];
      } cw;
      struct
      {
         char                            cvka[16];
         char                            cvkb[16];
         char                            cvv[3];
         char                            pan[25];
         char                            delimiter;
         char                            exp_dat[4];
         char                            serv_cde[3];
      } cy;
      struct
      {
         char                            pkey[16];
         char                            pvk[16];
         char                            maxpin[2];
         char                            epin[16];
         char                            pbt[2];
         char                            chklen[2];
         char                            pan[12];
         char                            dectab[16];
         char                            valdata[12];
         char                            offset[12];
      } da_ea;
      struct
      {
         char                            pvk[16];
         char                            epin[16];
         char                            chklen[2];
         char                            pan[12];
         char                            dectab[16];
         char                            valdata[12];
      } de;
      struct
      {
         char                            pvk1[16];
         char                            pvk2[16];
         char                            epin[16];
         char                            pan[12];
         char                            pvki;
      } dg;
      struct
      {
         char                            pkey[16];
         char                            pvk1[16];
         char                            pvk2[16];
         char                            epin[16];
         char                            pbt[2];
         char                            pan[12];
         char                            pvki;
         char                            pvv[4];
      } ec_dc;
      struct
      {
         char                            pvk[16];
         char                            pofst[12];
         char                            chklen[2];
         char                            pan[12];
         char                            dectab[16];
         char                            valdata[12];
      } ee;
      struct
      {
         char                            zcmk[16];
         char                            xkey[16];
         char                            atalla_variant;
      } fa_fc_fe;
      struct
      {
         char                            zcmk[16];
         char                            xkey[16];
         char                            atalla_variant;
      } gc;
      struct
      {
         char                            tmk[16];
      } ha;
      struct
      {
         char                            tmk[16];
      } hc;
      struct
      {
         char                            zcmk[16];
         char                            atalla_variant;
      } ia;
      struct
      {
         char                            tpk[16];
      } ic_ie;
      struct
      {
         char                            pan[12];
      } ja;
      struct
      {
         char                            tkey[16];
         char                            epin[16];
         char                            pbt[2];
         char                            pan[12];
      } jc;
      struct
      {
         char                            skey[16];
         char                            epin[16];
         char                            pbt[2];
         char                            pan[12];
      } je;
      struct
      {
         char                            xkey[16];
         char                            key_type[2];
      } ka;
      struct
      {
         char                            idx_flag;
         char                            dnt_idx[3];
         char                            block_count[2];
         char                            dnt[512];
      } la;
      struct
      {
         char                            idx_flag;
         char                            dnt_idx[3];
      } lc;
      struct
      {
         char                            zmk[16];
         char                            tak[16];
         char                            atalla_variant;
      } mg;
      struct
      {
         char                            zmk[16];
         char                            tak[16];
         char                            atalla_variant;
      } mi;
      struct
      {
         char                            tak[16];
         char                            len[3];
         char                            data[800];
      } mk;
      struct
      {
         char                            tak[16];
         char                            mac[8];
         char                            len[3];
         char                            data[800];
      } mm;
      struct
      {
         char                            data[800];
      } pa;
      struct
      {
         char                            type;
         char                            pan[12];
         char                            pin[16];
         char                            data[800];
      } pe;
      struct
      {
         char                            tak[16];
         char                            skey[16];
         char                            dkey[16];
         char                            maxpin[2];
         char                            epin[16];
         char                            spbt[2];
         char                            dpbt[2];
         char                            pan[12];
         char                            pinflg;
         char                            chartyp;
         char                            dataptr[3];
         char                            len[3];
         char                            data[800];
      } sc;
   } u_var_data;
   char                            echo_back[32];
   char                            etx;
} vsmreq_def;
#define vsmreq_def_Size 930
#pragma section vsmrsp
/* Definition VSMRSP created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __vsmrsp
typedef struct __vsmrsp
{
   char                            stx;
   char                            hdr[4];
   char                            tran_cde[2];
   char                            resp_cde[2];
   union
   {
      char                            var_data[48];
      struct
      {
         char                            skey[16];
         char                            dkey[16];
         char                            check_value[6];
      } a1;
      struct
      {
         char                            xkey[16];
      } ab_ad_gf_kd;
      struct
      {
         char                            cvka[16];
         char                            cvkb[16];
      } az;
      struct
      {
         char                            pinlen[2];
         char                            epin[16];
         char                            dpbt[2];
      } cb_cd;
      struct
      {
         char                            offset[12];
      } cf;
      struct
      {
         char                            pinlen[2];
         char                            epin[16];
         char                            dpbt[2];
      } cj;
      struct
      {
         char                            cvv[3];
      } cx;
      struct
      {
         char                            offset[12];
      } df;
      struct
      {
         char                            offset[12];
      } dh;
      struct
      {
         char                            pin[16];
      } ef;
      struct
      {
         char                            xkey[16];
         char                            check_value[16];
      } fb_fd_ff;
      struct
      {
         char                            pin[16];
      } gb;
      struct
      {
         char                            xkey[16];
         char                            check_value[16];
      } gd;
      struct
      {
         char                            etak[16];
         char                            tak[16];
      } hb;
      struct
      {
         char                            etpk[16];
         char                            tpk[16];
      } hd;
      struct
      {
         char                            dkey[16];
         char                            skey[16];
         char                            check_value[16];
      } ib;
      struct
      {
         char                            vc[16];
      } id_if;
      struct
      {
         char                            epin[16];
      } jd;
      struct
      {
         char                            epin[16];
      } jf;
      struct
      {
         char                            check_value[16];
      } kb;
      struct
      {
         char                            tak[16];
         char                            check_value[16];
      } mh;
      struct
      {
         char                            tak[16];
         char                            check_value[16];
      } mj;
      struct
      {
         char                            mac[8];
      } ml;
      struct
      {
         char                            pin_ref[16];
      } pf;
      struct
      {
         char                            pinlen[2];
         char                            epin[16];
         char                            mac[8];
      } sd;
   } u_var_data;
   char                            echo_back[32];
   char                            etx;
} vsmrsp_def;
#define vsmrsp_def_Size 90
#pragma section x25h8473
/* Definition X25H8473 created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __x25h8473
typedef struct __x25h8473
{
   struct
   {
      char                            proto_typ;
      char                            proto_hdr_lgth;
      char                            proto_ver;
      char                            lifetim_val;
      char                            cntl_flg;
      char                            msg_lgth[2];
      char                            chksum[2];
      char                            variable_data;
   } is8473;
} x25h8473_def;
#define x25h8473_def_Size 10
#pragma section x25h8602
/* Definition X25H8602 created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __x25h8602
typedef struct __x25h8602
{
   char                            len_8602_header;
   char                            tpdu_code;
   char                            checksum_para;
   char                            checksum_len;
   char                            checksum_8602[2];
   char                            message_text;
} x25h8602_def;
#define x25h8602_def_Size 7
#pragma section cpfbase
/* Definition CPFBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cpfbase
typedef struct __cpfbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      long long                       prefix;
      struct
      {
         char                            pan_lgth[2];
         char                            prefix_lgth[2];
      } altkey;
   } prikey;
   char                            prefix_rte;
   char                            fiid[4];
   char                            crd_typ[2];
   char                            dat_chk_typ;
   short                           mbr_ofst;
   short                           mbr_lgth;
   short                           pofst_ofst;
   short                           algo_ofst;
   short                           dat_ofst;
   char                            pan_access_typ;
   char                            exp_chk_ind;
   union
   {
      struct
      {
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
         long long                       aggr_lmt;
         long long                       offl_aggr_lmt;
      } grp_lmt;
      long long                       wdl_lmt[6];
   } u_grp_lmt;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            pv_keya_grp[4];
   char                            pin_chk;
   char                            pin_vrfy_typ[2];
   char                            pin_ofst_loc;
   char                            algo_num_loc;
   char                            crd_hld_selct;
   char                            pin_tries_reset_option;
   char                            bad_pin_disp;
   short                           max_pin_try;
   short                           cv_ofst;
   short                           sc_ofst;
   char                            cv_keya_grp[4];
   char                            cv_bad_disp[2];
   char                            cv_chk_typ;
   char                            cv_chk;
   char                            mod10_chk;
   char                            card_profile[2];
   char                            manual_cv_bad_disp;
   char                            manual_cv_keya_grp[4];
   short                           manual_cv_eff_dat;
   char                            cv_eff_dat[4];
   short                           trk1_mbr_ofst;
   short                           trk1_pofst_ofst;
   short                           trk1_algo_ofst;
   short                           trk1_dat_ofst;
   short                           trk1_cv_ofst;
   short                           trk1_sc_ofst;
   char                            trk_pref;
   char                            bad_trk_disp;
   short                           trk1_min_lgth;
   short                           trk1_max_lgth;
   short                           trk2_min_lgth;
   short                           trk2_max_lgth;
   char                            srvc_cde_chk_flg;
   char                            effective_dat_chk_ind;
   char                            trk3_frmt[2];
   short                           trk3_algo_ofst;
   short                           trk3_cv_ofst;
   short                           trk3_dat_ofst;
   short                           trk3_mbr_ofst;
   short                           trk3_pofst_ofst;
   short                           trk3_sc_ofst;
   short                           trk3_ofst_a;
   short                           trk3_ofst_b;
   short                           trk3_ofst_c;
   short                           trk3_ofst_d;
   char                            svc_cde_act_tbl_idx;
   char                            exp_dat_cmp;
   char                            user_fld_aci[48];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
   char                            csm_rech_dolar;
   char                            csm_rech_bono;
   short                           csm_algo_check_saldo;
   short                           csm_algo_impacto_saldo;
   char                            csm_region_habilitado;
   char                            csm_ignora_caf_lmt;
   char                            atc_chk;
   char                            pre_scrn_atc;
   char                            atc_bad_disp;
   char                            csm_filler2;
   short                           atc_lmt;
   char                            csm_uso_futuro[4];
} cpfbase_def;
#define cpfbase_def_Size 358
#pragma section atmcpf
/* Definition ATMCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmcpf
typedef struct __atmcpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           use_lmt;
   union
   {
      struct
      {
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
         long long                       csm_ttl_prest_fin_lmt;
         long long                       csm_offl_prest_fin_lmt;
      } grp_lmt;
      long long                       wdl_lmt[6];
   } u_grp_lmt;
   union
   {
      struct
      {
         long long                       csm_ttl_wdl_lmt_uss;
         long long                       csm_offl_wdl_lmt_uss;
         long long                       csm_ttl_cca_lmt_uss;
         long long                       csm_offl_cca_lmt_uss;
         long long                       csm_ttl_prest_fin_lmt_uss;
         long long                       csm_offl_prest_fin_lmt_uss;
      } grp_lmt_uss;
      long long                       wdl_lmt_uss[6];
   } u_grp_lmt_uss;
   __int32_t                       min_cca_amt;
   __int32_t                       min_cca_amt_uss;
   __int32_t                       std_cca_incr;
   short                           dep_cr_percent;
   long long                       cr_per_dep_lmt;
   short                           num_dep_cr_lmt;
   long long                       dep_cr_lmt;
   char                            iss_txn_prfl[16];
   short                           cash_dep_cr_percent;
   long long                       cr_per_cash_dep_lmt;
   char                            user_fld2[2];
   struct
   {
      long long                       csm_ttl_cca_lmt;
      long long                       csm_offl_cca_lmt;
   } csm_limite[20];
} atmcpf_def;
#define atmcpf_def_Size 486
#pragma section cardcpf
/* Definition CARDCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cardcpf
typedef struct __cardcpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   struct
   {
      char                            vendor_type;
      char                            fiid[4];
      char                            stock_type;
      struct
      {
         long long                       prefix_fld;
      } prefix;
   } gen_key;
   short                           pin_length;
   char                            pin_mailer_control;
   char                            card_carrier_control;
   struct
   {
      char                            card_status[2];
   } issue_control;
   short                           length_of_issue;
   short                           reissue_cycle;
   short                           production_cycle;
   short                           expiration_cycle;
   char                            tape_label_typ[3];
   char                            pin_gen_typ;
   short                           check_digit_algo;
   char                            last_acct_no[28];
   struct
   {
      char                            emboss_format_type[2];
      char                            line1_format[50];
      char                            line2_format[50];
      char                            line3_format[50];
      char                            line4_format[50];
   } emb_cntl;
   struct
   {
      char                            encode_format_type[2];
      char                            track2_desc_format[50];
      char                            track1_format[70];
      struct
      {
         char                            format_code[2];
         char                            country_code[3];
         char                            currency_code[3];
         char                            currency_exponent;
         char                            cycle_length[2];
         char                            retry_count;
         char                            algo_id[2];
         char                            intrchg_cntl;
         char                            relay_marker;
         char                            atalla_offset[6];
         char                            acct_length[2];
         char                            dflt_pri_typ[2];
         char                            dflt_dda_san_typ[2];
         char                            dflt_sav_san_typ[2];
         char                            dflt_no_san_typ[2];
      } track3;
   } encode_cntl;
   struct
   {
      char                            indent_format_type[2];
      char                            indent_format[50];
   } indent_cntl;
} cardcpf_def;
#define cardcpf_def_Size 478
#pragma section emvcpf
/* Definition EMVCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __emvcpf
typedef struct __emvcpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            keyi_grp[16];
   char                            cap_grp[4];
   char                            cap_atc_updt;
   char                            host_cap_tkn_opt;
   short                           bad_cap_tkn_chk_lmt;
   char                            script_tplt_tag;
   char                            script_mac_lgth;
   struct
   {
      char                            apprv_fncl_txn;
      char                            apprv_non_fncl_txn;
      char                            dcln_txn;
   } update_cntrs;
   char                            delayed_auth_sppt;
   char                            fallback_act_manual;
   char                            user_fld_aci;
   char                            emv_chk;
   char                            cam_chk_typ;
   char                            bad_cam_act_reliable;
   char                            bad_cam_act_unreliable;
   char                            pre_scrn_chk;
   char                            atc_chk;
   char                            emv_iss[2];
   char                            emv_iss_descr[10];
   union
   {
      char                            action_table_index_alt;
      char                            user_fld2;
   } u_action_table_index_alt;
   char                            force_onl_fallback_chk;
   char                            action_table_index;
   char                            emv_prefix_rte;
   char                            emv_iss_appl_data_frmt;
   char                            pre_scrn_chk_tvr_cvr;
   char                            pre_scrn_chk_rsn_onl_cde;
   char                            pre_scrn_chk_fallback;
   char                            fallback_act_atm;
   char                            fallback_act_pos;
   char                            offl_pin_bad_excd_act;
   char                            offl_pin_mgmt_act;
   char                            transport_key[8];
   short                           emv_cv_eff_dat;
   char                            emv_cv_chk_typ;
   char                            emv_cv_chk_mthd;
   char                            emv_cv_data[3];
   union
   {
      char                            emv_iss_appl_data_frmt_alt;
      char                            user_fld1;
   } u_emv_iss_appl_data_frmt_alt;
   char                            user_fld3[30];
} emvcpf_def;
#define emvcpf_def_Size 116
#pragma section poscpf
/* Definition POSCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __poscpf
typedef struct __poscpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   __int32_t                       min_cca_amt;
   __int32_t                       std_cca_incr;
   char                            iss[2];
   char                            iss_descr[10];
   union
   {
      struct
      {
         long long                       ttl_pur_lmt;
         long long                       offl_pur_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       csm_ttl_pur_cuo_lmt;
         long long                       csm_offl_pur_cuo_lmt;
         long long                       csm_ttl_prest_fin_lmt;
         long long                       csm_offl_prest_fin_lmt;
         long long                       csm_ttl_prest_con_lmt;
         long long                       csm_offl_prest_con_lmt;
         long long                       csm_ttl_pago_res_lmt;
         long long                       csm_offl_pago_res_lmt;
      } grp_lmt;
      long long                       wdl_lmt[14];
   } u_grp_lmt;
   union
   {
      struct
      {
         long long                       csm_ttl_wdl_lmt_uss;
         long long                       csm_offl_wdl_lmt_uss;
         long long                       csm_ttl_cca_lmt_uss;
         long long                       csm_offl_cca_lmt_uss;
         long long                       csm_ttl_pur_lmt_uss;
         long long                       csm_offl_pur_lmt_uss;
         long long                       csm_ttl_pur_cuo_lmt_uss;
         long long                       csm_offl_pur_cuo_lmt_uss;
         long long                       csm_ttl_prest_fin_lmt_uss;
         long long                       csm_offl_prest_fin_lmt_uss;
         long long                       csm_ttl_prest_con_lmt_uss;
         long long                       csm_offl_prest_con_lmt_uss;
         long long                       csm_ttl_pago_res_lmt_uss;
         long long                       csm_offl_pago_res_lmt_uss;
      } grp_lmt_uss;
      long long                       wdl_lmt_uss[14];
   } u_grp_lmt_uss;
   long long                       ttl_cr_per_rfnd_lmt;
   long long                       offl_cr_per_rfnd_lmt;
   short                           num_rfnd_cr_lmt;
   long long                       ttl_rfnd_cr_lmt;
   long long                       offl_rfnd_cr_lmt;
   short                           combo_dflt;
   char                            addr_vrfy;
   char                            addr_vrfy_algo;
   short                           pin_req;
   short                           use_lmt;
   char                            chrgback_update;
   char                            rprsnt_update;
   char                            dflt_acct[3][2];
   short                           max_pre_auth_hlds;
   char                            iss_txn_prfl[16];
   char                            dft_captr_iss[2];
   char                            siv_chk;
   char                            siv_chk_typ;
   char                            siv_keya_grp[4];
   char                            siv_bad_disp;
   char                            siv_not_prsn_disp;
   char                            user_fld3[4];
   char                            manual_crd_entry_flg;
   char                            user_fld4;
   short                           force_onl_cnt;
   short                           apprv_cde_lgth;
   short                           csm_max_cuo_s_arg;
   short                           csm_max_cuo_uss_arg;
   short                           csm_max_cuo_s_ury;
   short                           csm_max_cuo_uss_ury;
   short                           csm_pur_cashback;
   short                           csm_propina;
   char                            csm_chk_cuo_arg;
   char                            csm_chk_cuo_ury;
   char                            csm_chk_comercio;
   char                            csm_ing_manual;
   char                            csm_ecommer_chk;
   char                            csm_uso_futuro;
} poscpf_def;
#define poscpf_def_Size 358
#pragma section ssbccpf
/* Definition SSBCCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbccpf
typedef struct __ssbccpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            chk_base_flg;
   char                            csf_chk_base_flg;
   short                           csf_chk_use_lmt;
   union
   {
      struct
      {
         long long                       ttl_chk_lmt;
         long long                       offl_chk_lmt;
         long long                       ttl_csf_chk_lmt;
         long long                       offl_csf_chk_lmt;
      } grp_lmt;
      long long                       chk_lmt[4];
   } u_grp_lmt;
   long long                       min_amt;
} ssbccpf_def;
#define ssbccpf_def_Size 52
#pragma section ncdcpf
/* Definition NCDCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ncdcpf
typedef struct __ncdcpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           use_lmt;
   union
   {
      struct
      {
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
      } cash_val_lmt;
      long long                       cash_val_wdl_lmt[4];
   } u_cash_val_lmt;
   struct
   {
      char                            ncd_cde[2];
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
         } ncd_lmt;
         long long                       ncd_wdl_lmt[4];
      } u_ncd_lmt;
   } ncd[2];
} ncdcpf_def;
#define ncdcpf_def_Size 110
#pragma section svcpf
/* Definition SVCPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __svcpf
typedef struct __svcpf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   long long                       min_load;
   long long                       max_load;
   long long                       max_as_cash;
   long long                       max_as_cash_redemption;
   long long                       max_crd_bal;
   short                           crd_duration;
   char                            crd_exp_dat[4];
   short                           caf_tplt_lgth;
   char                            retailer_id[19];
   char                            user_fld7[21];
} svcpf_def;
#define svcpf_def_Size 96
#pragma section cpf
/* Record CPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cpf
typedef struct __cpf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         long long                       prefix;
         struct
         {
            char                            pan_lgth[2];
            char                            prefix_lgth[2];
         } altkey;
      } prikey;
      char                            prefix_rte;
      char                            fiid[4];
      char                            crd_typ[2];
      char                            dat_chk_typ;
      short                           mbr_ofst;
      short                           mbr_lgth;
      short                           pofst_ofst;
      short                           algo_ofst;
      short                           dat_ofst;
      char                            pan_access_typ;
      char                            exp_chk_ind;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       aggr_lmt;
            long long                       offl_aggr_lmt;
         } grp_lmt;
         long long                       wdl_lmt[6];
      } u_grp_lmt;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      char                            pv_keya_grp[4];
      char                            pin_chk;
      char                            pin_vrfy_typ[2];
      char                            pin_ofst_loc;
      char                            algo_num_loc;
      char                            crd_hld_selct;
      char                            pin_tries_reset_option;
      char                            bad_pin_disp;
      short                           max_pin_try;
      short                           cv_ofst;
      short                           sc_ofst;
      char                            cv_keya_grp[4];
      char                            cv_bad_disp[2];
      char                            cv_chk_typ;
      char                            cv_chk;
      char                            mod10_chk;
      char                            card_profile[2];
      char                            manual_cv_bad_disp;
      char                            manual_cv_keya_grp[4];
      short                           manual_cv_eff_dat;
      char                            cv_eff_dat[4];
      short                           trk1_mbr_ofst;
      short                           trk1_pofst_ofst;
      short                           trk1_algo_ofst;
      short                           trk1_dat_ofst;
      short                           trk1_cv_ofst;
      short                           trk1_sc_ofst;
      char                            trk_pref;
      char                            bad_trk_disp;
      short                           trk1_min_lgth;
      short                           trk1_max_lgth;
      short                           trk2_min_lgth;
      short                           trk2_max_lgth;
      char                            srvc_cde_chk_flg;
      char                            effective_dat_chk_ind;
      char                            trk3_frmt[2];
      short                           trk3_algo_ofst;
      short                           trk3_cv_ofst;
      short                           trk3_dat_ofst;
      short                           trk3_mbr_ofst;
      short                           trk3_pofst_ofst;
      short                           trk3_sc_ofst;
      short                           trk3_ofst_a;
      short                           trk3_ofst_b;
      short                           trk3_ofst_c;
      short                           trk3_ofst_d;
      char                            svc_cde_act_tbl_idx;
      char                            exp_dat_cmp;
      char                            user_fld_aci[48];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
      char                            csm_rech_dolar;
      char                            csm_rech_bono;
      short                           csm_algo_check_saldo;
      short                           csm_algo_impacto_saldo;
      char                            csm_region_habilitado;
      char                            csm_ignora_caf_lmt;
      char                            atc_chk;
      char                            pre_scrn_atc;
      char                            atc_bad_disp;
      char                            csm_filler2;
      short                           atc_lmt;
      char                            csm_uso_futuro[4];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           use_lmt;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
         } grp_lmt;
         long long                       wdl_lmt[6];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_lmt_uss[6];
      } u_grp_lmt_uss;
      __int32_t                       min_cca_amt;
      __int32_t                       min_cca_amt_uss;
      __int32_t                       std_cca_incr;
      short                           dep_cr_percent;
      long long                       cr_per_dep_lmt;
      short                           num_dep_cr_lmt;
      long long                       dep_cr_lmt;
      char                            iss_txn_prfl[16];
      short                           cash_dep_cr_percent;
      long long                       cr_per_cash_dep_lmt;
      char                            user_fld2[2];
      struct
      {
         long long                       csm_ttl_cca_lmt;
         long long                       csm_offl_cca_lmt;
      } csm_limite[20];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      __int32_t                       min_cca_amt;
      __int32_t                       std_cca_incr;
      char                            iss[2];
      char                            iss_descr[10];
      union
      {
         struct
         {
            long long                       ttl_pur_lmt;
            long long                       offl_pur_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       csm_ttl_pur_cuo_lmt;
            long long                       csm_offl_pur_cuo_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       csm_ttl_prest_con_lmt;
            long long                       csm_offl_prest_con_lmt;
            long long                       csm_ttl_pago_res_lmt;
            long long                       csm_offl_pago_res_lmt;
         } grp_lmt;
         long long                       wdl_lmt[14];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_pur_lmt_uss;
            long long                       csm_offl_pur_lmt_uss;
            long long                       csm_ttl_pur_cuo_lmt_uss;
            long long                       csm_offl_pur_cuo_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_ttl_prest_con_lmt_uss;
            long long                       csm_offl_prest_con_lmt_uss;
            long long                       csm_ttl_pago_res_lmt_uss;
            long long                       csm_offl_pago_res_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_lmt_uss[14];
      } u_grp_lmt_uss;
      long long                       ttl_cr_per_rfnd_lmt;
      long long                       offl_cr_per_rfnd_lmt;
      short                           num_rfnd_cr_lmt;
      long long                       ttl_rfnd_cr_lmt;
      long long                       offl_rfnd_cr_lmt;
      short                           combo_dflt;
      char                            addr_vrfy;
      char                            addr_vrfy_algo;
      short                           pin_req;
      short                           use_lmt;
      char                            chrgback_update;
      char                            rprsnt_update;
      char                            dflt_acct[3][2];
      short                           max_pre_auth_hlds;
      char                            iss_txn_prfl[16];
      char                            dft_captr_iss[2];
      char                            siv_chk;
      char                            siv_chk_typ;
      char                            siv_keya_grp[4];
      char                            siv_bad_disp;
      char                            siv_not_prsn_disp;
      char                            user_fld3[4];
      char                            manual_crd_entry_flg;
      char                            user_fld4;
      short                           force_onl_cnt;
      short                           apprv_cde_lgth;
      short                           csm_max_cuo_s_arg;
      short                           csm_max_cuo_uss_arg;
      short                           csm_max_cuo_s_ury;
      short                           csm_max_cuo_uss_ury;
      short                           csm_pur_cashback;
      short                           csm_propina;
      char                            csm_chk_cuo_arg;
      char                            csm_chk_cuo_ury;
      char                            csm_chk_comercio;
      char                            csm_ing_manual;
      char                            csm_ecommer_chk;
      char                            csm_uso_futuro;
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            keyi_grp[16];
      char                            cap_grp[4];
      char                            cap_atc_updt;
      char                            host_cap_tkn_opt;
      short                           bad_cap_tkn_chk_lmt;
      char                            script_tplt_tag;
      char                            script_mac_lgth;
      struct
      {
         char                            apprv_fncl_txn;
         char                            apprv_non_fncl_txn;
         char                            dcln_txn;
      } update_cntrs;
      char                            delayed_auth_sppt;
      char                            fallback_act_manual;
      char                            user_fld_aci;
      char                            emv_chk;
      char                            cam_chk_typ;
      char                            bad_cam_act_reliable;
      char                            bad_cam_act_unreliable;
      char                            pre_scrn_chk;
      char                            atc_chk;
      char                            emv_iss[2];
      char                            emv_iss_descr[10];
      union
      {
         char                            action_table_index_alt;
         char                            user_fld2;
      } u_action_table_index_alt;
      char                            force_onl_fallback_chk;
      char                            action_table_index;
      char                            emv_prefix_rte;
      char                            emv_iss_appl_data_frmt;
      char                            pre_scrn_chk_tvr_cvr;
      char                            pre_scrn_chk_rsn_onl_cde;
      char                            pre_scrn_chk_fallback;
      char                            fallback_act_atm;
      char                            fallback_act_pos;
      char                            offl_pin_bad_excd_act;
      char                            offl_pin_mgmt_act;
      char                            transport_key[8];
      short                           emv_cv_eff_dat;
      char                            emv_cv_chk_typ;
      char                            emv_cv_chk_mthd;
      char                            emv_cv_data[3];
      union
      {
         char                            emv_iss_appl_data_frmt_alt;
         char                            user_fld1;
      } u_emv_iss_appl_data_frmt_alt;
      char                            user_fld3[30];
   } seg9;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            vendor_type;
         char                            fiid[4];
         char                            stock_type;
         struct
         {
            long long                       prefix_fld;
         } prefix;
      } gen_key;
      short                           pin_length;
      char                            pin_mailer_control;
      char                            card_carrier_control;
      struct
      {
         char                            card_status[2];
      } issue_control;
      short                           length_of_issue;
      short                           reissue_cycle;
      short                           production_cycle;
      short                           expiration_cycle;
      char                            tape_label_typ[3];
      char                            pin_gen_typ;
      short                           check_digit_algo;
      char                            last_acct_no[28];
      struct
      {
         char                            emboss_format_type[2];
         char                            line1_format[50];
         char                            line2_format[50];
         char                            line3_format[50];
         char                            line4_format[50];
      } emb_cntl;
      struct
      {
         char                            encode_format_type[2];
         char                            track2_desc_format[50];
         char                            track1_format[70];
         struct
         {
            char                            format_code[2];
            char                            country_code[3];
            char                            currency_code[3];
            char                            currency_exponent;
            char                            cycle_length[2];
            char                            retry_count;
            char                            algo_id[2];
            char                            intrchg_cntl;
            char                            relay_marker;
            char                            atalla_offset[6];
            char                            acct_length[2];
            char                            dflt_pri_typ[2];
            char                            dflt_dda_san_typ[2];
            char                            dflt_sav_san_typ[2];
            char                            dflt_no_san_typ[2];
         } track3;
      } encode_cntl;
      struct
      {
         char                            indent_format_type[2];
         char                            indent_format[50];
      } indent_cntl;
   } seg12;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            chk_base_flg;
      char                            csf_chk_base_flg;
      short                           csf_chk_use_lmt;
      union
      {
         struct
         {
            long long                       ttl_chk_lmt;
            long long                       offl_chk_lmt;
            long long                       ttl_csf_chk_lmt;
            long long                       offl_csf_chk_lmt;
         } grp_lmt;
         long long                       chk_lmt[4];
      } u_grp_lmt;
      long long                       min_amt;
   } seg18;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           use_lmt;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
         } cash_val_lmt;
         long long                       cash_val_wdl_lmt[4];
      } u_cash_val_lmt;
      struct
      {
         char                            ncd_cde[2];
         union
         {
            struct
            {
               long long                       ttl_wdl_lmt;
               long long                       offl_wdl_lmt;
               long long                       ttl_cca_lmt;
               long long                       offl_cca_lmt;
            } ncd_lmt;
            long long                       ncd_wdl_lmt[4];
         } u_ncd_lmt;
      } ncd[2];
   } seg23;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      long long                       min_load;
      long long                       max_load;
      long long                       max_as_cash;
      long long                       max_as_cash_redemption;
      long long                       max_crd_bal;
      short                           crd_duration;
      char                            crd_exp_dat[4];
      short                           caf_tplt_lgth;
      char                            retailer_id[19];
      char                            user_fld7[21];
   } seg24;
} cpf_def;
#define cpf_def_Size 2054
#pragma section atc_dcv_constants
/* Constant DCV-CHK-TYP-UNKN-D created on 10/18/2023 at 17:46 */
#define DCV_CHK_TYP_UNKN_D " "
/* Constant DCV-CHK-TYP-DISABLED-D created on 10/18/2023 at 17:46 */
#define DCV_CHK_TYP_DISABLED_D "0"
/* Constant DCV-CHK-TYP-MC-D created on 10/18/2023 at 17:46 */
#define DCV_CHK_TYP_MC_D "1"
/* Constant DCV-CHK-TYP-MC-ATC-0-D created on 10/18/2023 at 17:46 */
#define DCV_CHK_TYP_MC_ATC_0_D "2"
/* Constant DCV-CHK-TYP-VISA-D created on 10/18/2023 at 17:46 */
#define DCV_CHK_TYP_VISA_D "5"
/* Constant DCV-CHK-TYP-VISA-SPLIT-ATC-D created on 10/18/2023 at 17:46 */
#define DCV_CHK_TYP_VISA_SPLIT_ATC_D "6"
/* Constant ATC-CHK-BASE-UNKN-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_BASE_UNKN_D " "
/* Constant ATC-CHK-BASE-DISABLED-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_BASE_DISABLED_D "0"
/* Constant ATC-CHK-BASE-EMV-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_BASE_EMV_D "1"
/* Constant ATC-CHK-BASE-CTLS-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_BASE_CTLS_D "2"
/* Constant ATC-CHK-BASE-EMV-CTLS-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_BASE_EMV_CTLS_D "3"
/* Constant ATC-CHK-EMV-UNKN-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_EMV_UNKN_D " "
/* Constant ATC-CHK-EMV-DISABLED-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_EMV_DISABLED_D "0"
/* Constant ATC-CHK-EMV-ENABLED-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_EMV_ENABLED_D "1"
/* Constant ATC-CHK-EMV-BASE-LMT-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_EMV_BASE_LMT_D "8"
/* Constant ATC-CHK-EMV-BASE-OPT-D created on 10/18/2023 at 17:46 */
#define ATC_CHK_EMV_BASE_OPT_D "9"
#pragma section cafxbase_display
/* Definition CAFXBASE-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __cafxbase_display
typedef struct __cafxbase_display
{
   char                            lgth[4];
   char                            cnt[9];
   struct
   {
      char                            pan[19];
      char                            mbr_num[3];
   } prikey;
   char                            rec_typ;
   char                            crd_typ[2];
   char                            fiid[4];
   char                            crd_stat;
   char                            pin_ofst[16];
   char                            csm_pin_ofst[16];
   char                            ttl_wdl_lmt[12];
   char                            offl_wdl_lmt[12];
   char                            ttl_cca_lmt[12];
   char                            offl_cca_lmt[12];
   char                            csm_ttl_prest_fin_lmt[12];
   char                            csm_offl_prest_fin_lmt[12];
   char                            aggr_lmt[12];
   char                            offl_aggr_lmt[12];
   char                            csm_ttl_wdl_lmt_uss[12];
   char                            csm_offl_wdl_lmt_uss[12];
   char                            csm_ttl_cca_lmt_uss[12];
   char                            csm_offl_cca_lmt_uss[12];
   char                            csm_ttl_prest_fin_lmt_uss[12];
   char                            csm_offl_prest_fin_lmt_uss[12];
   char                            csm_aggr_lmt_uss[12];
   char                            csm_offl_aggr_lmt_uss[12];
   char                            first_used_dat[6];
   char                            last_reset_dat[6];
   char                            exp_dat[4];
   char                            effective_dat[4];
   char                            user_fld1;
   struct
   {
      char                            exp_dat_2[4];
      char                            effective_dat_2[4];
      char                            crd_stat_2;
   } scnd_crd_data;
   char                            user_fld2[32];
   char                            csm_campana;
   char                            csm_credit_class[2];
   char                            user_fld_aci[50];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
   char                            csm_track_1[82];
   char                            csm_track_2[40];
   char                            csm_fecha_vig[8];
   char                            csm_bank_fiid[4];
} cafxbase_display_def;
#define cafxbase_display_def_Size 616
#pragma section atmcafx_display
/* Definition ATMCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __atmcafx_display
typedef struct __atmcafx_display
{
   char                            lgth[4];
   char                            use_lmt[4];
   char                            ttl_wdl_lmt[12];
   char                            offl_wdl_lmt[12];
   char                            ttl_cca_lmt[12];
   char                            offl_cca_lmt[12];
   char                            csm_ttl_prest_fin_lmt[12];
   char                            csm_offl_prest_fin_lmt[12];
   char                            csm_ttl_wdl_lmt_uss[12];
   char                            csm_offl_wdl_lmt_uss[12];
   char                            csm_ttl_cca_lmt_uss[12];
   char                            csm_offl_cca_lmt_uss[12];
   char                            csm_ttl_prest_fin_lmt_uss[12];
   char                            csm_offl_prest_fin_lmt_uss[12];
   char                            dep_cr_lmt[10];
   char                            last_used[6];
   char                            iss_txn_prfl[16];
} atmcafx_display_def;
#define atmcafx_display_def_Size 184
#pragma section poscafx_display
/* Definition POSCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __poscafx_display
typedef struct __poscafx_display
{
   struct
   {
      char                            lgth[4];
      struct
      {
         char                            id[4];
         char                            b24_rsrvd[8];
      } seg_data;
   } segx_lgth;
   char                            ttl_pur_lmt[12];
   char                            offl_pur_lmt[12];
   char                            ttl_cca_lmt[12];
   char                            offl_cca_lmt[12];
   char                            ttl_wdl_lmt[12];
   char                            offl_wdl_lmt[12];
   char                            csm_ttl_pur_cuo_lmt[12];
   char                            csm_offl_pur_cuo_lmt[12];
   char                            csm_ttl_prest_fin_lmt[12];
   char                            csm_offl_prest_fin_lmt[12];
   char                            csm_ttl_prest_con_lmt[12];
   char                            csm_offl_prest_con_lmt[12];
   char                            csm_ttl_pur_lmt_uss[12];
   char                            csm_offl_pur_lmt_uss[12];
   char                            csm_ttl_cca_lmt_uss[12];
   char                            csm_offl_cca_lmt_uss[12];
   char                            csm_ttl_wdl_lmt_uss[12];
   char                            csm_offl_wdl_lmt_uss[12];
   char                            csm_ttl_pur_cuo_lmt_uss[12];
   char                            csm_offl_pur_cuo_lmt_uss[12];
   char                            csm_ttl_prest_fin_lmt_uss[12];
   char                            csm_offl_prest_fin_lmt_uss[12];
   char                            csm_ttl_prest_con_lmt_uss[12];
   char                            csm_offl_prest_con_lmt_uss[12];
   char                            use_lmt[4];
   char                            ttl_rfnd_cr_lmt[12];
   char                            offl_rfnd_cr_lmt[12];
   char                            rsn_cde;
   char                            last_used[6];
   char                            user_fld2;
   char                            iss_txn_prfl[16];
} poscafx_display_def;
#define poscafx_display_def_Size 356
#pragma section emvcafx_display
/* Definition EMVCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __emvcafx_display
typedef struct __emvcafx_display
{
   char                            segx_lgth[4];
   char                            atc_lmt[4];
   char                            send_crd_blk;
   char                            send_put_data;
   struct
   {
      char                            lwr_consec_lmt[4];
      union
      {
         char                            user_fld2[4];
         char                            data_tag[4];
      } u_user_fld2;
   } vlcty_lmts;
   char                            send_pin_unblk;
   char                            send_pin_chng;
   char                            pin_sync_act;
   char                            access_script_mgmt_sub_sys;
   char                            iss_appl_data_frmt;
   char                            action_table_index;
   char                            cap_apsn_1[2];
   char                            cap_dki_1[2];
   char                            cap_apsn_2[2];
   char                            cap_dki_2[2];
   char                            bad_cap_tkn_ovrrd_flg;
   char                            script_tplt_tag;
   char                            script_mac_lgth;
   char                            user_fld;
} emvcafx_display_def;
#define emvcafx_display_def_Size 36
#pragma section crdcafx_display
/* Definition CRDCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __crdcafx_display
typedef struct __crdcafx_display
{
   char                            seg_lgth[4];
   char                            branch_num[4];
   char                            dept_num[2];
   char                            pin_mailer;
   char                            card_carrier;
   char                            crdhldr_title;
   char                            open_text1[40];
   char                            name_line_1[30];
   char                            name_line_2[30];
   char                            addr_line_1[34];
   char                            addr_line_2[34];
   char                            city[22];
   char                            state[3];
   char                            postal_code[9];
   char                            country_code[3];
   char                            issue_stat[2];
   char                            issue_num[4];
   char                            cards_to_issue[4];
   char                            cards_issued[4];
   char                            cards_ret[4];
   char                            sec_char;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } issue_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } effective_dat;
   char                            cvv_value[3];
   char                            srvc_cde[3];
   char                            user_fld1;
} crdcafx_display_def;
#define crdcafx_display_def_Size 256
#pragma section ssbbcafx_display
/* Definition SSBBCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __ssbbcafx_display
typedef struct __ssbbcafx_display
{
   char                            lgth[4];
   char                            super_tlr_term_id[10][16];
   char                            user_fld[20];
} ssbbcafx_display_def;
#define ssbbcafx_display_def_Size 184
#pragma section ssbccafx_display
/* Definition SSBCCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __ssbccafx_display
typedef struct __ssbccafx_display
{
   char                            lgth[4];
   char                            corp_num[10];
   char                            chk_base_flg;
   char                            csf_chk_base_flg;
   char                            csf_chk_use_lmt[4];
   union
   {
      struct
      {
         char                            ttl_chk_lmt[12];
         char                            offl_chk_lmt[12];
         char                            ttl_csf_chk_lmt[12];
         char                            offl_csf_chk_lmt[12];
      } grp_lmt;
      char                            chk_lmt[4][12];
   } u_grp_lmt;
} ssbccafx_display_def;
#define ssbccafx_display_def_Size 68
#pragma section avcafx_display
/* Definition AVCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __avcafx_display
typedef struct __avcafx_display
{
   struct
   {
      char                            lgth[4];
      struct
      {
         char                            id[4];
         char                            b24_rsrvd[8];
      } seg_data;
   } segx_lgth;
   char                            addr[20];
   char                            zip_cde[9];
   char                            last_used[6];
   char                            user_fld[17];
} avcafx_display_def;
#define avcafx_display_def_Size 68
#pragma section preauthcafx_display
/* Definition PREAUTHCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __preauthcafx_display
typedef struct __preauthcafx_display
{
   char                            lgth[4];
   char                            pre_auth_cnt[2];
   struct
   {
      char                            seq_num[12];
      char                            hold_amt[18];
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tim;
      } pr_ts;
      char                            acct_typ[2];
      char                            acct[19];
      char                            user_fld;
   } pre_auth[10];
} preauthcafx_display_def;
#define preauthcafx_display_def_Size 666
#pragma section ncdcafx_display
/* Definition NCDCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __ncdcafx_display
typedef struct __ncdcafx_display
{
   char                            lgth[4];
   char                            use_lmt[4];
   char                            cash_val_ttl_wdl_lmt[12];
   char                            cash_val_offl_wdl_lmt[12];
   char                            cash_val_ttl_cca_lmt[12];
   char                            cash_val_offl_cca_lmt[12];
   char                            ncd1_cde[2];
   char                            ncd1_ttl_wdl_lmt[12];
   char                            ncd1_offl_wdl_lmt[12];
   char                            ncd1_ttl_cca_lmt[12];
   char                            ncd1_offl_cca_lmt[12];
   char                            ncd2_cde[2];
   char                            ncd2_ttl_wdl_lmt[12];
   char                            ncd2_offl_wdl_lmt[12];
   char                            ncd2_ttl_cca_lmt[12];
   char                            ncd2_offl_cca_lmt[12];
   char                            last_used[6];
} ncdcafx_display_def;
#define ncdcafx_display_def_Size 162
#pragma section enhnc_preauthcafx_display
/* Definition ENHNC-PREAUTHCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __enhnc_preauthcafx_display
typedef struct __enhnc_preauthcafx_display
{
   char                            lgth[4];
   char                            pre_auth_cnt[2];
   struct
   {
      char                            seq_num[12];
      char                            hold_amt[18];
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tim;
      } pr_ts;
      char                            apprv_cde[8];
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tim;
      } pr_txn_ts;
      char                            term_id[16];
      char                            acct_typ[2];
      char                            acct[19];
      char                            hold_flg;
   } pre_auth[10];
} enhnc_preauthcafx_display_def;
#define enhnc_preauthcafx_display_def_Size 1046
#pragma section acctcafx_display
/* Definition ACCTCAFX-DISPLAY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __acctcafx_display
typedef struct __acctcafx_display
{
   char                            lgth[4];
   char                            acct_cnt[2];
   struct
   {
      char                            typ[2];
      char                            num[19];
      char                            stat;
      union
      {
         char                            descr[10];
         char                            ach_rttn[10];
      } u_descr;
      union
      {
         char                            corp;
         char                            ach_ind;
      } u_corp;
      char                            qual;
   } acct[16];
} acctcafx_display_def;
#define acctcafx_display_def_Size 550
#pragma section cafxd
/* Definition CAFXD created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __cafxd
typedef struct __cafxd
{
   struct
   {
      char                            lgth[4];
      char                            cnt[9];
      struct
      {
         char                            pan[19];
         char                            mbr_num[3];
      } prikey;
      char                            rec_typ;
      char                            crd_typ[2];
      char                            fiid[4];
      char                            crd_stat;
      char                            pin_ofst[16];
      char                            csm_pin_ofst[16];
      char                            ttl_wdl_lmt[12];
      char                            offl_wdl_lmt[12];
      char                            ttl_cca_lmt[12];
      char                            offl_cca_lmt[12];
      char                            csm_ttl_prest_fin_lmt[12];
      char                            csm_offl_prest_fin_lmt[12];
      char                            aggr_lmt[12];
      char                            offl_aggr_lmt[12];
      char                            csm_ttl_wdl_lmt_uss[12];
      char                            csm_offl_wdl_lmt_uss[12];
      char                            csm_ttl_cca_lmt_uss[12];
      char                            csm_offl_cca_lmt_uss[12];
      char                            csm_ttl_prest_fin_lmt_uss[12];
      char                            csm_offl_prest_fin_lmt_uss[12];
      char                            csm_aggr_lmt_uss[12];
      char                            csm_offl_aggr_lmt_uss[12];
      char                            first_used_dat[6];
      char                            last_reset_dat[6];
      char                            exp_dat[4];
      char                            effective_dat[4];
      char                            user_fld1;
      struct
      {
         char                            exp_dat_2[4];
         char                            effective_dat_2[4];
         char                            crd_stat_2;
      } scnd_crd_data;
      char                            user_fld2[32];
      char                            csm_campana;
      char                            csm_credit_class[2];
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
      char                            csm_track_1[82];
      char                            csm_track_2[40];
      char                            csm_fecha_vig[8];
      char                            csm_bank_fiid[4];
   } seg0;
   struct
   {
      char                            lgth[4];
      char                            use_lmt[4];
      char                            ttl_wdl_lmt[12];
      char                            offl_wdl_lmt[12];
      char                            ttl_cca_lmt[12];
      char                            offl_cca_lmt[12];
      char                            csm_ttl_prest_fin_lmt[12];
      char                            csm_offl_prest_fin_lmt[12];
      char                            csm_ttl_wdl_lmt_uss[12];
      char                            csm_offl_wdl_lmt_uss[12];
      char                            csm_ttl_cca_lmt_uss[12];
      char                            csm_offl_cca_lmt_uss[12];
      char                            csm_ttl_prest_fin_lmt_uss[12];
      char                            csm_offl_prest_fin_lmt_uss[12];
      char                            dep_cr_lmt[10];
      char                            last_used[6];
      char                            iss_txn_prfl[16];
   } seg1;
   struct
   {
      struct
      {
         char                            lgth[4];
         struct
         {
            char                            id[4];
            char                            b24_rsrvd[8];
         } seg_data;
      } segx_lgth;
      char                            ttl_pur_lmt[12];
      char                            offl_pur_lmt[12];
      char                            ttl_cca_lmt[12];
      char                            offl_cca_lmt[12];
      char                            ttl_wdl_lmt[12];
      char                            offl_wdl_lmt[12];
      char                            csm_ttl_pur_cuo_lmt[12];
      char                            csm_offl_pur_cuo_lmt[12];
      char                            csm_ttl_prest_fin_lmt[12];
      char                            csm_offl_prest_fin_lmt[12];
      char                            csm_ttl_prest_con_lmt[12];
      char                            csm_offl_prest_con_lmt[12];
      char                            csm_ttl_pur_lmt_uss[12];
      char                            csm_offl_pur_lmt_uss[12];
      char                            csm_ttl_cca_lmt_uss[12];
      char                            csm_offl_cca_lmt_uss[12];
      char                            csm_ttl_wdl_lmt_uss[12];
      char                            csm_offl_wdl_lmt_uss[12];
      char                            csm_ttl_pur_cuo_lmt_uss[12];
      char                            csm_offl_pur_cuo_lmt_uss[12];
      char                            csm_ttl_prest_fin_lmt_uss[12];
      char                            csm_offl_prest_fin_lmt_uss[12];
      char                            csm_ttl_prest_con_lmt_uss[12];
      char                            csm_offl_prest_con_lmt_uss[12];
      char                            use_lmt[4];
      char                            ttl_rfnd_cr_lmt[12];
      char                            offl_rfnd_cr_lmt[12];
      char                            rsn_cde;
      char                            last_used[6];
      char                            user_fld2;
      char                            iss_txn_prfl[16];
   } seg2;
   struct
   {
      char                            segx_lgth[4];
      char                            atc_lmt[4];
      char                            send_crd_blk;
      char                            send_put_data;
      struct
      {
         char                            lwr_consec_lmt[4];
         union
         {
            char                            user_fld2[4];
            char                            data_tag[4];
         } u_user_fld2;
      } vlcty_lmts;
      char                            send_pin_unblk;
      char                            send_pin_chng;
      char                            pin_sync_act;
      char                            access_script_mgmt_sub_sys;
      char                            iss_appl_data_frmt;
      char                            action_table_index;
      char                            cap_apsn_1[2];
      char                            cap_dki_1[2];
      char                            cap_apsn_2[2];
      char                            cap_dki_2[2];
      char                            bad_cap_tkn_ovrrd_flg;
      char                            script_tplt_tag;
      char                            script_mac_lgth;
      char                            user_fld;
   } seg9;
   struct
   {
      char                            seg_lgth[4];
      char                            branch_num[4];
      char                            dept_num[2];
      char                            pin_mailer;
      char                            card_carrier;
      char                            crdhldr_title;
      char                            open_text1[40];
      char                            name_line_1[30];
      char                            name_line_2[30];
      char                            addr_line_1[34];
      char                            addr_line_2[34];
      char                            city[22];
      char                            state[3];
      char                            postal_code[9];
      char                            country_code[3];
      char                            issue_stat[2];
      char                            issue_num[4];
      char                            cards_to_issue[4];
      char                            cards_issued[4];
      char                            cards_ret[4];
      char                            sec_char;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } issue_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } effective_dat;
      char                            cvv_value[3];
      char                            srvc_cde[3];
      char                            user_fld1;
   } seg12;
   struct
   {
      char                            lgth[4];
      char                            super_tlr_term_id[10][16];
      char                            user_fld[20];
   } seg17;
   struct
   {
      char                            lgth[4];
      char                            corp_num[10];
      char                            chk_base_flg;
      char                            csf_chk_base_flg;
      char                            csf_chk_use_lmt[4];
      union
      {
         struct
         {
            char                            ttl_chk_lmt[12];
            char                            offl_chk_lmt[12];
            char                            ttl_csf_chk_lmt[12];
            char                            offl_csf_chk_lmt[12];
         } grp_lmt;
         char                            chk_lmt[4][12];
      } u_grp_lmt;
   } seg18;
   struct
   {
      struct
      {
         char                            lgth[4];
         struct
         {
            char                            id[4];
            char                            b24_rsrvd[8];
         } seg_data;
      } segx_lgth;
      char                            addr[20];
      char                            zip_cde[9];
      char                            last_used[6];
      char                            user_fld[17];
   } seg19;
   struct
   {
      char                            lgth[4];
      char                            pre_auth_cnt[2];
      struct
      {
         char                            seq_num[12];
         char                            hold_amt[18];
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } tim;
         } pr_ts;
         char                            acct_typ[2];
         char                            acct[19];
         char                            user_fld;
      } pre_auth[10];
   } seg22;
   struct
   {
      char                            lgth[4];
      char                            use_lmt[4];
      char                            cash_val_ttl_wdl_lmt[12];
      char                            cash_val_offl_wdl_lmt[12];
      char                            cash_val_ttl_cca_lmt[12];
      char                            cash_val_offl_cca_lmt[12];
      char                            ncd1_cde[2];
      char                            ncd1_ttl_wdl_lmt[12];
      char                            ncd1_offl_wdl_lmt[12];
      char                            ncd1_ttl_cca_lmt[12];
      char                            ncd1_offl_cca_lmt[12];
      char                            ncd2_cde[2];
      char                            ncd2_ttl_wdl_lmt[12];
      char                            ncd2_offl_wdl_lmt[12];
      char                            ncd2_ttl_cca_lmt[12];
      char                            ncd2_offl_cca_lmt[12];
      char                            last_used[6];
   } seg23;
   struct
   {
      char                            lgth[4];
      char                            acct_cnt[2];
      struct
      {
         char                            typ[2];
         char                            num[19];
         char                            stat;
         union
         {
            char                            descr[10];
            char                            ach_rttn[10];
         } u_descr;
         union
         {
            char                            corp;
            char                            ach_ind;
         } u_corp;
         char                            qual;
      } acct[16];
   } seg31;
} cafxd_def;
#define cafxd_def_Size 3146
#pragma section cafbase
/* Definition CAFBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cafbase
typedef struct __cafbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      struct
      {
         char                            num[19];
      } pan;
      char                            mbr_num[3];
   } prikey;
   char                            crd_typ[2];
   char                            fiid[4];
   char                            crd_stat;
   char                            pin_ofst[16];
   char                            csm_pin_ofst[16];
   char                            user_fld1;
   short                           bad_pin_tries;
   union
   {
      struct
      {
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
         long long                       csm_ttl_prest_fin_prd;
         long long                       csm_offl_prest_fin_prd;
      } grp_prd;
      long long                       wdl_prd[6];
   } u_grp_prd;
   union
   {
      struct
      {
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
         long long                       csm_ttl_prest_fin_lmt;
         long long                       csm_offl_prest_fin_lmt;
         long long                       aggr_lmt;
         long long                       offl_aggr_lmt;
      } grp_lmt;
      long long                       wdl_lmt[8];
   } u_grp_lmt;
   union
   {
      struct
      {
         long long                       csm_ttl_wdl_prd_uss;
         long long                       csm_offl_wdl_prd_uss;
         long long                       csm_ttl_cca_prd_uss;
         long long                       csm_offl_cca_prd_uss;
         long long                       csm_ttl_prest_fin_prd_uss;
         long long                       csm_offl_prest_fin_prd_uss;
      } csm_grp_prd_uss;
      long long                       csm_wdl_prd_uss[6];
   } u_csm_grp_prd_uss;
   union
   {
      struct
      {
         long long                       csm_ttl_wdl_lmt_uss;
         long long                       csm_offl_wdl_lmt_uss;
         long long                       csm_ttl_cca_lmt_uss;
         long long                       csm_offl_cca_lmt_uss;
         long long                       csm_ttl_prest_fin_lmt_uss;
         long long                       csm_offl_prest_fin_lmt_uss;
         long long                       csm_aggr_lmt_uss;
         long long                       csm_offl_aggr_lmt_uss;
      } csm_grp_lmt_uss;
      long long                       csm_wdl_lmt_uss[8];
   } u_csm_grp_lmt_uss;
   char                            first_used_dat[6];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_reset_dat;
   char                            exp_dat[4];
   char                            effective_dat[4];
   struct
   {
      char                            exp_dat_2[4];
      char                            effective_dat_2[4];
      char                            crd_stat_2;
      char                            user_fld1_scnd_crd_data;
   } scnd_crd_data;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
   char                            tran_ind[16];
   char                            tran_seq_num[12];
   char                            user_fld3[3];
   char                            csm_campana;
   union
   {
      short                           atc;
      char                            atc_r[2];
   } u_atc;
   short                           atc_scnd_crd;
   char                            csm_credit_class[2];
   char                            user_fld_aci[50];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
   struct
   {
      char                            vendor;
      char                            crd_fiid[4];
      char                            stock;
      long long                       prefix;
   } gen_key;
   char                            alpha_key[16];
   char                            csm_track_1[82];
   char                            csm_track_2[40];
   char                            csm_fecha_vig[8];
   char                            csm_bank_fiid[4];
} cafbase_def;
#define cafbase_def_Size 704
#pragma section atmcaf
/* Definition ATMCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmcaf
typedef struct __atmcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           used_prd;
   short                           use_lmt;
   union
   {
      struct
      {
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
         long long                       csm_ttl_prest_fin_prd;
         long long                       csm_offl_prest_fin_prd;
      } grp_prd;
      long long                       wdl_prd[6];
   } u_grp_prd;
   union
   {
      struct
      {
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
         long long                       csm_ttl_prest_fin_lmt;
         long long                       csm_offl_prest_fin_lmt;
      } grp_lmt;
      long long                       wdl_lmt[6];
   } u_grp_lmt;
   union
   {
      struct
      {
         long long                       csm_ttl_wdl_prd_uss;
         long long                       csm_offl_wdl_prd_uss;
         long long                       csm_ttl_cca_prd_uss;
         long long                       csm_offl_cca_prd_uss;
         long long                       csm_ttl_prest_fin_prd_uss;
         long long                       csm_offl_prest_fin_prd_uss;
      } grp_prd_uss;
      long long                       wdl_prd_uss[6];
   } u_grp_prd_uss;
   union
   {
      struct
      {
         long long                       csm_ttl_wdl_lmt_uss;
         long long                       csm_offl_wdl_lmt_uss;
         long long                       csm_ttl_cca_lmt_uss;
         long long                       csm_offl_cca_lmt_uss;
         long long                       csm_ttl_prest_fin_lmt_uss;
         long long                       csm_offl_prest_fin_lmt_uss;
      } grp_lmt_uss;
      long long                       wdl_lmt_uss[6];
   } u_grp_lmt_uss;
   __int32_t                       dep_cr_prd;
   __int32_t                       dep_cr_lmt;
   short                           num_dep_cr_prd;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_used;
   char                            iss_txn_prfl[16];
} atmcaf_def;
#define atmcaf_def_Size 236
#pragma section poscaf
/* Definition POSCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __poscaf
typedef struct __poscaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   union
   {
      struct
      {
         long long                       ttl_pur_prd;
         long long                       offl_pur_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       csm_ttl_pur_cuo_prd;
         long long                       csm_offl_pur_cuo_prd;
         long long                       csm_ttl_prest_fin_prd;
         long long                       csm_offl_prest_fin_prd;
         long long                       csm_ttl_prest_con_prd;
         long long                       csm_offl_prest_con_prd;
      } grp_prd;
      long long                       wdl_pur_prd[12];
   } u_grp_prd;
   union
   {
      struct
      {
         long long                       csm_ttl_pur_prd_uss;
         long long                       csm_offl_pur_prd_uss;
         long long                       csm_ttl_cca_prd_uss;
         long long                       csm_offl_cca_prd_uss;
         long long                       csm_ttl_wdl_prd_uss;
         long long                       csm_offl_wdl_prd_uss;
         long long                       csm_ttl_pur_cuo_prd_uss;
         long long                       csm_offl_pur_cuo_prd_uss;
         long long                       csm_ttl_prest_fin_prd_uss;
         long long                       csm_offl_prest_fin_prd_uss;
         long long                       csm_ttl_prest_con_prd_uss;
         long long                       csm_offl_prest_con_prd_uss;
      } grp_prd_uss;
      long long                       wdl_pur_prd_uss[12];
   } u_grp_prd_uss;
   union
   {
      struct
      {
         long long                       ttl_pur_lmt;
         long long                       offl_pur_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       csm_ttl_pur_cuo_lmt;
         long long                       csm_offl_pur_cuo_lmt;
         long long                       csm_ttl_prest_fin_lmt;
         long long                       csm_offl_prest_fin_lmt;
         long long                       csm_ttl_prest_con_lmt;
         long long                       csm_offl_prest_con_lmt;
      } grp_lmt;
      long long                       wdl_pur_lmt[12];
   } u_grp_lmt;
   union
   {
      struct
      {
         long long                       csm_ttl_pur_lmt_uss;
         long long                       csm_offl_pur_lmt_uss;
         long long                       csm_ttl_cca_lmt_uss;
         long long                       csm_offl_cca_lmt_uss;
         long long                       csm_ttl_wdl_lmt_uss;
         long long                       csm_offl_wdl_lmt_uss;
         long long                       csm_ttl_pur_cuo_lmt_uss;
         long long                       csm_offl_pur_cuo_lmt_uss;
         long long                       csm_ttl_prest_fin_lmt_uss;
         long long                       csm_offl_prest_fin_lmt_uss;
         long long                       csm_ttl_prest_con_lmt_uss;
         long long                       csm_offl_prest_con_lmt_uss;
      } grp_lmt_uss;
      long long                       wdl_pur_lmt_uss[12];
   } u_grp_lmt_uss;
   short                           used_prd;
   short                           use_lmt;
   long long                       ttl_rfnd_cr_prd;
   long long                       offl_rfnd_cr_prd;
   long long                       ttl_rfnd_cr_lmt;
   long long                       offl_rfnd_cr_lmt;
   short                           num_rfnd_cr_prd;
   char                            rsn_cde;
   char                            tran_tc[2];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_used;
   char                            iss_txn_prfl[16];
   char                            user_fld4[15];
   long long                       ttl_aft_prd;
   long long                       offl_aft_prd;
} poscaf_def;
#define poscaf_def_Size 486
#pragma section cardcaf
/* Definition CARDCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cardcaf
typedef struct __cardcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            branch_num[4];
   char                            dept_num[2];
   char                            pin_mailer;
   char                            card_carrier;
   char                            crdhldr_title;
   char                            open_text1[40];
   char                            name_line_1[30];
   char                            name_line_2[30];
   char                            addr_line_1[34];
   char                            addr_line_2[34];
   char                            city[22];
   char                            state[3];
   char                            postal_code[9];
   char                            country_code[3];
   char                            issue_stat[2];
   char                            sec_char;
   char                            user_fld1_cardcaf;
   short                           issue_num;
   short                           cards_to_issue;
   short                           cards_issued;
   short                           cards_ret;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } issue_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } effective_dat;
   char                            cvv_value[3];
   char                            srvc_cde[3];
} cardcaf_def;
#define cardcaf_def_Size 252
#pragma section ssbbcaf
/* Definition SSBBCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbbcaf
typedef struct __ssbbcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            super_tlr_term_id[10][16];
   char                            user_fld[20];
} ssbbcaf_def;
#define ssbbcaf_def_Size 188
#pragma section ssbccaf
/* Definition SSBCCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbccaf
typedef struct __ssbccaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            corp_num[10];
   char                            chk_base_flg;
   char                            csf_chk_base_flg;
   short                           csf_chk_used_prd;
   short                           csf_chk_use_lmt;
   union
   {
      struct
      {
         long long                       ttl_chk_prd;
         long long                       offl_chk_prd;
         long long                       ttl_csf_chk_prd;
         long long                       offl_csf_chk_prd;
      } grp_prd;
      long long                       chk_prd[4];
   } u_grp_prd;
   union
   {
      struct
      {
         long long                       ttl_chk_lmt;
         long long                       offl_chk_lmt;
         long long                       ttl_csf_chk_lmt;
         long long                       offl_csf_chk_lmt;
      } grp_lmt;
      long long                       chk_lmt[4];
   } u_grp_lmt;
} ssbccaf_def;
#define ssbccaf_def_Size 88
#pragma section avcaf
/* Definition AVCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __avcaf
typedef struct __avcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            addr[20];
   char                            zip_cde[9];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_used;
   char                            user_fld1[17];
} avcaf_def;
#define avcaf_def_Size 60
#pragma section emvcaf
/* Definition EMVCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __emvcaf
typedef struct __emvcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           atc;
   short                           atc_lmt;
   char                            send_crd_blk;
   char                            send_put_data;
   struct
   {
      short                           lwr_consec_lmt;
      union
      {
         char                            user_fld2[2];
         short                           data_tag;
      } u_user_fld2;
   } vlcty_lmts;
   char                            send_pin_unblk;
   char                            send_pin_chng;
   char                            pin_sync_act;
   char                            access_script_mgmt_sub_sys;
   char                            iss_appl_data_frmt;
   char                            action_table_index;
   struct
   {
      short                           atc_2;
      struct
      {
         short                           cap_atc;
         short                           bad_cap_tkn_chk_accum;
         char                            apsn[2];
         char                            dki[2];
      } cap_data_2;
   } scnd_crd_data;
   struct
   {
      short                           cap_atc;
      short                           bad_cap_tkn_chk_accum;
      char                            apsn[2];
      char                            dki[2];
      char                            bad_cap_tkn_ovrrd_flg;
   } cap_data;
   char                            script_tplt_tag;
   char                            script_mac_lgth;
   char                            user_fld1_emvcaf;
} emvcaf_def;
#define emvcaf_def_Size 46
#pragma section ncdcaf
/* Definition NCDCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ncdcaf
typedef struct __ncdcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           used_prd;
   short                           use_lmt;
   union
   {
      struct
      {
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
      } cash_val_prd;
      long long                       cash_val_wdl_prd[4];
   } u_cash_val_prd;
   union
   {
      struct
      {
         long long                       ttl_wdl_lmt;
         long long                       offl_wdl_lmt;
         long long                       ttl_cca_lmt;
         long long                       offl_cca_lmt;
      } cash_val_lmt;
      long long                       cash_val_wdl_lmt[4];
   } u_cash_val_lmt;
   struct
   {
      char                            ncd_cde[2];
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
         } ncd_prd;
         long long                       ncd_wdl_prd[4];
      } u_ncd_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
         } ncd_lmt;
         long long                       ncd_wdl_lmt[4];
      } u_ncd_lmt;
   } ncd[2];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_used;
} ncdcaf_def;
#define ncdcaf_def_Size 214
#pragma section pfrd_txn_caf
/* Definition PFRD-TXN-CAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __pfrd_txn_caf
typedef struct __pfrd_txn_caf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   struct
   {
      char                            acct_num[19];
   } acct;
   char                            tran_cde[2];
   char                            from_acct_typ[2];
   char                            to_acct_typ[2];
   char                            rcpt_opt;
   long long                       amt;
   char                            prfl_updt_ind;
   char                            ada_ind;
   char                            mrkt_seg_ind[2];
   char                            user_fld_aci[14];
} pfrd_txn_caf_def;
#define pfrd_txn_caf_def_Size 60
#pragma section acctcaf
/* Definition ACCTCAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __acctcaf
typedef struct __acctcaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   unsigned short                  acct_cnt;
   struct
   {
      char                            typ[2];
      struct
      {
         char                            acct_num[19];
      } num;
      char                            stat;
      union
      {
         char                            descr[10];
         char                            ach_rttn[10];
      } u_descr;
      union
      {
         char                            corp;
         char                            ach_ind;
      } u_corp;
      char                            qual;
   } acct[16];
} acctcaf_def;
#define acctcaf_def_Size 554
#pragma section cafv
/* Record CAFV created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cafv
typedef struct __cafv
{
   short                           caf_len;
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         struct
         {
            char                            num[19];
         } pan;
         char                            mbr_num[3];
      } prikey;
      char                            crd_typ[2];
      char                            fiid[4];
      char                            crd_stat;
      char                            pin_ofst[16];
      char                            csm_pin_ofst[16];
      char                            user_fld1;
      short                           bad_pin_tries;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
         } grp_prd;
         long long                       wdl_prd[6];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       aggr_lmt;
            long long                       offl_aggr_lmt;
         } grp_lmt;
         long long                       wdl_lmt[8];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
         } csm_grp_prd_uss;
         long long                       csm_wdl_prd_uss[6];
      } u_csm_grp_prd_uss;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_aggr_lmt_uss;
            long long                       csm_offl_aggr_lmt_uss;
         } csm_grp_lmt_uss;
         long long                       csm_wdl_lmt_uss[8];
      } u_csm_grp_lmt_uss;
      char                            first_used_dat[6];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_reset_dat;
      char                            exp_dat[4];
      char                            effective_dat[4];
      struct
      {
         char                            exp_dat_2[4];
         char                            effective_dat_2[4];
         char                            crd_stat_2;
         char                            user_fld1_scnd_crd_data;
      } scnd_crd_data;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      char                            tran_ind[16];
      char                            tran_seq_num[12];
      char                            user_fld3[3];
      char                            csm_campana;
      union
      {
         short                           atc;
         char                            atc_r[2];
      } u_atc;
      short                           atc_scnd_crd;
      char                            csm_credit_class[2];
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
      struct
      {
         char                            vendor;
         char                            crd_fiid[4];
         char                            stock;
         long long                       prefix;
      } gen_key;
      char                            alpha_key[16];
      char                            csm_track_1[82];
      char                            csm_track_2[40];
      char                            csm_fecha_vig[8];
      char                            csm_bank_fiid[4];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           used_prd;
      short                           use_lmt;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
         } grp_prd;
         long long                       wdl_prd[6];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
         } grp_lmt;
         long long                       wdl_lmt[6];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
         } grp_prd_uss;
         long long                       wdl_prd_uss[6];
      } u_grp_prd_uss;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_lmt_uss[6];
      } u_grp_lmt_uss;
      __int32_t                       dep_cr_prd;
      __int32_t                       dep_cr_lmt;
      short                           num_dep_cr_prd;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            iss_txn_prfl[16];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      union
      {
         struct
         {
            long long                       ttl_pur_prd;
            long long                       offl_pur_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       csm_ttl_pur_cuo_prd;
            long long                       csm_offl_pur_cuo_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
            long long                       csm_ttl_prest_con_prd;
            long long                       csm_offl_prest_con_prd;
         } grp_prd;
         long long                       wdl_pur_prd[12];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       csm_ttl_pur_prd_uss;
            long long                       csm_offl_pur_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_pur_cuo_prd_uss;
            long long                       csm_offl_pur_cuo_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
            long long                       csm_ttl_prest_con_prd_uss;
            long long                       csm_offl_prest_con_prd_uss;
         } grp_prd_uss;
         long long                       wdl_pur_prd_uss[12];
      } u_grp_prd_uss;
      union
      {
         struct
         {
            long long                       ttl_pur_lmt;
            long long                       offl_pur_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       csm_ttl_pur_cuo_lmt;
            long long                       csm_offl_pur_cuo_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       csm_ttl_prest_con_lmt;
            long long                       csm_offl_prest_con_lmt;
         } grp_lmt;
         long long                       wdl_pur_lmt[12];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_pur_lmt_uss;
            long long                       csm_offl_pur_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_pur_cuo_lmt_uss;
            long long                       csm_offl_pur_cuo_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_ttl_prest_con_lmt_uss;
            long long                       csm_offl_prest_con_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_pur_lmt_uss[12];
      } u_grp_lmt_uss;
      short                           used_prd;
      short                           use_lmt;
      long long                       ttl_rfnd_cr_prd;
      long long                       offl_rfnd_cr_prd;
      long long                       ttl_rfnd_cr_lmt;
      long long                       offl_rfnd_cr_lmt;
      short                           num_rfnd_cr_prd;
      char                            rsn_cde;
      char                            tran_tc[2];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            iss_txn_prfl[16];
      char                            user_fld4[15];
      long long                       ttl_aft_prd;
      long long                       offl_aft_prd;
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           atc;
      short                           atc_lmt;
      char                            send_crd_blk;
      char                            send_put_data;
      struct
      {
         short                           lwr_consec_lmt;
         union
         {
            char                            user_fld2[2];
            short                           data_tag;
         } u_user_fld2;
      } vlcty_lmts;
      char                            send_pin_unblk;
      char                            send_pin_chng;
      char                            pin_sync_act;
      char                            access_script_mgmt_sub_sys;
      char                            iss_appl_data_frmt;
      char                            action_table_index;
      struct
      {
         short                           atc_2;
         struct
         {
            short                           cap_atc;
            short                           bad_cap_tkn_chk_accum;
            char                            apsn[2];
            char                            dki[2];
         } cap_data_2;
      } scnd_crd_data;
      struct
      {
         short                           cap_atc;
         short                           bad_cap_tkn_chk_accum;
         char                            apsn[2];
         char                            dki[2];
         char                            bad_cap_tkn_ovrrd_flg;
      } cap_data;
      char                            script_tplt_tag;
      char                            script_mac_lgth;
      char                            user_fld1_emvcaf;
   } seg9;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            branch_num[4];
      char                            dept_num[2];
      char                            pin_mailer;
      char                            card_carrier;
      char                            crdhldr_title;
      char                            open_text1[40];
      char                            name_line_1[30];
      char                            name_line_2[30];
      char                            addr_line_1[34];
      char                            addr_line_2[34];
      char                            city[22];
      char                            state[3];
      char                            postal_code[9];
      char                            country_code[3];
      char                            issue_stat[2];
      char                            sec_char;
      char                            user_fld1_cardcaf;
      short                           issue_num;
      short                           cards_to_issue;
      short                           cards_issued;
      short                           cards_ret;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } issue_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } effective_dat;
      char                            cvv_value[3];
      char                            srvc_cde[3];
   } seg12;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            super_tlr_term_id[10][16];
      char                            user_fld[20];
   } seg17;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            corp_num[10];
      char                            chk_base_flg;
      char                            csf_chk_base_flg;
      short                           csf_chk_used_prd;
      short                           csf_chk_use_lmt;
      union
      {
         struct
         {
            long long                       ttl_chk_prd;
            long long                       offl_chk_prd;
            long long                       ttl_csf_chk_prd;
            long long                       offl_csf_chk_prd;
         } grp_prd;
         long long                       chk_prd[4];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_chk_lmt;
            long long                       offl_chk_lmt;
            long long                       ttl_csf_chk_lmt;
            long long                       offl_csf_chk_lmt;
         } grp_lmt;
         long long                       chk_lmt[4];
      } u_grp_lmt;
   } seg18;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            addr[20];
      char                            zip_cde[9];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            user_fld1[17];
   } seg19;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         short                           acct_typ;
         struct
         {
            char                            acct_num[19];
         } acct;
         char                            user_fld1;
      } pre_auth[10];
   } seg22;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         char                            apprv_cde[8];
         short                           pr_txn_timestamp[3];
         char                            term_id[16];
         short                           acct_typ;
         struct
         {
            char                            acct_num[19];
         } acct;
         char                            hold_flg;
      } enhnc_pre_auth[10];
   } seg25;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      unsigned short                  acct_cnt;
      struct
      {
         char                            typ[2];
         struct
         {
            char                            acct_num[19];
         } num;
         char                            stat;
         union
         {
            char                            descr[10];
            char                            ach_rttn[10];
         } u_descr;
         union
         {
            char                            corp;
            char                            ach_ind;
         } u_corp;
         char                            qual;
      } acct[16];
   } seg31;
} cafv_def;
#define cafv_def_Size 3892
#pragma section caf
/* Record CAF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __caf
typedef struct __caf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         struct
         {
            char                            num[19];
         } pan;
         char                            mbr_num[3];
      } prikey;
      char                            crd_typ[2];
      char                            fiid[4];
      char                            crd_stat;
      char                            pin_ofst[16];
      char                            csm_pin_ofst[16];
      char                            user_fld1;
      short                           bad_pin_tries;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
         } grp_prd;
         long long                       wdl_prd[6];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       aggr_lmt;
            long long                       offl_aggr_lmt;
         } grp_lmt;
         long long                       wdl_lmt[8];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
         } csm_grp_prd_uss;
         long long                       csm_wdl_prd_uss[6];
      } u_csm_grp_prd_uss;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_aggr_lmt_uss;
            long long                       csm_offl_aggr_lmt_uss;
         } csm_grp_lmt_uss;
         long long                       csm_wdl_lmt_uss[8];
      } u_csm_grp_lmt_uss;
      char                            first_used_dat[6];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_reset_dat;
      char                            exp_dat[4];
      char                            effective_dat[4];
      struct
      {
         char                            exp_dat_2[4];
         char                            effective_dat_2[4];
         char                            crd_stat_2;
         char                            user_fld1_scnd_crd_data;
      } scnd_crd_data;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      char                            tran_ind[16];
      char                            tran_seq_num[12];
      char                            user_fld3[3];
      char                            csm_campana;
      union
      {
         short                           atc;
         char                            atc_r[2];
      } u_atc;
      short                           atc_scnd_crd;
      char                            csm_credit_class[2];
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
      struct
      {
         char                            vendor;
         char                            crd_fiid[4];
         char                            stock;
         long long                       prefix;
      } gen_key;
      char                            alpha_key[16];
      char                            csm_track_1[82];
      char                            csm_track_2[40];
      char                            csm_fecha_vig[8];
      char                            csm_bank_fiid[4];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           used_prd;
      short                           use_lmt;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
         } grp_prd;
         long long                       wdl_prd[6];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
         } grp_lmt;
         long long                       wdl_lmt[6];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
         } grp_prd_uss;
         long long                       wdl_prd_uss[6];
      } u_grp_prd_uss;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_lmt_uss[6];
      } u_grp_lmt_uss;
      __int32_t                       dep_cr_prd;
      __int32_t                       dep_cr_lmt;
      short                           num_dep_cr_prd;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            iss_txn_prfl[16];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      union
      {
         struct
         {
            long long                       ttl_pur_prd;
            long long                       offl_pur_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       csm_ttl_pur_cuo_prd;
            long long                       csm_offl_pur_cuo_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
            long long                       csm_ttl_prest_con_prd;
            long long                       csm_offl_prest_con_prd;
         } grp_prd;
         long long                       wdl_pur_prd[12];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       csm_ttl_pur_prd_uss;
            long long                       csm_offl_pur_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_pur_cuo_prd_uss;
            long long                       csm_offl_pur_cuo_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
            long long                       csm_ttl_prest_con_prd_uss;
            long long                       csm_offl_prest_con_prd_uss;
         } grp_prd_uss;
         long long                       wdl_pur_prd_uss[12];
      } u_grp_prd_uss;
      union
      {
         struct
         {
            long long                       ttl_pur_lmt;
            long long                       offl_pur_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       csm_ttl_pur_cuo_lmt;
            long long                       csm_offl_pur_cuo_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       csm_ttl_prest_con_lmt;
            long long                       csm_offl_prest_con_lmt;
         } grp_lmt;
         long long                       wdl_pur_lmt[12];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_pur_lmt_uss;
            long long                       csm_offl_pur_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_pur_cuo_lmt_uss;
            long long                       csm_offl_pur_cuo_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_ttl_prest_con_lmt_uss;
            long long                       csm_offl_prest_con_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_pur_lmt_uss[12];
      } u_grp_lmt_uss;
      short                           used_prd;
      short                           use_lmt;
      long long                       ttl_rfnd_cr_prd;
      long long                       offl_rfnd_cr_prd;
      long long                       ttl_rfnd_cr_lmt;
      long long                       offl_rfnd_cr_lmt;
      short                           num_rfnd_cr_prd;
      char                            rsn_cde;
      char                            tran_tc[2];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            iss_txn_prfl[16];
      char                            user_fld4[15];
      long long                       ttl_aft_prd;
      long long                       offl_aft_prd;
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           atc;
      short                           atc_lmt;
      char                            send_crd_blk;
      char                            send_put_data;
      struct
      {
         short                           lwr_consec_lmt;
         union
         {
            char                            user_fld2[2];
            short                           data_tag;
         } u_user_fld2;
      } vlcty_lmts;
      char                            send_pin_unblk;
      char                            send_pin_chng;
      char                            pin_sync_act;
      char                            access_script_mgmt_sub_sys;
      char                            iss_appl_data_frmt;
      char                            action_table_index;
      struct
      {
         short                           atc_2;
         struct
         {
            short                           cap_atc;
            short                           bad_cap_tkn_chk_accum;
            char                            apsn[2];
            char                            dki[2];
         } cap_data_2;
      } scnd_crd_data;
      struct
      {
         short                           cap_atc;
         short                           bad_cap_tkn_chk_accum;
         char                            apsn[2];
         char                            dki[2];
         char                            bad_cap_tkn_ovrrd_flg;
      } cap_data;
      char                            script_tplt_tag;
      char                            script_mac_lgth;
      char                            user_fld1_emvcaf;
   } seg9;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            branch_num[4];
      char                            dept_num[2];
      char                            pin_mailer;
      char                            card_carrier;
      char                            crdhldr_title;
      char                            open_text1[40];
      char                            name_line_1[30];
      char                            name_line_2[30];
      char                            addr_line_1[34];
      char                            addr_line_2[34];
      char                            city[22];
      char                            state[3];
      char                            postal_code[9];
      char                            country_code[3];
      char                            issue_stat[2];
      char                            sec_char;
      char                            user_fld1_cardcaf;
      short                           issue_num;
      short                           cards_to_issue;
      short                           cards_issued;
      short                           cards_ret;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } issue_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } effective_dat;
      char                            cvv_value[3];
      char                            srvc_cde[3];
   } seg12;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            super_tlr_term_id[10][16];
      char                            user_fld[20];
   } seg17;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            corp_num[10];
      char                            chk_base_flg;
      char                            csf_chk_base_flg;
      short                           csf_chk_used_prd;
      short                           csf_chk_use_lmt;
      union
      {
         struct
         {
            long long                       ttl_chk_prd;
            long long                       offl_chk_prd;
            long long                       ttl_csf_chk_prd;
            long long                       offl_csf_chk_prd;
         } grp_prd;
         long long                       chk_prd[4];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_chk_lmt;
            long long                       offl_chk_lmt;
            long long                       ttl_csf_chk_lmt;
            long long                       offl_csf_chk_lmt;
         } grp_lmt;
         long long                       chk_lmt[4];
      } u_grp_lmt;
   } seg18;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            addr[20];
      char                            zip_cde[9];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            user_fld1[17];
   } seg19;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         short                           acct_typ;
         struct
         {
            char                            acct_num[19];
         } acct;
         char                            user_fld1;
      } pre_auth[10];
   } seg22;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         char                            apprv_cde[8];
         short                           pr_txn_timestamp[3];
         char                            term_id[16];
         short                           acct_typ;
         struct
         {
            char                            acct_num[19];
         } acct;
         char                            hold_flg;
      } enhnc_pre_auth[10];
   } seg25;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      unsigned short                  acct_cnt;
      struct
      {
         char                            typ[2];
         struct
         {
            char                            acct_num[19];
         } num;
         char                            stat;
         union
         {
            char                            descr[10];
            char                            ach_rttn[10];
         } u_descr;
         union
         {
            char                            corp;
            char                            ach_ind;
         } u_corp;
         char                            qual;
      } acct[16];
   } seg31;
} caf_def;
#define caf_def_Size 3890
#pragma section cafr
/* Record CAFR created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __cafr
typedef struct __cafr
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         struct
         {
            char                            num[19];
         } pan;
         char                            mbr_num[3];
      } prikey;
      char                            crd_typ[2];
      char                            fiid[4];
      char                            crd_stat;
      char                            pin_ofst[16];
      char                            csm_pin_ofst[16];
      char                            user_fld1;
      short                           bad_pin_tries;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
         } grp_prd;
         long long                       wdl_prd[6];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       aggr_lmt;
            long long                       offl_aggr_lmt;
         } grp_lmt;
         long long                       wdl_lmt[8];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
         } csm_grp_prd_uss;
         long long                       csm_wdl_prd_uss[6];
      } u_csm_grp_prd_uss;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_aggr_lmt_uss;
            long long                       csm_offl_aggr_lmt_uss;
         } csm_grp_lmt_uss;
         long long                       csm_wdl_lmt_uss[8];
      } u_csm_grp_lmt_uss;
      char                            first_used_dat[6];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_reset_dat;
      char                            exp_dat[4];
      char                            effective_dat[4];
      struct
      {
         char                            exp_dat_2[4];
         char                            effective_dat_2[4];
         char                            crd_stat_2;
         char                            user_fld1_scnd_crd_data;
      } scnd_crd_data;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      char                            tran_ind[16];
      char                            tran_seq_num[12];
      char                            user_fld3[3];
      char                            csm_campana;
      union
      {
         short                           atc;
         char                            atc_r[2];
      } u_atc;
      short                           atc_scnd_crd;
      char                            csm_credit_class[2];
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
      struct
      {
         char                            vendor;
         char                            crd_fiid[4];
         char                            stock;
         long long                       prefix;
      } gen_key;
      char                            alpha_key[16];
      char                            csm_track_1[82];
      char                            csm_track_2[40];
      char                            csm_fecha_vig[8];
      char                            csm_bank_fiid[4];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           used_prd;
      short                           use_lmt;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
         } grp_prd;
         long long                       wdl_prd[6];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
         } grp_lmt;
         long long                       wdl_lmt[6];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
         } grp_prd_uss;
         long long                       wdl_prd_uss[6];
      } u_grp_prd_uss;
      union
      {
         struct
         {
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_lmt_uss[6];
      } u_grp_lmt_uss;
      __int32_t                       dep_cr_prd;
      __int32_t                       dep_cr_lmt;
      short                           num_dep_cr_prd;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            iss_txn_prfl[16];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      union
      {
         struct
         {
            long long                       ttl_pur_prd;
            long long                       offl_pur_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       csm_ttl_pur_cuo_prd;
            long long                       csm_offl_pur_cuo_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
            long long                       csm_ttl_prest_con_prd;
            long long                       csm_offl_prest_con_prd;
         } grp_prd;
         long long                       wdl_pur_prd[12];
      } u_grp_prd;
      union
      {
         struct
         {
            long long                       csm_ttl_pur_prd_uss;
            long long                       csm_offl_pur_prd_uss;
            long long                       csm_ttl_cca_prd_uss;
            long long                       csm_offl_cca_prd_uss;
            long long                       csm_ttl_wdl_prd_uss;
            long long                       csm_offl_wdl_prd_uss;
            long long                       csm_ttl_pur_cuo_prd_uss;
            long long                       csm_offl_pur_cuo_prd_uss;
            long long                       csm_ttl_prest_fin_prd_uss;
            long long                       csm_offl_prest_fin_prd_uss;
            long long                       csm_ttl_prest_con_prd_uss;
            long long                       csm_offl_prest_con_prd_uss;
         } grp_prd_uss;
         long long                       wdl_pur_prd_uss[12];
      } u_grp_prd_uss;
      union
      {
         struct
         {
            long long                       ttl_pur_lmt;
            long long                       offl_pur_lmt;
            long long                       ttl_cca_lmt;
            long long                       offl_cca_lmt;
            long long                       ttl_wdl_lmt;
            long long                       offl_wdl_lmt;
            long long                       csm_ttl_pur_cuo_lmt;
            long long                       csm_offl_pur_cuo_lmt;
            long long                       csm_ttl_prest_fin_lmt;
            long long                       csm_offl_prest_fin_lmt;
            long long                       csm_ttl_prest_con_lmt;
            long long                       csm_offl_prest_con_lmt;
         } grp_lmt;
         long long                       wdl_pur_lmt[12];
      } u_grp_lmt;
      union
      {
         struct
         {
            long long                       csm_ttl_pur_lmt_uss;
            long long                       csm_offl_pur_lmt_uss;
            long long                       csm_ttl_cca_lmt_uss;
            long long                       csm_offl_cca_lmt_uss;
            long long                       csm_ttl_wdl_lmt_uss;
            long long                       csm_offl_wdl_lmt_uss;
            long long                       csm_ttl_pur_cuo_lmt_uss;
            long long                       csm_offl_pur_cuo_lmt_uss;
            long long                       csm_ttl_prest_fin_lmt_uss;
            long long                       csm_offl_prest_fin_lmt_uss;
            long long                       csm_ttl_prest_con_lmt_uss;
            long long                       csm_offl_prest_con_lmt_uss;
         } grp_lmt_uss;
         long long                       wdl_pur_lmt_uss[12];
      } u_grp_lmt_uss;
      short                           used_prd;
      short                           use_lmt;
      long long                       ttl_rfnd_cr_prd;
      long long                       offl_rfnd_cr_prd;
      long long                       ttl_rfnd_cr_lmt;
      long long                       offl_rfnd_cr_lmt;
      short                           num_rfnd_cr_prd;
      char                            rsn_cde;
      char                            tran_tc[2];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_used;
      char                            iss_txn_prfl[16];
      char                            user_fld4[15];
      long long                       ttl_aft_prd;
      long long                       offl_aft_prd;
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      unsigned short                  acct_cnt;
      struct
      {
         char                            typ[2];
         struct
         {
            char                            acct_num[19];
         } num;
         char                            stat;
         union
         {
            char                            descr[10];
            char                            ach_rttn[10];
         } u_descr;
         union
         {
            char                            corp;
            char                            ach_ind;
         } u_corp;
         char                            qual;
      } acct[16];
   } seg31;
} cafr_def;
#define cafr_def_Size 1980
#pragma section cafd
/* Record CAFD created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __cafd
typedef struct __cafd
{
   struct
   {
      struct
      {
         char                            num[19];
      } pan;
      char                            mbr_num[3];
   } prikey;
   char                            fiid[4];
   short                           bad_pin_tries;
   short                           atc;
   char                            tran_ind[16];
   char                            tran_seq_num[12];
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
   char                            pos_tran_tc[2];
   short                           emv_atc;
   struct
   {
      short                           cap_atc;
      short                           bad_cap_tkn_chk_accum;
   } cap_data;
   struct
   {
      short                           atc_2;
      short                           emv_atc_2;
      struct
      {
         short                           cap_atc;
         short                           bad_cap_tkn_chk_accum;
      } cap_data_2;
   } scnd_crd_data;
   char                            user_fld_aci[20];
   char                            user_fld_cust[20];
} cafd_def;
#define cafd_def_Size 124
#pragma section ecfbase
/* Definition ECFBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ecfbase
typedef struct __ecfbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      char                            tag[10];
   } prikey;
   struct
   {
      char                            sym_name[16];
   } altkey;
   char                            rel_num[2];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } extract_dat;
   char                            extract_tim[4];
   char                            restrt_flg;
   char                            tape_name[35];
   char                            tape_label[3];
   char                            char_set;
   __int32_t                       tape_blk_size;
   char                            base_rpt_nam[35];
   struct
   {
      char                            ilf;
      char                            om;
      char                            saf;
      char                            icf;
      char                            idf;
      char                            tlf;
      char                            itlf;
      char                            icfe;
      char                            user_fld1c;
      char                            user_fld1d;
      char                            ptlf;
      char                            prdf;
      char                            ttlf;
      char                            ttf;
      char                            user_fld1_file_map;
      char                            user_fld2_file_map;
      char                            user_fld3_file_map;
      char                            svhf;
      char                            user_fld1f;
      char                            user_fld1g;
      char                            user_fld4_file_map;
      char                            user_fld5_file_map;
      char                            user_fld6_file_map;
      char                            user_fld7_file_map;
      char                            user_fld8_file_map;
      char                            user_fld9_file_map;
      char                            user_fld10_file_map;
      char                            mbf;
      char                            hmbf;
      char                            ulf;
      char                            user_fld1h;
      char                            user_fld1i;
      char                            user_fld1j;
      char                            user_fld1k;
      char                            hsf;
      char                            user_fld1l;
      char                            user_fld1m;
      char                            user_fld1n;
      char                            user_fld1o;
      char                            user_fld11_file_map;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } svhf_strt_dat;
      char                            svhf_strt_tim[4];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } svhf_end_dat;
      char                            svhf_end_tim[4];
      char                            user_fld2[72];
   } file_map;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_run_dat;
   char                            numeric_fld_frmt;
   struct
   {
      short                           file_day_ofst;
      char                            fiid[4];
      char                            rpt_name[35];
      char                            rpt_extract;
      char                            extr_frmt[2];
   } ilfx;
   struct
   {
      short                           file_day_ofst_beg;
      short                           file_day_ofst_end;
      char                            rpt_name[35];
      char                            user_fld5;
   } omfx;
   struct
   {
      short                           dpc_num;
      char                            cutover_flg;
      char                            hi_name[16];
      struct
      {
         char                            name[4];
      } prod_name;
      char                            user_fld3;
   } safx;
   struct
   {
      __int32_t                       pri_ext;
      short                           file_cde;
      __int32_t                       secondary_ext;
      short                           max_ext;
      char                            part1_name[8];
      __int32_t                       part1_pri_ext;
      __int32_t                       part1_secondary_ext;
      char                            part2_name[8];
      __int32_t                       part2_pri_ext;
      __int32_t                       part2_secondary_ext;
      char                            part3_name[8];
      __int32_t                       part3_pri_ext;
      __int32_t                       part3_secondary_ext;
      char                            part4_name[8];
      __int32_t                       part4_pri_ext;
      __int32_t                       part4_secondary_ext;
   } file_conf;
   char                            vol_id[6];
   char                            retention[2];
   char                            data_set_id[17];
   char                            mount_msg[25];
   char                            density[4];
   char                            file_frmt;
   char                            file_buffered;
   char                            read_past_initial_eof;
   char                            user_fld4[27];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      char                            flg;
      char                            grp[4];
   } uaf_cleanup;
   char                            user_fld_aci[45];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
} ecfbase_def;
#define ecfbase_def_Size 698
#pragma section atmecf
/* Definition ATMECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmecf
typedef struct __atmecf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rel_num[2];
   struct
   {
      short                           file_day_ofst;
      char                            grp[4];
      char                            term_ln[4];
      char                            tran_type;
      char                            user_field1;
      char                            extr_frmt[2];
   } tlf;
   struct
   {
      short                           file_day_ofst;
   } hsf;
   char                            user_fld11[8];
} atmecf_def;
#define atmecf_def_Size 34
#pragma section posecf
/* Definition POSECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __posecf
typedef struct __posecf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rel_num[2];
   struct
   {
      short                           file_day_ofst;
      char                            grp[4];
      char                            term_ln[4];
      char                            tran_type;
      char                            user_field2;
      char                            rpt_name[35];
      char                            extr_frmt[2];
      char                            user_fld6;
   } ptlf;
   char                            user_fld12[50];
} posecf_def;
#define posecf_def_Size 110
#pragma section tlrecf
/* Definition TLRECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlrecf
typedef struct __tlrecf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rel_num[2];
   struct
   {
      short                           file_day_ofst;
      char                            grp[4];
      char                            extr_frmt[2];
   } ttlf;
   struct
   {
      char                            fiid[4];
   } ttf;
   char                            user_fld13[10];
} tlrecf_def;
#define tlrecf_def_Size 32
#pragma section fhmecf
/* Definition FHMECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __fhmecf
typedef struct __fhmecf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rel_num[2];
   struct
   {
      short                           file_day_ofst;
      char                            grp[4];
   } ulf;
   char                            user_fld14[50];
} fhmecf_def;
#define fhmecf_def_Size 66
#pragma section maecf
/* Definition MAECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __maecf
typedef struct __maecf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rel_num[2];
   char                            vol_nam[8];
   char                            subvol_nam[8];
   struct
   {
      char                            grp[4];
      short                           file_day_ofst;
      char                            expr_tim[4];
   } hmbf;
   struct
   {
      char                            grp[4];
      short                           file_day_ofst;
      char                            expr_tim[4];
   } mbf;
   char                            user_fld15[50];
} maecf_def;
#define maecf_def_Size 96
#pragma section tbecf
/* Definition TBECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tbecf
typedef struct __tbecf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rel_num[2];
   struct
   {
      short                           file_day_ofst;
      char                            grp[4];
      char                            user_fld[2];
   } tlf;
} tbecf_def;
#define tbecf_def_Size 18
#pragma section ecf
/* Record ECF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ecf
typedef struct __ecf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         char                            tag[10];
      } prikey;
      struct
      {
         char                            sym_name[16];
      } altkey;
      char                            rel_num[2];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } extract_dat;
      char                            extract_tim[4];
      char                            restrt_flg;
      char                            tape_name[35];
      char                            tape_label[3];
      char                            char_set;
      __int32_t                       tape_blk_size;
      char                            base_rpt_nam[35];
      struct
      {
         char                            ilf;
         char                            om;
         char                            saf;
         char                            icf;
         char                            idf;
         char                            tlf;
         char                            itlf;
         char                            icfe;
         char                            user_fld1c;
         char                            user_fld1d;
         char                            ptlf;
         char                            prdf;
         char                            ttlf;
         char                            ttf;
         char                            user_fld1_file_map;
         char                            user_fld2_file_map;
         char                            user_fld3_file_map;
         char                            svhf;
         char                            user_fld1f;
         char                            user_fld1g;
         char                            user_fld4_file_map;
         char                            user_fld5_file_map;
         char                            user_fld6_file_map;
         char                            user_fld7_file_map;
         char                            user_fld8_file_map;
         char                            user_fld9_file_map;
         char                            user_fld10_file_map;
         char                            mbf;
         char                            hmbf;
         char                            ulf;
         char                            user_fld1h;
         char                            user_fld1i;
         char                            user_fld1j;
         char                            user_fld1k;
         char                            hsf;
         char                            user_fld1l;
         char                            user_fld1m;
         char                            user_fld1n;
         char                            user_fld1o;
         char                            user_fld11_file_map;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } svhf_strt_dat;
         char                            svhf_strt_tim[4];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } svhf_end_dat;
         char                            svhf_end_tim[4];
         char                            user_fld2[72];
      } file_map;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_run_dat;
      char                            numeric_fld_frmt;
      struct
      {
         short                           file_day_ofst;
         char                            fiid[4];
         char                            rpt_name[35];
         char                            rpt_extract;
         char                            extr_frmt[2];
      } ilfx;
      struct
      {
         short                           file_day_ofst_beg;
         short                           file_day_ofst_end;
         char                            rpt_name[35];
         char                            user_fld5;
      } omfx;
      struct
      {
         short                           dpc_num;
         char                            cutover_flg;
         char                            hi_name[16];
         struct
         {
            char                            name[4];
         } prod_name;
         char                            user_fld3;
      } safx;
      struct
      {
         __int32_t                       pri_ext;
         short                           file_cde;
         __int32_t                       secondary_ext;
         short                           max_ext;
         char                            part1_name[8];
         __int32_t                       part1_pri_ext;
         __int32_t                       part1_secondary_ext;
         char                            part2_name[8];
         __int32_t                       part2_pri_ext;
         __int32_t                       part2_secondary_ext;
         char                            part3_name[8];
         __int32_t                       part3_pri_ext;
         __int32_t                       part3_secondary_ext;
         char                            part4_name[8];
         __int32_t                       part4_pri_ext;
         __int32_t                       part4_secondary_ext;
      } file_conf;
      char                            vol_id[6];
      char                            retention[2];
      char                            data_set_id[17];
      char                            mount_msg[25];
      char                            density[4];
      char                            file_frmt;
      char                            file_buffered;
      char                            read_past_initial_eof;
      char                            user_fld4[27];
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      struct
      {
         char                            flg;
         char                            grp[4];
      } uaf_cleanup;
      char                            user_fld_aci[45];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rel_num[2];
      struct
      {
         short                           file_day_ofst;
         char                            grp[4];
         char                            term_ln[4];
         char                            tran_type;
         char                            user_field1;
         char                            extr_frmt[2];
      } tlf;
      struct
      {
         short                           file_day_ofst;
      } hsf;
      char                            user_fld11[8];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rel_num[2];
      struct
      {
         short                           file_day_ofst;
         char                            grp[4];
         char                            term_ln[4];
         char                            tran_type;
         char                            user_field2;
         char                            rpt_name[35];
         char                            extr_frmt[2];
         char                            user_fld6;
      } ptlf;
      char                            user_fld12[50];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rel_num[2];
      struct
      {
         short                           file_day_ofst;
         char                            grp[4];
         char                            extr_frmt[2];
      } ttlf;
      struct
      {
         char                            fiid[4];
      } ttf;
      char                            user_fld13[10];
   } seg3;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rel_num[2];
      struct
      {
         short                           file_day_ofst;
         char                            grp[4];
      } ulf;
      char                            user_fld14[50];
   } seg8;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rel_num[2];
      char                            vol_nam[8];
      char                            subvol_nam[8];
      struct
      {
         char                            grp[4];
         short                           file_day_ofst;
         char                            expr_tim[4];
      } hmbf;
      struct
      {
         char                            grp[4];
         short                           file_day_ofst;
         char                            expr_tim[4];
      } mbf;
      char                            user_fld15[50];
   } seg11;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rel_num[2];
      struct
      {
         short                           file_day_ofst;
         char                            grp[4];
         char                            user_fld[2];
      } tlf;
   } seg14;
} ecf_def;
#define ecf_def_Size 1054
#pragma section emf
/* Record EMF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __emf
typedef struct __emf
{
   struct
   {
      char                            interface_typ[4];
      short                           dpc_num;
      char                            pro_name[16];
      char                            prod_num[2];
      char                            msg_typ[4];
      char                            in_out_ind;
      char                            user_fld1;
   } prikey;
   char                            fld_map[128];
   char                            mac_fld_map[128];
   unsigned short                  num_tran_cde;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            tkn_grp[4];
   char                            full_msg_mac;
   char                            user_fld2;
   struct
   {
      char                            b24_tran_cde[6];
      char                            ims_tran_cde[9];
      char                            ims_tran_cde_lgth;
   } tran_cde_tbl[150];
} emf_def;
#define emf_def_Size 2712
#pragma section erf_prikey
/* Definition ERF-PRIKEY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __erf_prikey
typedef struct __erf_prikey
{
   char                            base_crncy_cde[3];
   char                            to_crncy_cde[3];
} erf_prikey_def;
#define erf_prikey_def_Size 6
#pragma section erf
/* Record ERF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __erf
typedef struct __erf
{
   struct
   {
      char                            base_crncy_cde[3];
      char                            to_crncy_cde[3];
   } prikey;
   char                            eff_date[8];
   char                            to_conv_rate[8];
   char                            comments[20];
   char                            user_fld1[20];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            user_fld_aci[50];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
} erf_def;
#define erf_def_Size 230
#pragma section hcfbase
/* Definition HCFBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __hcfbase
typedef struct __hcfbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      short                           dpc_num;
      char                            hisf_pro[16];
   } prikey;
   char                            proto_typ[2];
   char                            data_prefix_chars[18];
   struct
   {
      __int32_t                       nmm;
      __int32_t                       xnmm;
      __int32_t                       saf;
      __int32_t                       wft;
      __int32_t                       performance;
   } timer_lmts;
   struct
   {
      char                            saf_method;
      char                            dpc_typ;
      char                            ack_to_dpc;
      char                            ack_from_dpc;
      short                           max_timeouts;
      short                           nmm_enabled;
      short                           max_saf_retry;
   } processing_flg;
   struct
   {
      char                            sta_sym_name[16];
      char                            sta_typ;
      char                            user_fld1[4];
   } sta[32];
   struct
   {
      short                           outbound;
      short                           inbound;
   } max_out_rqst;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            msg_seq_flg;
   char                            tim_disc_chk;
   short                           max_out_saf;
   char                            tkn_grp[4];
   char                            msg_format[2];
   char                            rel_ind[2];
   char                            csm_genera_aprov_cde;
   char                            csm_borra_disc;
   char                            csm_gre_func;
   char                            user_fld2[5];
} hcfbase_def;
#define hcfbase_def_Size 788
#pragma section atmhcf
/* Definition ATMHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmhcf
typedef struct __atmhcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            msg_format[2];
   char                            auth_pro[16];
   struct
   {
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
      __int32_t                       queue_sub;
   } timer_lmts;
   char                            rel_ind[2];
} atmhcf_def;
#define atmhcf_def_Size 48
#pragma section poshcf
/* Definition POSHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __poshcf
typedef struct __poshcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            msg_format[2];
   short                           psem_typ;
   char                            auth_pro[16];
   char                            allowed_srvcs[30][2];
   char                            rfrl_phone[20];
   short                           pre_auth_hld;
   __int32_t                       pre_auth_amt_dft;
   short                           apprv_cde_lgth;
   struct
   {
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
      __int32_t                       queue_sub;
   } timer_lmts;
   char                            adj_flg;
   char                            rel_ind[2];
   char                            user_fld1[17];
} poshcf_def;
#define poshcf_def_Size 156
#pragma section tlrhcf
/* Definition TLRHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlrhcf
typedef struct __tlrhcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            msg_format[2];
   char                            auth_pro[16];
   struct
   {
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
      __int32_t                       queue_sub;
   } timer_lmts;
   char                            rel_ind[2];
   char                            user_fld1[18];
} tlrhcf_def;
#define tlrhcf_def_Size 66
#pragma section fhmhcf
/* Definition FHMHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __fhmhcf
typedef struct __fhmhcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            msg_format[2];
   char                            pro_name[16];
   char                            user_fld1[20];
} fhmhcf_def;
#define fhmhcf_def_Size 46
#pragma section mailhcf
/* Definition MAILHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __mailhcf
typedef struct __mailhcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            msg_format[2];
   struct
   {
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
      __int32_t                       queue_sub;
   } timer_lmts;
   char                            rel_ind[2];
   char                            user_fld1[18];
} mailhcf_def;
#define mailhcf_def_Size 50
#pragma section tbhcf
/* Definition TBHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tbhcf
typedef struct __tbhcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            msg_format[2];
   char                            auth_pro[16];
   struct
   {
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
      __int32_t                       queue_sub;
   } timer_lmts;
   char                            rel_ind[2];
   char                            discrd_non_fncl_rvsl;
   char                            user_fld1;
   short                           apprv_cde_lgth;
   char                            dflt_term_id[16];
   union
   {
      struct
      {
         short                           last_txn;
         short                           cust_vndr_inq;
         short                           sched_pmnt_inq;
         short                           sched_xfer_inq;
         short                           last_pmnt_inq;
         short                           acct_list_inq;
         short                           txn7;
         short                           txn8;
         short                           txn9;
         short                           txn10;
      } txn_cnt;
      short                           txn_alwd_cnt[10];
   } u_txn_cnt;
} tbhcf_def;
#define tbhcf_def_Size 88
#pragma section ssbbhcf
/* Definition SSBBHCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbbhcf
typedef struct __ssbbhcf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            stmt_prnt_alt_rte;
   char                            user_fld[9];
} ssbbhcf_def;
#define ssbbhcf_def_Size 18
#pragma section hcf
/* Record HCF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __hcf
typedef struct __hcf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         short                           dpc_num;
         char                            hisf_pro[16];
      } prikey;
      char                            proto_typ[2];
      char                            data_prefix_chars[18];
      struct
      {
         __int32_t                       nmm;
         __int32_t                       xnmm;
         __int32_t                       saf;
         __int32_t                       wft;
         __int32_t                       performance;
      } timer_lmts;
      struct
      {
         char                            saf_method;
         char                            dpc_typ;
         char                            ack_to_dpc;
         char                            ack_from_dpc;
         short                           max_timeouts;
         short                           nmm_enabled;
         short                           max_saf_retry;
      } processing_flg;
      struct
      {
         char                            sta_sym_name[16];
         char                            sta_typ;
         char                            user_fld1[4];
      } sta[32];
      struct
      {
         short                           outbound;
         short                           inbound;
      } max_out_rqst;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      char                            msg_seq_flg;
      char                            tim_disc_chk;
      short                           max_out_saf;
      char                            tkn_grp[4];
      char                            msg_format[2];
      char                            rel_ind[2];
      char                            csm_genera_aprov_cde;
      char                            csm_borra_disc;
      char                            csm_gre_func;
      char                            user_fld2[5];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            msg_format[2];
      char                            auth_pro[16];
      struct
      {
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
         __int32_t                       queue_sub;
      } timer_lmts;
      char                            rel_ind[2];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            msg_format[2];
      short                           psem_typ;
      char                            auth_pro[16];
      char                            allowed_srvcs[30][2];
      char                            rfrl_phone[20];
      short                           pre_auth_hld;
      __int32_t                       pre_auth_amt_dft;
      short                           apprv_cde_lgth;
      struct
      {
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
         __int32_t                       queue_sub;
      } timer_lmts;
      char                            adj_flg;
      char                            rel_ind[2];
      char                            user_fld1[17];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            msg_format[2];
      char                            auth_pro[16];
      struct
      {
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
         __int32_t                       queue_sub;
      } timer_lmts;
      char                            rel_ind[2];
      char                            user_fld1[18];
   } seg3;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            msg_format[2];
      char                            pro_name[16];
      char                            user_fld1[20];
   } seg8;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            msg_format[2];
      struct
      {
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
         __int32_t                       queue_sub;
      } timer_lmts;
      char                            rel_ind[2];
      char                            user_fld1[18];
   } seg11;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            msg_format[2];
      char                            auth_pro[16];
      struct
      {
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
         __int32_t                       queue_sub;
      } timer_lmts;
      char                            rel_ind[2];
      char                            discrd_non_fncl_rvsl;
      char                            user_fld1;
      short                           apprv_cde_lgth;
      char                            dflt_term_id[16];
      union
      {
         struct
         {
            short                           last_txn;
            short                           cust_vndr_inq;
            short                           sched_pmnt_inq;
            short                           sched_xfer_inq;
            short                           last_pmnt_inq;
            short                           acct_list_inq;
            short                           txn7;
            short                           txn8;
            short                           txn9;
            short                           txn10;
         } txn_cnt;
         short                           txn_alwd_cnt[10];
      } u_txn_cnt;
   } seg14;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            stmt_prnt_alt_rte;
      char                            user_fld[9];
   } seg17;
} hcf_def;
#define hcf_def_Size 1260
#pragma section idfbase
/* Definition IDFBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __idfbase
typedef struct __idfbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   char                            fiid[4];
   char                            refr_grp[4];
   union
   {
      char                            altkey[11];
      char                            inst_id_num[11];
   } u_altkey;
   char                            fi_name[22];
   char                            fi_st[2];
   char                            fi_cnty[3];
   char                            fi_cntry[3];
   char                            fi_phone[20];
   char                            crncy_cde[3];
   char                            neg_name[35];
   char                            uaf_name[35];
   char                            caf_name[35];
   char                            pbf1_name[35];
   char                            pbf2_name[35];
   char                            pbf3_name[35];
   char                            pbf4_name[35];
   char                            prdf_name[35];
   char                            user_fld14;
   char                            shrg_grp[24];
   char                            crd_stat_chk;
   char                            exp_dat_chk;
   char                            pin_chk;
   char                            pin_vrfy_typ[2];
   char                            pin_ofst_loc;
   char                            algo_num_loc;
   char                            crd_hld_selct;
   char                            pin_tries_reset_option;
   short                           max_pin_try;
   char                            bad_pin_disp;
   char                            exp_chk_disp;
   char                            lmt_chk;
   char                            fld_cutover;
   char                            host_adj_processing[2];
   short                           prd_lgth;
   char                            wrk_day;
   char                            user_fld1;
   struct
   {
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } dat;
   } hol[20];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } beg_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } nxt_beg_dat;
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            other_acct_typ;
   struct
   {
      char                            caf1;
      char                            pbf1;
      char                            pbf2;
      char                            pbf3;
      char                            pbf4;
   } refr_ind;
   char                            alt_pbf4_name[35];
   char                            user_fld3c;
   union
   {
      __int32_t                       fiid_seg_map;
      short                           fiid_seg_map_r[2];
   } u_fiid_seg_map;
   short                           fiid_seg_map_ext[14];
   char                            spf_name[35];
   char                            persistent_uaf;
   char                            user_fld3[78];
   char                            user_fld_aci[50];
   char                            user_fld_regn[50];
   char                            csm_msg_promo;
   char                            user_fld_cust[49];
   char                            csm_extr_grp[4];
   char                            csm_rech_dolar;
   char                            csm_rech_bono;
   short                           csm_algo_check_saldo;
   short                           csm_algo_impacto_saldo;
   short                           csm_max_cuo_s_arg;
   short                           csm_max_cuo_uss_arg;
   short                           csm_max_cuo_s_ury;
   short                           csm_max_cuo_uss_ury;
   short                           csm_pur_cashback;
   short                           csm_propina;
   char                            csm_chk_cuo_arg;
   char                            csm_chk_cuo_ury;
   char                            csm_chk_comercio;
   char                            csm_ing_manual;
   char                            csm_card_no_chk;
   char                            csm_nro_cta_ticket;
} idfbase_def;
#define idfbase_def_Size 930
#pragma section atmidf
/* Definition ATMIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmidf
typedef struct __atmidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            host_pin_change_opt;
   char                            cust_bal_info;
   char                            cust_bal_dspy;
   char                            host_b24_bal;
   char                            fast_cash_acct[2];
   short                           atm_bal_and_cutover_strt;
   short                           atm_bal_and_cutover_end;
   char                            term_bal_flg;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } rpt_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } nxt_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cus_bus_dat;
   char                            host_logonly_opt;
   char                            tkn_retrv_opt;
   char                            user_fld3d;
   char                            dep_setl_imp_flg;
   char                            stmt_prnt_online;
   char                            user_fld3b[2];
   struct
   {
      short                           pri_dpc;
      char                            sym_name[16];
      char                            acct_typ[2];
      char                            prefix_rte;
      char                            auth_typ;
      char                            auth_lvl;
      char                            user_fld4;
   } rt_tbl[5];
   short                           log_rt_cde;
   char                            acq_txn_prfl[16];
   char                            iss_txn_prfl[16];
   char                            user_fld5[48];
} atmidf_def;
#define atmidf_def_Size 252
#pragma section posidf
/* Definition POSIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __posidf
typedef struct __posidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            compl_req[10];
   short                           bal_and_cutover_strt;
   short                           bal_and_cutover_end;
   struct
   {
      char                            prnt_loc[16];
      char                            rpt_creation_flg;
      char                            periodic_file_ret[3];
   } crd_act_rpt;
   struct
   {
      char                            prnt_loc[16];
   } merchant_setl_rpt;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } rpt_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } nxt_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cus_bus_dat;
   char                            chf_name[35];
   char                            user_fld6[49];
   short                           log_rt_cde;
   struct
   {
      short                           pri_dpc;
      char                            sym_name[16];
      char                            acct_typ[2];
      char                            prefix_routing;
      char                            auth_typ;
      char                            auth_lvl;
      char                            pre_auth_hlds_lvl;
   } rt_tbl[9];
   char                            adj_flg;
   char                            rfrl_phone[20];
   char                            user_fld8[4];
   char                            tkn_retrv_opt;
   char                            acq_txn_prfl[16];
   char                            iss_txn_prfl[16];
   char                            admin_txn_prfl[16];
   char                            rtlr_txn_prfl[16];
} posidf_def;
#define posidf_def_Size 474
#pragma section tlridf
/* Definition TLRIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlridf
typedef struct __tlridf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            whff_name[35];
   char                            nbf_name[35];
   char                            nbf_update_flg;
   char                            spf_refr_ind;
   char                            whff_refr_ind;
   char                            nbf_refr_ind;
   struct
   {
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } dat;
   } hol[20];
   short                           strt_cutover;
   short                           end_cutover;
   char                            fi_cut;
   char                            wrk_day;
   short                           log_rte_cde;
   struct
   {
      short                           dpc_num;
      char                            hi_name[16];
      char                            acct_typ[2];
      char                            user_fld10[4];
   } rte_tbl[5];
   struct
   {
      struct
      {
         char                            cust_class;
         char                            user_fld11[2];
         char                            percent_dep[3];
         long long                       max_cr;
         short                           max_num_dep;
         long long                       max_cash_out;
      } cc_tbl[10];
      char                            cash_in_ind;
      char                            cash_out_ind;
      char                            rttf_rpt_ind;
      char                            rttb_rpt_ind;
      char                            dda_cur;
      char                            sav_cur;
      char                            ccd_cur;
      char                            spf_cur;
      char                            nbf_cur;
      char                            whff_cur;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cur_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } nxt_bus_dat;
      char                            user_fld12[7];
   } tlr;
   char                            orf_profile[8];
   char                            interbnk_rtg;
   char                            bnk_relnshp[24];
   char                            crd_acct_select_ind;
   char                            user_fld13[17];
} tlridf_def;
#define tlridf_def_Size 650
#pragma section mailidf
/* Definition MAILIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __mailidf
typedef struct __mailidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           dpc;
   short                           num_days;
   short                           expire_tim;
   char                            typ_resp;
   char                            sym_name[16];
   char                            user_fld11a[21];
} mailidf_def;
#define mailidf_def_Size 52
#pragma section tbidf
/* Definition TBIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tbidf
typedef struct __tbidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            rte_prfl[8];
   char                            csi_pin_req;
   char                            csi_pin_chng_alwd;
   char                            pin_vrfy_grp[8];
   struct
   {
      char                            info;
      char                            user_fld1;
   } bal_opt;
   char                            mas_dspy_opt;
   char                            discrd_non_fncl_rvsl;
   char                            xfer_usg_ind;
   char                            prd_wrk_day;
   short                           usg_prd_lgth;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_prd_beg_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } nxt_prd_beg_dat;
   short                           cyc_prd_lgth;
   char                            cyc_wrk_day;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_cyc_beg_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } nxt_cyc_beg_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } rpt_bus_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_bus_dat;
   char                            user_fld2;
   short                           cutover_end;
   __int32_t                       rpt_map;
   short                           prd_file_retn;
} tbidf_def;
#define tbidf_def_Size 82
#pragma section crlineidf
/* Definition CRLINEIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __crlineidf
typedef struct __crlineidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            cr_xfer_method;
   char                            db_xfer_method;
   long long                       cr_incr_amt;
   long long                       db_incr_amt;
} crlineidf_def;
#define crlineidf_def_Size 26
#pragma section ssbcidf
/* Definition SSBCIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbcidf
typedef struct __ssbcidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            spf_chk;
   char                            csf_chk;
   char                            ccf_chk;
   char                            chk_disp;
} ssbcidf_def;
#define ssbcidf_def_Size 12
#pragma section smidf
/* Definition SMIDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __smidf
typedef struct __smidf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            sm_sec;
   char                            dexp_chk;
   char                            compl_req;
   char                            capture_on_max_pin_tries;
   char                            capture_on_lost_stolen;
   char                            last_msg_wrt_opt;
   char                            user_fld[8];
} smidf_def;
#define smidf_def_Size 22
#pragma section idf
/* Record IDF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __idf
typedef struct __idf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      char                            fiid[4];
      char                            refr_grp[4];
      union
      {
         char                            altkey[11];
         char                            inst_id_num[11];
      } u_altkey;
      char                            fi_name[22];
      char                            fi_st[2];
      char                            fi_cnty[3];
      char                            fi_cntry[3];
      char                            fi_phone[20];
      char                            crncy_cde[3];
      char                            neg_name[35];
      char                            uaf_name[35];
      char                            caf_name[35];
      char                            pbf1_name[35];
      char                            pbf2_name[35];
      char                            pbf3_name[35];
      char                            pbf4_name[35];
      char                            prdf_name[35];
      char                            user_fld14;
      char                            shrg_grp[24];
      char                            crd_stat_chk;
      char                            exp_dat_chk;
      char                            pin_chk;
      char                            pin_vrfy_typ[2];
      char                            pin_ofst_loc;
      char                            algo_num_loc;
      char                            crd_hld_selct;
      char                            pin_tries_reset_option;
      short                           max_pin_try;
      char                            bad_pin_disp;
      char                            exp_chk_disp;
      char                            lmt_chk;
      char                            fld_cutover;
      char                            host_adj_processing[2];
      short                           prd_lgth;
      char                            wrk_day;
      char                            user_fld1;
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } dat;
      } hol[20];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } beg_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } nxt_beg_dat;
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      char                            other_acct_typ;
      struct
      {
         char                            caf1;
         char                            pbf1;
         char                            pbf2;
         char                            pbf3;
         char                            pbf4;
      } refr_ind;
      char                            alt_pbf4_name[35];
      char                            user_fld3c;
      union
      {
         __int32_t                       fiid_seg_map;
         short                           fiid_seg_map_r[2];
      } u_fiid_seg_map;
      short                           fiid_seg_map_ext[14];
      char                            spf_name[35];
      char                            persistent_uaf;
      char                            user_fld3[78];
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            csm_msg_promo;
      char                            user_fld_cust[49];
      char                            csm_extr_grp[4];
      char                            csm_rech_dolar;
      char                            csm_rech_bono;
      short                           csm_algo_check_saldo;
      short                           csm_algo_impacto_saldo;
      short                           csm_max_cuo_s_arg;
      short                           csm_max_cuo_uss_arg;
      short                           csm_max_cuo_s_ury;
      short                           csm_max_cuo_uss_ury;
      short                           csm_pur_cashback;
      short                           csm_propina;
      char                            csm_chk_cuo_arg;
      char                            csm_chk_cuo_ury;
      char                            csm_chk_comercio;
      char                            csm_ing_manual;
      char                            csm_card_no_chk;
      char                            csm_nro_cta_ticket;
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            host_pin_change_opt;
      char                            cust_bal_info;
      char                            cust_bal_dspy;
      char                            host_b24_bal;
      char                            fast_cash_acct[2];
      short                           atm_bal_and_cutover_strt;
      short                           atm_bal_and_cutover_end;
      char                            term_bal_flg;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } rpt_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cur_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } nxt_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cus_bus_dat;
      char                            host_logonly_opt;
      char                            tkn_retrv_opt;
      char                            user_fld3d;
      char                            dep_setl_imp_flg;
      char                            stmt_prnt_online;
      char                            user_fld3b[2];
      struct
      {
         short                           pri_dpc;
         char                            sym_name[16];
         char                            acct_typ[2];
         char                            prefix_rte;
         char                            auth_typ;
         char                            auth_lvl;
         char                            user_fld4;
      } rt_tbl[5];
      short                           log_rt_cde;
      char                            acq_txn_prfl[16];
      char                            iss_txn_prfl[16];
      char                            user_fld5[48];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            compl_req[10];
      short                           bal_and_cutover_strt;
      short                           bal_and_cutover_end;
      struct
      {
         char                            prnt_loc[16];
         char                            rpt_creation_flg;
         char                            periodic_file_ret[3];
      } crd_act_rpt;
      struct
      {
         char                            prnt_loc[16];
      } merchant_setl_rpt;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } rpt_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cur_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } nxt_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cus_bus_dat;
      char                            chf_name[35];
      char                            user_fld6[49];
      short                           log_rt_cde;
      struct
      {
         short                           pri_dpc;
         char                            sym_name[16];
         char                            acct_typ[2];
         char                            prefix_routing;
         char                            auth_typ;
         char                            auth_lvl;
         char                            pre_auth_hlds_lvl;
      } rt_tbl[9];
      char                            adj_flg;
      char                            rfrl_phone[20];
      char                            user_fld8[4];
      char                            tkn_retrv_opt;
      char                            acq_txn_prfl[16];
      char                            iss_txn_prfl[16];
      char                            admin_txn_prfl[16];
      char                            rtlr_txn_prfl[16];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            whff_name[35];
      char                            nbf_name[35];
      char                            nbf_update_flg;
      char                            spf_refr_ind;
      char                            whff_refr_ind;
      char                            nbf_refr_ind;
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } dat;
      } hol[20];
      short                           strt_cutover;
      short                           end_cutover;
      char                            fi_cut;
      char                            wrk_day;
      short                           log_rte_cde;
      struct
      {
         short                           dpc_num;
         char                            hi_name[16];
         char                            acct_typ[2];
         char                            user_fld10[4];
      } rte_tbl[5];
      struct
      {
         struct
         {
            char                            cust_class;
            char                            user_fld11[2];
            char                            percent_dep[3];
            long long                       max_cr;
            short                           max_num_dep;
            long long                       max_cash_out;
         } cc_tbl[10];
         char                            cash_in_ind;
         char                            cash_out_ind;
         char                            rttf_rpt_ind;
         char                            rttb_rpt_ind;
         char                            dda_cur;
         char                            sav_cur;
         char                            ccd_cur;
         char                            spf_cur;
         char                            nbf_cur;
         char                            whff_cur;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } cur_bus_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } nxt_bus_dat;
         char                            user_fld12[7];
      } tlr;
      char                            orf_profile[8];
      char                            interbnk_rtg;
      char                            bnk_relnshp[24];
      char                            crd_acct_select_ind;
      char                            user_fld13[17];
   } seg3;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           dpc;
      short                           num_days;
      short                           expire_tim;
      char                            typ_resp;
      char                            sym_name[16];
      char                            user_fld11a[21];
   } seg11;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            rte_prfl[8];
      char                            csi_pin_req;
      char                            csi_pin_chng_alwd;
      char                            pin_vrfy_grp[8];
      struct
      {
         char                            info;
         char                            user_fld1;
      } bal_opt;
      char                            mas_dspy_opt;
      char                            discrd_non_fncl_rvsl;
      char                            xfer_usg_ind;
      char                            prd_wrk_day;
      short                           usg_prd_lgth;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cur_prd_beg_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } nxt_prd_beg_dat;
      short                           cyc_prd_lgth;
      char                            cyc_wrk_day;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cur_cyc_beg_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } nxt_cyc_beg_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } rpt_bus_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cur_bus_dat;
      char                            user_fld2;
      short                           cutover_end;
      __int32_t                       rpt_map;
      short                           prd_file_retn;
   } seg14;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            cr_xfer_method;
      char                            db_xfer_method;
      long long                       cr_incr_amt;
      long long                       db_incr_amt;
   } seg15;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            spf_chk;
      char                            csf_chk;
      char                            ccf_chk;
      char                            chk_disp;
   } seg18;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            sm_sec;
      char                            dexp_chk;
      char                            compl_req;
      char                            capture_on_max_pin_tries;
      char                            capture_on_lost_stolen;
      char                            last_msg_wrt_opt;
      char                            user_fld[8];
   } seg20;
} idf_def;
#define idf_def_Size 2500
#pragma section icfbase
/* Definition ICFBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __icfbase
typedef struct __icfbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      char                            fiid[4];
      char                            swi_pro[16];
   } prikey;
   char                            ln[4];
   char                            swi_typ[4];
   char                            inst_id[15];
   char                            swi_id[15];
   char                            dflt_term_num[16];
   char                            dflt_acq_id_num[11];
   char                            rptg_name[20];
   char                            swi_descr;
   char                            sic_cde[4];
   char                            crncy_cde[3];
   char                            cust_bal_display;
   struct
   {
      short                           setl_hh;
      short                           setl_mm;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } hol_dat[16];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } post_dat;
      char                            setl_days;
      char                            user_fld1;
   } swi_setl;
   char                            rpt_pri[3];
   char                            rpt_cpu[2];
   char                            ilf_extract_num;
   struct
   {
      char                            sta1[16];
      char                            sta2[16];
   } sta_conf;
   struct
   {
      __int32_t                       nmm;
      __int32_t                       xnmm;
      __int32_t                       wft;
      __int32_t                       performance;
   } timer_lmts;
   struct
   {
      short                           as_acq;
      short                           as_iss;
      char                            processing_mode;
      char                            filler_0;
      short                           auto_signon_on_strt;
      short                           max_timeouts;
      struct
      {
         short                           outbound;
         short                           inbound;
      } max_out_rqst;
      short                           max_saf_retry;
      short                           ack_to_swi;
      short                           ack_from_swi;
   } processing_options;
   char                            user_fld2[2];
   short                           nmm_enabled;
   struct
   {
      union
      {
         char                            fnames[24];
         short                           fname[12];
      } u_fnames;
   } suspense[9];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   short                           csm_can_cuota;
   char                            csm_chk_cuota;
   char                            csm_chk_comercio;
   char                            csm_chk_dolar;
   char                            csm_chk_ingreso;
} icfbase_def;
#define icfbase_def_Size 546
#pragma section atmicf
/* Definition ATMICF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmicf
typedef struct __atmicf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            auth_pro[16];
   char                            shrg_grp[24];
   struct
   {
      char                            wdl;
      char                            wdl_cca;
      char                            dep;
      char                            inq;
      char                            xfer;
      char                            electronic_pmnt;
      char                            pmnt_enclosed;
      char                            cash_chk;
      char                            msg_to_inst;
      char                            pin_change;
      char                            split_deposit;
      char                            load_value;
      char                            filler_0[4];
   } not_on_us;
   struct
   {
      char                            wdl;
      char                            wdl_ccd;
      char                            dep;
      char                            inq;
      char                            xfer;
      char                            electronic_pmnt;
      char                            pmnt_enclosed;
      char                            cash_chk;
      char                            msg_to_inst;
      char                            pin_change;
      char                            split_deposit;
      char                            load_value;
      char                            filler_1[4];
   } trans_allowed;
   struct
   {
      __int32_t                       isaf;
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
   } timer_lmts;
   char                            dflt_rtg_grp[11];
   char                            user_fld3;
} atmicf_def;
#define atmicf_def_Size 112
#pragma section posicf
/* Definition POSICF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __posicf
typedef struct __posicf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            auth_pro[16];
   char                            allowed_srvcs[30][2];
   char                            timeout_flg;
   struct
   {
      char                            purchase;
      char                            pre_auth;
      char                            pre_auth_compl;
      char                            mail_phone;
      char                            merc_return;
      char                            cash_adv;
      char                            crd_verify;
      char                            bal_inq;
      char                            pur_cash_back;
      char                            check_verify;
      char                            check_guar;
      char                            adj_pur;
      char                            adj_pur_cash_back;
      char                            adj_merch_rtn;
      char                            adj_cash_adv;
      char                            adj_amt2_grtr_amt1;
      char                            sales_draft;
      char                            represent;
      char                            chargeback;
      char                            filler_0[3];
   } trans_allowed;
   char                            rfrl_phone[20];
   char                            user_fld4;
   short                           pre_auth_hld;
   __int32_t                       pre_auth_amt_dft;
   short                           apprv_cde_lgth;
   struct
   {
      __int32_t                       isaf;
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
   } timer_lmts;
   char                            dflt_retail_id[19];
   char                            setl_entity;
   char                            user_fld5[8];
} posicf_def;
#define posicf_def_Size 184
#pragma section afsicf
/* Definition AFSICF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __afsicf
typedef struct __afsicf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            auth_pro[16];
   char                            allowed_srvcs[30][2];
   char                            timeout_flg;
   struct
   {
      char                            purchase;
      char                            pre_auth;
      char                            pre_auth_compl;
      char                            mail_phone;
      char                            merc_return;
      char                            cash_adv;
      char                            crd_verify;
      char                            bal_inq;
      char                            pur_cash_back;
      char                            check_verify;
      char                            check_guar;
      char                            adj_pur;
      char                            adj_pur_cash_back;
      char                            adj_merch_rtn;
      char                            adj_cash_adv;
      char                            adj_amt2_grtr_amt1;
      char                            sales_draft;
      char                            represent;
      char                            chargeback;
      char                            filler_0[3];
   } trans_allowed;
   char                            rfrl_phone[20];
   char                            user_fld4;
   short                           pre_auth_hld;
   __int32_t                       pre_auth_amt_dft;
   short                           apprv_cde_lgth;
   struct
   {
      __int32_t                       isaf;
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
   } timer_lmts;
   char                            dflt_retail_id[19];
   char                            setl_entity;
   char                            user_fld5[8];
} afsicf_def;
#define afsicf_def_Size 184
#pragma section seg12buf
/* Definition SEG12BUF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __seg12buf
typedef struct __seg12buf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            seg_buf[180];
} seg12buf_def;
#define seg12buf_def_Size 188
#pragma section ncdicf
/* Definition NCDICF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ncdicf
typedef struct __ncdicf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   struct
   {
      char                            ncd;
      char                            ncd_cca;
      char                            filler_0[14];
   } not_on_us;
   struct
   {
      char                            ncd;
      char                            ncd_cca;
      char                            filler_1[14];
   } trans_allowed;
   char                            dflt_merch_typ[4];
} ncdicf_def;
#define ncdicf_def_Size 44
#pragma section swiicf
/* Definition SWIICF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __swiicf
typedef struct __swiicf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            dpnt_data[400];
} swiicf_def;
#define swiicf_def_Size 408
#pragma section icf
/* Record ICF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __icf
typedef struct __icf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         char                            fiid[4];
         char                            swi_pro[16];
      } prikey;
      char                            ln[4];
      char                            swi_typ[4];
      char                            inst_id[15];
      char                            swi_id[15];
      char                            dflt_term_num[16];
      char                            dflt_acq_id_num[11];
      char                            rptg_name[20];
      char                            swi_descr;
      char                            sic_cde[4];
      char                            crncy_cde[3];
      char                            cust_bal_display;
      struct
      {
         short                           setl_hh;
         short                           setl_mm;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } hol_dat[16];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } post_dat;
         char                            setl_days;
         char                            user_fld1;
      } swi_setl;
      char                            rpt_pri[3];
      char                            rpt_cpu[2];
      char                            ilf_extract_num;
      struct
      {
         char                            sta1[16];
         char                            sta2[16];
      } sta_conf;
      struct
      {
         __int32_t                       nmm;
         __int32_t                       xnmm;
         __int32_t                       wft;
         __int32_t                       performance;
      } timer_lmts;
      struct
      {
         short                           as_acq;
         short                           as_iss;
         char                            processing_mode;
         char                            filler_0;
         short                           auto_signon_on_strt;
         short                           max_timeouts;
         struct
         {
            short                           outbound;
            short                           inbound;
         } max_out_rqst;
         short                           max_saf_retry;
         short                           ack_to_swi;
         short                           ack_from_swi;
      } processing_options;
      char                            user_fld2[2];
      short                           nmm_enabled;
      struct
      {
         union
         {
            char                            fnames[24];
            short                           fname[12];
         } u_fnames;
      } suspense[9];
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      short                           csm_can_cuota;
      char                            csm_chk_cuota;
      char                            csm_chk_comercio;
      char                            csm_chk_dolar;
      char                            csm_chk_ingreso;
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            auth_pro[16];
      char                            shrg_grp[24];
      struct
      {
         char                            wdl;
         char                            wdl_cca;
         char                            dep;
         char                            inq;
         char                            xfer;
         char                            electronic_pmnt;
         char                            pmnt_enclosed;
         char                            cash_chk;
         char                            msg_to_inst;
         char                            pin_change;
         char                            split_deposit;
         char                            load_value;
         char                            filler_1[4];
      } not_on_us;
      struct
      {
         char                            wdl;
         char                            wdl_ccd;
         char                            dep;
         char                            inq;
         char                            xfer;
         char                            electronic_pmnt;
         char                            pmnt_enclosed;
         char                            cash_chk;
         char                            msg_to_inst;
         char                            pin_change;
         char                            split_deposit;
         char                            load_value;
         char                            filler_2[4];
      } trans_allowed;
      struct
      {
         __int32_t                       isaf;
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
      } timer_lmts;
      char                            dflt_rtg_grp[11];
      char                            user_fld3;
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            auth_pro[16];
      char                            allowed_srvcs[30][2];
      char                            timeout_flg;
      struct
      {
         char                            purchase;
         char                            pre_auth;
         char                            pre_auth_compl;
         char                            mail_phone;
         char                            merc_return;
         char                            cash_adv;
         char                            crd_verify;
         char                            bal_inq;
         char                            pur_cash_back;
         char                            check_verify;
         char                            check_guar;
         char                            adj_pur;
         char                            adj_pur_cash_back;
         char                            adj_merch_rtn;
         char                            adj_cash_adv;
         char                            adj_amt2_grtr_amt1;
         char                            sales_draft;
         char                            represent;
         char                            chargeback;
         char                            filler_3[3];
      } trans_allowed;
      char                            rfrl_phone[20];
      char                            user_fld4;
      short                           pre_auth_hld;
      __int32_t                       pre_auth_amt_dft;
      short                           apprv_cde_lgth;
      struct
      {
         __int32_t                       isaf;
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
      } timer_lmts;
      char                            dflt_retail_id[19];
      char                            setl_entity;
      char                            user_fld5[8];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            auth_pro[16];
      char                            allowed_srvcs[30][2];
      char                            timeout_flg;
      struct
      {
         char                            purchase;
         char                            pre_auth;
         char                            pre_auth_compl;
         char                            mail_phone;
         char                            merc_return;
         char                            cash_adv;
         char                            crd_verify;
         char                            bal_inq;
         char                            pur_cash_back;
         char                            check_verify;
         char                            check_guar;
         char                            adj_pur;
         char                            adj_pur_cash_back;
         char                            adj_merch_rtn;
         char                            adj_cash_adv;
         char                            adj_amt2_grtr_amt1;
         char                            sales_draft;
         char                            represent;
         char                            chargeback;
         char                            filler_4[3];
      } trans_allowed;
      char                            rfrl_phone[20];
      char                            user_fld4;
      short                           pre_auth_hld;
      __int32_t                       pre_auth_amt_dft;
      short                           apprv_cde_lgth;
      struct
      {
         __int32_t                       isaf;
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
      } timer_lmts;
      char                            dflt_retail_id[19];
      char                            setl_entity;
      char                            user_fld5[8];
   } seg9;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            seg_buf[180];
   } seg12;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            ncd;
         char                            ncd_cca;
         char                            filler_5[14];
      } not_on_us;
      struct
      {
         char                            ncd;
         char                            ncd_cca;
         char                            filler_6[14];
      } trans_allowed;
      char                            dflt_merch_typ[4];
   } seg23;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            dpnt_data[400];
   } seg31;
} icf_def;
#define icf_def_Size 1666
#pragma section icfe_prikey
/* Definition ICFE-PRIKEY created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __icfe_prikey
typedef struct __icfe_prikey
{
   char                            fiid[4];
   char                            swi_pro[16];
} icfe_prikey_def;
#define icfe_prikey_def_Size 20
#pragma section icfebase
/* Definition ICFEBASE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __icfebase
typedef struct __icfebase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      char                            fiid[4];
      char                            swi_pro[16];
   } prikey;
   char                            ln[4];
   char                            swi_typ[4];
   char                            inst_id[15];
   char                            swi_id[15];
   char                            dflt_term_num[16];
   char                            dflt_acq_id_num[11];
   char                            rptg_name[20];
   char                            swi_descr;
   char                            sic_cde[4];
   char                            crncy_cde[3];
   char                            cust_bal_display;
   struct
   {
      short                           setl_hh;
      short                           setl_mm;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } hol_dat[16];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } post_dat;
      char                            setl_days;
      char                            user_fld1_swi_setl;
   } swi_setl;
   char                            rpt_pri[3];
   char                            rpt_cpu[2];
   char                            ilf_extract_num;
   struct
   {
      char                            sta1[16];
      char                            sta2[16];
   } sta_conf;
   struct
   {
      __int32_t                       nmm;
      __int32_t                       xnmm;
      __int32_t                       wft;
      __int32_t                       performance;
   } timer_lmts;
   struct
   {
      short                           as_acq;
      short                           as_iss;
      char                            processing_mode;
      char                            mult_crncy;
      short                           auto_signon_on_strt;
      short                           max_timeouts;
      struct
      {
         short                           outbound;
         short                           inbound;
      } max_out_rqst;
      short                           max_saf_retry;
      short                           ack_to_swi;
      short                           ack_from_swi;
   } processing_options;
   char                            user_fld1[2];
   short                           nmm_enabled;
   struct
   {
      union
      {
         char                            fnames[24];
         short                           fname[12];
      } u_fnames;
   } suspense[9];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            user_fld_aci[300];
   char                            user_fld_regn[50];
   char                            user_fld_cust[33];
   char                            csm_msg_promo;
   long long                       csm_lim_pesos;
   long long                       csm_lim_dolar;
   short                           csm_can_cuota;
   char                            csm_chk_cuota;
   char                            csm_chk_comercio;
   char                            csm_chk_dolar;
   char                            csm_chk_ingreso;
} icfebase_def;
#define icfebase_def_Size 946
#pragma section atmicfe
/* Definition ATMICFE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmicfe
typedef struct __atmicfe
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            auth_pro[16];
   char                            shrg_grp[24];
   struct
   {
      __int32_t                       isaf;
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
   } timer_lmts;
   char                            dflt_rtg_grp[11];
   char                            user_fld1[3];
   char                            acq_txn_prfl[16];
   char                            iss_txn_prfl[16];
   char                            user_fld_aci[300];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
} atmicfe_def;
#define atmicfe_def_Size 514
#pragma section posicfe
/* Definition POSICFE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __posicfe
typedef struct __posicfe
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            auth_pro[16];
   char                            allowed_srvcs[30][2];
   char                            timeout_flg;
   char                            user_fld1;
   char                            rfrl_phone[20];
   short                           pre_auth_hld;
   __int32_t                       pre_auth_amt_dft;
   short                           apprv_cde_lgth;
   struct
   {
      __int32_t                       isaf;
      __int32_t                       outbound;
      __int32_t                       inbound;
      __int32_t                       compl;
      __int32_t                       compl_ack;
   } timer_lmts;
   char                            dflt_retail_id[19];
   char                            setl_entity;
   char                            adj_flg;
   char                            chrgbck_flg;
   char                            acq_txn_prfl[16];
   char                            iss_txn_prfl[16];
   char                            user_fld_aci[300];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
} posicfe_def;
#define posicfe_def_Size 588
#pragma section ncdicfe
/* Definition NCDICFE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __ncdicfe
typedef struct __ncdicfe
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            dflt_merch_typ[4];
} ncdicfe_def;
#define ncdicfe_def_Size 12
#pragma section swiicfe
/* Definition SWIICFE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __swiicfe
typedef struct __swiicfe
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            dpnt_data[400];
   char                            user_fld1[400];
} swiicfe_def;
#define swiicfe_def_Size 808
#pragma section icfe
/* Record ICFE created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __icfe
typedef struct __icfe
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         char                            fiid[4];
         char                            swi_pro[16];
      } prikey;
      char                            ln[4];
      char                            swi_typ[4];
      char                            inst_id[15];
      char                            swi_id[15];
      char                            dflt_term_num[16];
      char                            dflt_acq_id_num[11];
      char                            rptg_name[20];
      char                            swi_descr;
      char                            sic_cde[4];
      char                            crncy_cde[3];
      char                            cust_bal_display;
      struct
      {
         short                           setl_hh;
         short                           setl_mm;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } hol_dat[16];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } post_dat;
         char                            setl_days;
         char                            user_fld1_swi_setl;
      } swi_setl;
      char                            rpt_pri[3];
      char                            rpt_cpu[2];
      char                            ilf_extract_num;
      struct
      {
         char                            sta1[16];
         char                            sta2[16];
      } sta_conf;
      struct
      {
         __int32_t                       nmm;
         __int32_t                       xnmm;
         __int32_t                       wft;
         __int32_t                       performance;
      } timer_lmts;
      struct
      {
         short                           as_acq;
         short                           as_iss;
         char                            processing_mode;
         char                            mult_crncy;
         short                           auto_signon_on_strt;
         short                           max_timeouts;
         struct
         {
            short                           outbound;
            short                           inbound;
         } max_out_rqst;
         short                           max_saf_retry;
         short                           ack_to_swi;
         short                           ack_from_swi;
      } processing_options;
      char                            user_fld1[2];
      short                           nmm_enabled;
      struct
      {
         union
         {
            char                            fnames[24];
            short                           fname[12];
         } u_fnames;
      } suspense[9];
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      char                            user_fld_aci[300];
      char                            user_fld_regn[50];
      char                            user_fld_cust[33];
      char                            csm_msg_promo;
      long long                       csm_lim_pesos;
      long long                       csm_lim_dolar;
      short                           csm_can_cuota;
      char                            csm_chk_cuota;
      char                            csm_chk_comercio;
      char                            csm_chk_dolar;
      char                            csm_chk_ingreso;
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            auth_pro[16];
      char                            shrg_grp[24];
      struct
      {
         __int32_t                       isaf;
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
      } timer_lmts;
      char                            dflt_rtg_grp[11];
      char                            user_fld1[3];
      char                            acq_txn_prfl[16];
      char                            iss_txn_prfl[16];
      char                            user_fld_aci[300];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            auth_pro[16];
      char                            allowed_srvcs[30][2];
      char                            timeout_flg;
      char                            user_fld1;
      char                            rfrl_phone[20];
      short                           pre_auth_hld;
      __int32_t                       pre_auth_amt_dft;
      short                           apprv_cde_lgth;
      struct
      {
         __int32_t                       isaf;
         __int32_t                       outbound;
         __int32_t                       inbound;
         __int32_t                       compl;
         __int32_t                       compl_ack;
      } timer_lmts;
      char                            dflt_retail_id[19];
      char                            setl_entity;
      char                            adj_flg;
      char                            chrgbck_flg;
      char                            acq_txn_prfl[16];
      char                            iss_txn_prfl[16];
      char                            user_fld_aci[300];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            dflt_merch_typ[4];
   } seg23;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            dpnt_data[400];
      char                            user_fld1[400];
   } seg31;
} icfe_def;
#define icfe_def_Size 2868
#pragma section spf
/* Record SPF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __spf
typedef struct __spf
{
   struct
   {
      char                            fiid[4];
      char                            acct_num[19];
      char                            acct_typ[2];
      char                            hi_chk_num[11];
      char                            lo_chk_num[11];
      char                            user_fld1;
   } prikey;
   long long                       amt;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tim;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } exp_dat;
   char                            descr[35];
   char                            user_fld2;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            user_fld3[12];
} spf_def;
#define spf_def_Size 142
#pragma section tkn
/* Record TKN created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __tkn
typedef struct __tkn
{
   struct
   {
      char                            func_typ;
      char                            prod_id[2];
      char                            tkn_grp[4];
      char                            typ[2];
      char                            sub_typ[2];
      char                            user_fld1;
   } prikey;
   char                            ordr_flg;
   char                            user_fld2[25];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   short                           ordr_tkn_cnt;
   unsigned short                  ttl_tkn_cnt;
   char                            tkn_id[1296][2];
} tkn_def;
#define tkn_def_Size 2652
#pragma section arf
/* Record ARF created on 10/18/2023 at 17:46 */
#include <tnsint.h>
#pragma fieldalign shared2 __arf
typedef struct __arf
{
   struct
   {
      char                            rec_typ[2];
      char                            acct_typ[2];
      short                           acct_lgth;
      union
      {
         char                            key_data[22];
         struct
         {
            char                            hi_val[11];
            char                            lo_val[11];
         } bnk_rtg_cde;
         struct
         {
            short                           match_posn;
            short                           match_lgth;
            char                            match_val[18];
         } acct;
         struct
         {
            char                            chk[11];
            char                            user_fld1[11];
         } inst_id_num;
      } u_key_data;
   } prikey;
   short                           insert_posn;
   short                           insert_lgth;
   char                            insert_val[18];
   char                            acct_fiid[4];
   char                            b24_inst_id_num[11];
   char                            user_fld2;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} arf_def;
#define arf_def_Size 84
#pragma section header_tkn
/* Definition HEADER-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __header_tkn
typedef struct __header_tkn
{
   char                            eye_catcher;
   char                            user_fld1;
   short                           cnt;
   short                           lgth;
} header_tkn_def;
#define header_tkn_def_Size 6
#pragma section header_tknx
/* Definition HEADER-TKNX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __header_tknx
typedef struct __header_tknx
{
   char                            eye_catcher;
   char                            user_fld1;
   char                            cnt[5];
   char                            lgth[5];
} header_tknx_def;
#define header_tknx_def_Size 12
#pragma section tkn_header
/* Definition TKN-HEADER created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __tkn_header
typedef struct __tkn_header
{
   char                            eye_catcher;
   char                            user_fld1;
   char                            tkn_id[2];
   short                           lgth;
} tkn_header_def;
#define tkn_header_def_Size 6
#pragma section tkn_headerx
/* Definition TKN-HEADERX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __tkn_headerx
typedef struct __tkn_headerx
{
   char                            eye_catcher;
   char                            user_fld1;
   char                            tkn_id[2];
   char                            lgth[5];
   char                            user_fld2;
} tkn_headerx_def;
#define tkn_headerx_def_Size 10
#pragma section acct_qual_tkn
/* Definition ACCT-QUAL-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __acct_qual_tkn
typedef struct __acct_qual_tkn
{
   struct
   {
      char                            typ[2];
      char                            idx;
   } from_acct;
   struct
   {
      char                            typ[2];
      char                            idx;
   } to_acct;
} acct_qual_tkn_def;
#define acct_qual_tkn_def_Size 6
#pragma section acq_rte_tkn
/* Definition ACQ-RTE-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __acq_rte_tkn
typedef struct __acq_rte_tkn
{
   char                            auth_dest[16];
   char                            log_auth_dest_resp;
   char                            user_fld1;
} acq_rte_tkn_def;
#define acq_rte_tkn_def_Size 18
#pragma section adnl_amts_tkn
/* Definition ADNL-AMTS-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __adnl_amts_tkn
typedef struct __adnl_amts_tkn
{
   char                            num_amts[2];
   struct
   {
      char                            amt_typ[2];
      char                            crncy_cde[3];
      char                            amt_sign;
      char                            amt[12];
      char                            user_fld_aci[2];
   } info[6];
} adnl_amts_tkn_def;
#define adnl_amts_tkn_def_Size 122
#pragma section adnl_auth_data_tkn
/* Definition ADNL-AUTH-DATA-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __adnl_auth_data_tkn
typedef struct __adnl_auth_data_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            info[254];
      struct
      {
         char                            free_frmt_txt[254];
      } visa_mcc_6012;
   } u_info;
} adnl_auth_data_tkn_def;
#define adnl_auth_data_tkn_def_Size 256
#pragma section adnl_trace_id_tkn
/* Definition ADNL-TRACE-ID-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __adnl_trace_id_tkn
typedef struct __adnl_trace_id_tkn
{
   char                            origin;
   char                            trace_id[15];
   char                            trace_id_ext[4];
   char                            user_fld_aci[2];
} adnl_trace_id_tkn_def;
#define adnl_trace_id_tkn_def_Size 22
#pragma section chip_data_tkn
/* Definition CHIP-DATA-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __chip_data_tkn
typedef struct __chip_data_tkn
{
   short                           lgth;
   char                            ber_tlv_data[80];
} chip_data_tkn_def;
#define chip_data_tkn_def_Size 82
#pragma section chip_data_tknx
/* Definition CHIP-DATA-TKNX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __chip_data_tknx
typedef struct __chip_data_tknx
{
   char                            lgth[4];
   char                            ber_tlv_data[160];
} chip_data_tknx_def;
#define chip_data_tknx_def_Size 164
#pragma section compl_req_tkn
/* Definition COMPL-REQ-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __compl_req_tkn
typedef struct __compl_req_tkn
{
   char                            compl_req;
   char                            user_fld1;
} compl_req_tkn_def;
#define compl_req_tkn_def_Size 2
#pragma section cr_line_tkn
/* Definition CR-LINE-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __cr_line_tkn
typedef struct __cr_line_tkn
{
   char                            acct_typ[2];
   struct
   {
      char                            acct_num[19];
   } acct;
   char                            user_fld;
   long long                       xfer_amt;
} cr_line_tkn_def;
#define cr_line_tkn_def_Size 30
#pragma section cr_line_tknx
/* Definition CR-LINE-TKNX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __cr_line_tknx
typedef struct __cr_line_tknx
{
   char                            acct_typ[2];
   struct
   {
      char                            acct_num[19];
   } acct;
   char                            user_fld[2];
   char                            xfer_amt[19];
} cr_line_tknx_def;
#define cr_line_tknx_def_Size 42
#pragma section crd_postal_cde_tkn
/* Definition CRD-POSTAL-CDE-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __crd_postal_cde_tkn
typedef struct __crd_postal_cde_tkn
{
   char                            postal_cde[10];
} crd_postal_cde_tkn_def;
#define crd_postal_cde_tkn_def_Size 10
#pragma section data_encryption_key_tkn
/* Definition DATA-ENCRYPTION-KEY-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __data_encryption_key_tkn
typedef struct __data_encryption_key_tkn
{
   char                            fld_typ;
   char                            user_fld1;
   char                            encrypt_typ[2];
   char                            encrypt_key[16];
} data_encryption_key_tkn_def;
#define data_encryption_key_tkn_def_Size 20
#pragma section dcc_stat_tkn
/* Definition DCC-STAT-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __dcc_stat_tkn
typedef struct __dcc_stat_tkn
{
   char                            dcc_prfl[16];
   char                            dcc_stat;
   char                            dcc_substat;
   char                            user_fld_aci[6];
} dcc_stat_tkn_def;
#define dcc_stat_tkn_def_Size 24
#pragma section dcc_proc_tkn
/* Definition DCC-PROC-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __dcc_proc_tkn
typedef struct __dcc_proc_tkn
{
   char                            iss_designator[2];
   char                            bin_crncy_cde[3];
   char                            bin_crncy_descr[20];
   char                            cnv_rate_neutral[8];
   char                            cnv_rate_effective[8];
   char                            cnv_rate_src[32];
   char                            cnv_rate_dat[8];
   char                            saved_crncy_cde[3];
   short                           pcnt_mark_up;
   long long                       converted_amt_1;
   long long                       converted_amt_2;
   long long                       saved_amt_1;
   long long                       saved_amt_2;
   long long                       converted_acq_surch;
   long long                       converted_iss_surch;
   char                            user_fld_aci[20];
} dcc_proc_tkn_def;
#define dcc_proc_tkn_def_Size 154
#pragma section dcc_proc_tknx
/* Definition DCC-PROC-TKNX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __dcc_proc_tknx
typedef struct __dcc_proc_tknx
{
   char                            iss_designator[2];
   char                            bin_crncy_cde[3];
   char                            bin_crncy_descr[20];
   char                            cnv_rate_neutral[8];
   char                            cnv_rate_effective[8];
   char                            cnv_rate_src[32];
   char                            cnv_rate_dat[8];
   char                            saved_crncy_cde[3];
   char                            pcnt_mark_up[5];
   char                            converted_amt_1[19];
   char                            converted_amt_2[19];
   char                            saved_amt_1[19];
   char                            saved_amt_2[19];
   char                            converted_acq_surch[19];
   char                            converted_iss_surch[19];
   char                            user_fld_aci[41];
} dcc_proc_tknx_def;
#define dcc_proc_tknx_def_Size 244
#pragma section dgtl_pmnt_authn_tkn
/* Definition DGTL-PMNT-AUTHN-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __dgtl_pmnt_authn_tkn
typedef struct __dgtl_pmnt_authn_tkn
{
   char                            frmt_cde[2];
   char                            lgth[2];
   union
   {
      char                            info[60];
      struct
      {
         char                            crypto_typ;
         char                            crypto_frmt;
         char                            crypto[40];
         char                            user_fld_genrc[18];
      } genrc;
      struct
      {
         char                            rslt_cde_1;
         char                            rslt_cde_2;
         char                            est_amt[12];
         char                            obs61_rslt_cde_1;
         char                            obs61_rslt_cde_2;
         char                            user_fld_mc[44];
      } mc;
      struct
      {
         char                            bnd_dev_idx[2];
         char                            tkn_user_id[11];
         char                            tkn_user_appl_typ[2];
         char                            tkn_authn_factr_a[2];
         char                            tkn_authn_factr_b[2];
         char                            tkn_authn_amt[7];
         char                            tkn_rq_tkn_srvc_prvd[11];
         char                            user_fld_visa[23];
      } visa;
   } u_info;
} dgtl_pmnt_authn_tkn_def;
#define dgtl_pmnt_authn_tkn_def_Size 64
#pragma section emv_discr_tkn
/* Definition EMV-DISCR-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __emv_discr_tkn
typedef struct __emv_discr_tkn
{
   short                           bit_map;
   char                            term_serl_num[8];
   struct
   {
      char                            crd_data_input;
      char                            cvm;
      char                            sec;
      char                            user_fld1_emv_term_cap;
   } emv_term_cap;
   char                            user_fld1[2];
   char                            user_fld2[4];
   char                            emv_term_type;
   char                            appl_ver_num[2];
   char                            cvm_rslts[3];
   short                           df_name_lgth;
   char                            df_name[16];
} emv_discr_tkn_def;
#define emv_discr_tkn_def_Size 44
#pragma section emv_discr_tknx
/* Definition EMV-DISCR-TKNX created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __emv_discr_tknx
typedef struct __emv_discr_tknx
{
   char                            bit_map[4];
   char                            term_serl_num[8];
   char                            emv_term_cap[8];
   char                            user_fld1[4];
   char                            user_fld2[8];
   char                            emv_term_type[2];
   char                            appl_ver_num[4];
   char                            cvm_rslts[6];
   char                            df_name_lgth[4];
   char                            df_name[32];
} emv_discr_tknx_def;
#define emv_discr_tknx_def_Size 80
#pragma section emv_iss_script_rslts_tkn
/* Definition EMV-ISS-SCRIPT-RSLTS-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __emv_iss_script_rslts_tkn
typedef struct __emv_iss_script_rslts_tkn
{
   char                            num_iss_script_rslts;
   char                            user_fld1;
   struct
   {
      char                            iss_script_proc_rslt;
      char                            iss_script_seq;
      char                            iss_script_id[8];
   } iss_script_rslts_data[8];
} emv_iss_script_rslts_tkn_def;
#define emv_iss_script_rslts_tkn_def_Size 82
#pragma section emv_rqst_tkn
/* Definition EMV-RQST-TKN created on 10/18/2023 at 17:46 */
#pragma fieldalign shared2 __emv_rqst_tkn
typedef struct __emv_rqst_tkn
{
   short                           bit_map;
   char                            user_fld1[2];
   char                            crypto_info_data;
   char                            tvr[5];
   char                            arqc[8];
   char                            amt_auth[6];
   char                            amt_other[6];
   char                            aip[2];
   char                            atc[2];
   char                            term_cntry_cde[2];
   char                            tran_crncy_cde[2];
   char                            tran_dat[3];
   char                            tran_type;
   char                            unpredict_num[4];
   short                           iss_appl_data_lgth;
   union
   {
      char                            iss_appl_data[32];
      struct
      {
         char                            lgth;
         char                            deriv_key_indx;
         char                            crypto_ver_num;
         char                            crd_vrfy_rslts[4];
         char                            info[25];
      } aegn_appl_data;
      struct
      {
         char                            lgth;
         char                            common_core_id;
         char                            deriv_key_index;
         char                            crd_vrfy_rslts[5];
         char                            counters[8];
         char                            iss_discr_data_lgth;
         char                            iss_discr_data[15];
      } ccd_a_appl_data;
      struct
      {
         char                            lgth;
         char                            deriv_key_index;
         char                            crypto_ver_num;
         char                            crd_vrfy_rslts[4];
         char                            info[25];
      } visa_appl_data;
      struct
      {
         char                            deriv_key_index;
         char                            crypto_ver_num;
         char                            crd_vrfy_rslts[4];
         char                            dac[2];
         char                            info[24];
      } mcpa_appl_data;
      struct
      {
         char                            deriv_key_index;
         char                            crypto_ver_num;
         char                            crd_vrfy_rslts[6];
         char                            dac[2];
         char                            cntr[18];
         char                            info[4];
      } mchip4_appl_data;
   } u_iss_appl_data;
} emv_rqst_tkn_def;
#define emv_rqst_tkn_def_Size 80
#pragma section emv_rqst_tknx
/* Definition EMV-RQST-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_rqst_tknx
typedef struct __emv_rqst_tknx
{
   char                            bit_map[4];
   char                            user_fld1[4];
   char                            crypto_info_data[2];
   char                            tvr[10];
   char                            arqc[16];
   char                            amt_auth[12];
   char                            amt_other[12];
   char                            aip[4];
   char                            atc[4];
   char                            term_cntry_cde[3];
   char                            tran_crncy_cde[3];
   char                            tran_dat[6];
   char                            tran_type[2];
   char                            unpredict_num[8];
   char                            iss_appl_data_lgth[4];
   union
   {
      char                            iss_appl_data[64];
      struct
      {
         char                            lgth;
         char                            deriv_key_index;
         char                            crypto_ver_num;
         char                            crd_vrfy_rslts[4];
         char                            info[57];
      } aegn_appl_data;
      struct
      {
         char                            lgth[2];
         char                            common_core_id[2];
         char                            deriv_key_index[2];
         char                            crd_vrfy_rslts[10];
         char                            counters[16];
         char                            iss_discr_data_lgth[2];
         char                            iss_discr_data[30];
      } ccd_a_appl_data;
      struct
      {
         char                            lgth[2];
         char                            deriv_key_index[2];
         char                            crypto_ver_num[2];
         char                            crd_vrfy_rslts[8];
         char                            info[50];
      } visa_appl_data;
      struct
      {
         char                            deriv_key_index[2];
         char                            crypto_ver_num[2];
         char                            crd_vrfy_rslts[8];
         char                            dac[4];
         char                            info[48];
      } mcpa_appl_data;
      struct
      {
         char                            deriv_key_index[2];
         char                            crypto_ver_num[2];
         char                            crd_vrfy_rslts[12];
         char                            dac[4];
         char                            cntr[36];
         char                            info[8];
      } mchip4_appl_data;
   } u_iss_appl_data;
} emv_rqst_tknx_def;
#define emv_rqst_tknx_def_Size 158
#pragma section emv_resp_tkn
/* Definition EMV-RESP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_resp_tkn
typedef struct __emv_resp_tkn
{
   short                           iss_auth_data_lgth;
   union
   {
      char                            emv_iss_auth_data[16];
      struct
      {
         char                            arpc[8];
         union
         {
            char                            addl_data[8];
            struct
            {
               char                            iss_resp_cde[2];
               char                            info[6];
            } visa_addl_data;
            struct
            {
               char                            iss_auth_resp_cde[2];
               char                            info[6];
            } mcpa_addl_data;
            struct
            {
               char                            arpc_resp_cde[2];
               char                            info[6];
            } mchip4_addl_data;
         } u_addl_data;
      } iss_auth_data;
      struct
      {
         char                            arpc[4];
         char                            crd_stat_updt[4];
         char                            addl_data[8];
      } csu_iss_auth_data;
      struct
      {
         char                            arpc[4];
         char                            crd_stat_updt[4];
         char                            addl_data[8];
      } ccd_a_auth_data;
   } u_emv_iss_auth_data;
   char                            send_crd_blk;
   char                            send_put_data;
} emv_resp_tkn_def;
#define emv_resp_tkn_def_Size 20
#pragma section emv_resp_tknx
/* Definition EMV-RESP-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_resp_tknx
typedef struct __emv_resp_tknx
{
   char                            iss_auth_data_lgth[4];
   union
   {
      char                            emv_iss_auth_data[32];
      struct
      {
         char                            arpc[16];
         union
         {
            char                            addl_data[16];
            struct
            {
               char                            iss_resp_cde[4];
               char                            info[12];
            } visa_addl_data;
         } u_addl_data;
      } iss_auth_data;
      struct
      {
         char                            arpc[8];
         char                            crd_stat_updt[8];
         char                            addl_data[16];
      } csu_iss_auth_data;
   } u_emv_iss_auth_data;
   char                            send_crd_blk;
   char                            send_put_data;
} emv_resp_tknx_def;
#define emv_resp_tknx_def_Size 38
#pragma section emv_script_tkn
/* Definition EMV-SCRIPT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_script_tkn
typedef struct __emv_script_tkn
{
   short                           iss_script_data_lgth;
   char                            iss_script_data[128];
} emv_script_tkn_def;
#define emv_script_tkn_def_Size 130
#pragma section emv_script_tknx
/* Definition EMV-SCRIPT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_script_tknx
typedef struct __emv_script_tknx
{
   char                            iss_script_data_lgth[4];
   char                            iss_script_data[256];
} emv_script_tknx_def;
#define emv_script_tknx_def_Size 260
#pragma section emv_stat_tkn
/* Definition EMV-STAT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_stat_tkn
typedef struct __emv_stat_tkn
{
   char                            pt_srv_entry_mde[3];
   char                            term_entry_cap;
   char                            last_emv_stat;
   char                            data_suspect;
   char                            appl_pan_seq_num[2];
   union
   {
      char                            dev_info[6];
      char                            cam_flags[6];
      char                            cvm_rslts[6];
      struct
      {
         char                            apprvd_rc[2];
         char                            atc_vrfy;
         char                            user_fld_aci[3];
      } ichg_def;
   } u_dev_info;
   char                            rsn_onl_cde[4];
   char                            arqc_vrfy;
   char                            iso_rc_ind;
} emv_stat_tkn_def;
#define emv_stat_tkn_def_Size 20
#pragma section emv_stat_tknx
/* Definition EMV-STAT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_stat_tknx
typedef struct __emv_stat_tknx
{
   char                            pt_srv_entry_mde[3];
   char                            term_entry_cap;
   char                            last_emv_stat;
   char                            data_suspect;
   char                            appl_pan_seq_num[2];
   union
   {
      char                            dev_info[6];
      char                            cam_flags[6];
      char                            cvm_rslts[6];
      char                            ichg_def[6];
   } u_dev_info;
   char                            rsn_onl_cde[4];
   char                            arqc_vrfy;
   char                            iso_rc_ind;
} emv_stat_tknx_def;
#define emv_stat_tknx_def_Size 20
#pragma section emv_suppl_data_tkn
/* Definition EMV-SUPPL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_suppl_data_tkn
typedef struct __emv_suppl_data_tkn
{
   char                            dataset_id[2];
   short                           lgth;
   char                            suppl_data[80];
} emv_suppl_data_tkn_def;
#define emv_suppl_data_tkn_def_Size 84
#pragma section emv_suppl_data_tknx
/* Definition EMV-SUPPL-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_suppl_data_tknx
typedef struct __emv_suppl_data_tknx
{
   char                            dataset_id[2];
   char                            lgth[4];
   char                            suppl_data[160];
} emv_suppl_data_tknx_def;
#define emv_suppl_data_tknx_def_Size 166
#pragma section encrypted_bal_tkn
/* Definition ENCRYPTED-BAL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __encrypted_bal_tkn
typedef struct __encrypted_bal_tkn
{
   char                            data_typ;
   char                            user_fld1;
   char                            bal_1[16];
   char                            bal_2[16];
} encrypted_bal_tkn_def;
#define encrypted_bal_tkn_def_Size 34
#pragma section encrypted_bal_tknx
/* Definition ENCRYPTED-BAL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __encrypted_bal_tknx
typedef struct __encrypted_bal_tknx
{
   char                            data_typ;
   char                            user_fld1;
   char                            bal_1[32];
   char                            bal_2[32];
} encrypted_bal_tknx_def;
#define encrypted_bal_tknx_def_Size 66
#pragma section fraud_data_tkn
/* Definition FRAUD-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __fraud_data_tkn
typedef struct __fraud_data_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            info[138];
      struct
      {
         struct
         {
            char                            score[3];
            char                            rsn_cde[2];
            char                            rule_adj_score[3];
            char                            rule_rsn_cde_1[2];
            char                            rule_rsn_cde_2[2];
         } fraud_data;
         struct
         {
            char                            num_srvcs[2];
            struct
            {
               char                            ind[3];
               char                            dat[3];
            } info[16];
         } sec_srvc;
         char                            acct_data_cmprms_info[24];
         char                            user_fld_mds[4];
      } mds;
      struct
      {
         struct
         {
            char                            score[3];
            char                            rsn_cde[2];
            char                            rule_adj_score[3];
            char                            rule_rsn_cde_1[2];
            char                            rule_rsn_cde_2[2];
         } fraud_data;
         struct
         {
            char                            num_srvcs[2];
            struct
            {
               char                            ind[3];
               char                            dat[3];
            } info[16];
         } sec_srvc;
         char                            acct_data_cmprms_info[24];
         char                            user_fld_bnet[4];
      } bnet;
      struct
      {
         struct
         {
            char                            score[3];
            char                            rsn_cde[2];
         } fraud_data;
         char                            user_fld_star[133];
      } star;
      struct
      {
         struct
         {
            char                            score[3];
         } fraud_data;
         char                            user_fld_puli[135];
      } puli;
      struct
      {
         struct
         {
            char                            watch_list_scoring_rslt_cde[3];
            char                            actvty_chk_rslt;
         } oct;
         char                            rsk_score[2];
         char                            rsk_cond_cde[2];
         char                            auth_pst_score[2];
         char                            aft_watch_list_rslt_cde[3];
         char                            user_fld_visa[125];
      } visa;
   } u_info;
} fraud_data_tkn_def;
#define fraud_data_tkn_def_Size 140
#pragma section generic_data_tkn
/* Definition GENERIC-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __generic_data_tkn
typedef struct __generic_data_tkn
{
   char                            crd_input_cap;
   char                            crdhldr_auth_cap;
   char                            term_crd_captr;
   char                            oper_envmt;
   char                            crdhldr_prsn;
   char                            crd_prsn;
   char                            crd_input_mde;
   char                            crdhldr_auth_mthd;
   char                            crdhldr_auth_enty;
   char                            crd_ouput_cap;
   char                            term_output_cap;
   char                            pin_captr_cap;
   char                            ecomm_ind[2];
   char                            cust_phn_num[12];
   char                            fraud_score[5];
   char                            image_cde[5];
   char                            tax_pan[10];
   char                            ip_addr[42];
   char                            phrase_cde[5];
   char                            txn_fee[9];
   char                            orig_txn_fee[9];
   char                            txn_auth_ind;
   char                            encrypt_ind[2];
   char                            filler_0[4];
} generic_data_tkn_def;
#define generic_data_tkn_def_Size 118
#pragma section genrc_ichg_data_tkn
/* Definition GENRC-ICHG-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __genrc_ichg_data_tkn
typedef struct __genrc_ichg_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   char                            info[299];
} genrc_ichg_data_tkn_def;
#define genrc_ichg_data_tkn_def_Size 304
#pragma section genrc_ichg_resp_data_tkn
/* Definition GENRC-ICHG-RESP-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __genrc_ichg_resp_data_tkn
typedef struct __genrc_ichg_resp_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   union
   {
      char                            info[255];
      struct
      {
         char                            cntry_cde[3];
         union
         {
            char                            cntry_data[100];
            struct
            {
               char                            pri_crdhldr_id[34];
               char                            scnd_crdhldr_id[34];
               char                            user_fld_nl[32];
            } nl;
         } u_cntry_data;
         char                            user_fld_aci[152];
      } bnet_cntry_spcf_resp_data;
   } u_info;
} genrc_ichg_resp_data_tkn_def;
#define genrc_ichg_resp_data_tkn_def_Size 260
#pragma section genrc_ichg_rvsl_data_tkn
/* Definition GENRC-ICHG-RVSL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __genrc_ichg_rvsl_data_tkn
typedef struct __genrc_ichg_rvsl_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   char                            info[125];
} genrc_ichg_rvsl_data_tkn_def;
#define genrc_ichg_rvsl_data_tkn_def_Size 130
#pragma section gtwy_info_tkn
/* Definition GTWY-INFO-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __gtwy_info_tkn
typedef struct __gtwy_info_tkn
{
   char                            ver_id[2];
   char                            gtwy_info[200];
} gtwy_info_tkn_def;
#define gtwy_info_tkn_def_Size 202
#pragma section spn2_gtwy_dscv_info
/* Definition SPN2-GTWY-DSCV-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __spn2_gtwy_dscv_info
typedef struct __spn2_gtwy_dscv_info
{
   char                            dataset_id[2];
   char                            proc_cde[6];
   char                            stan[6];
   char                            pos_data_cde[12];
   char                            fnct_cde[3];
   char                            msg_rsn_cde[4];
   char                            acq_inst_id[11];
   char                            frwd_inst_id[11];
   char                            act_cde[3];
   char                            term_id[8];
   char                            txn_orig_cntry_cde[3];
   char                            rcv_inst_id[11];
   char                            ntwk_ref_id[15];
   char                            chb_amt[12];
   char                            chb_cur_cde[3];
} spn2_gtwy_dscv_info_def;
#define spn2_gtwy_dscv_info_def_Size 110
#pragma section spn2_gtwy_jcb_info
/* Definition SPN2-GTWY-JCB-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __spn2_gtwy_jcb_info
typedef struct __spn2_gtwy_jcb_info
{
   char                            dataset_id[2];
   char                            proc_cde[6];
   char                            rcncl_amt[12];
   char                            rcncl_conv_rate[8];
   char                            stan[6];
   char                            local_txn_tim[6];
   char                            local_txn_dat[4];
   char                            conv_dat[4];
   char                            mrch_typ[4];
   char                            pos_entry_mde[4];
   char                            pos_cond_cde[2];
   char                            pin_captr_cde[2];
   char                            fee_amt[9];
   char                            acq_inst_id[11];
   char                            frwd_inst_id[11];
   char                            netwk_act_cde[2];
   char                            term_id[8];
   char                            crd_accpt_nam_loc[40];
   char                            rcncl_cur_cde[3];
} spn2_gtwy_jcb_info_def;
#define spn2_gtwy_jcb_info_def_Size 144
#pragma section str_f111_mc_bnet_info
/* Definition STR-F111-MC-BNET-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f111_mc_bnet_info
typedef struct __str_f111_mc_bnet_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            mrch_advc_cde_dflt_data[2];
   char                            fraud_data[9];
   char                            advc_detl_cde[4];
   char                            mag_stripe_cmplnt_stat_ind;
   char                            mag_stripe_cmplnt_err_ind;
   char                            crd_prsn;
   char                            fraud_on_behalf_rslt;
   char                            auth_system_advc_dat_tim[10];
   char                            emcas_data_rslt;
   char                            pos_txn_stat;
   char                            term_cmplnt_ind[2];
   char                            on_behalf_svc[2];
   char                            on_behalf_rslt_1;
   char                            mrch_fraud_score[4];
   char                            authn_ind;
   char                            advc_rsn_cde[3];
} str_f111_mc_bnet_info_def;
#define str_f111_mc_bnet_info_def_Size 48
#pragma section str_f111_mc_db_info
/* Definition STR-F111-MC-DB-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f111_mc_db_info
typedef struct __str_f111_mc_db_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            tiered_merch_id[6];
   char                            crd_prsn;
   char                            oper_envmt;
   char                            term_attnd;
   char                            crdhldr_prsn;
   char                            cat_lvl;
   char                            term_input_cap;
   char                            pan_entry_mde[2];
   char                            pos_txn_stat;
   char                            pinless_pgm_ind;
   char                            acq_inst_id[11];
   char                            crd_accpt_id[15];
   char                            term_cmplnt_ind[2];
   char                            on_behalf_svc[2];
   char                            on_behalf_rslt_1;
   char                            rsrvd_star_use;
   char                            mrch_fraud_score[4];
   char                            authn_ind;
   char                            advc_rsn_cde[3];
   char                            advc_detl_cde[4];
} str_f111_mc_db_info_def;
#define str_f111_mc_db_info_def_Size 64
#pragma section str_f111_visa_sms_info
/* Definition STR-F111-VISA-SMS-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f111_visa_sms_info
typedef struct __str_f111_visa_sms_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            mrch_vrfy_val[10];
   char                            cavv_rslt;
   char                            rsk_score[4];
   char                            cond_cdes[6];
   char                            proc_cde[6];
   char                            term_typ;
   char                            moto_ecomm_ind[2];
   char                            excluded_txn_id_rsn_cde;
   char                            stip_rsn_cde[4];
   char                            product_id[2];
   char                            misc_data[6];
   char                            resp_cde[2];
   char                            avs_rslt_cde;
   char                            conv_ind;
   char                            spend_qualified_ind;
   char                            agnt_unq_acc_rslt[5];
} str_f111_visa_sms_info_def;
#define str_f111_visa_sms_info_def_Size 57
#pragma section str_f111_mc_emv_info
/* Definition STR-F111-MC-EMV-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f111_mc_emv_info
typedef struct __str_f111_mc_emv_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            term_cap_ind;
   struct
   {
      char                            srvc[2];
      char                            rslt_1;
      char                            rslt_2;
   } on_behalf_srvc[10];
} str_f111_mc_emv_info_def;
#define str_f111_mc_emv_info_def_Size 45
#pragma section str_f111_visa_info
/* Definition STR-F111-VISA-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f111_visa_info
typedef struct __str_f111_visa_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            aggr_ind;
   char                            risk_score[4];
   char                            risk_cond_cde[6];
   char                            instl_pmnt_ind;
} str_f111_visa_info_def;
#define str_f111_visa_info_def_Size 16
#pragma section str_f111_visa_emv_info
/* Definition STR-F111-VISA-EMV-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f111_visa_emv_info
typedef struct __str_f111_visa_emv_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            term_ent_cap;
} str_f111_visa_emv_info_def;
#define str_f111_visa_emv_info_def_Size 5
#pragma section str_f121_mc_db_info
/* Definition STR-F121-MC-DB-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f121_mc_db_info
typedef struct __str_f121_mc_db_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            authn_ind;
} str_f121_mc_db_info_def;
#define str_f121_mc_db_info_def_Size 5
#pragma section str_f124_watch_list_info
/* Definition STR-F124-WATCH-LIST-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f124_watch_list_info
typedef struct __str_f124_watch_list_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            watch_list_data[8];
} str_f124_watch_list_info_def;
#define str_f124_watch_list_info_def_Size 12
#pragma section str_f127_visa_se_info
/* Definition STR-F127-VISA-SE-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f127_visa_se_info
typedef struct __str_f127_visa_se_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            stan[6];
   char                            acq_bus_id[11];
   char                            retrvl_ref_num[12];
   char                            mrch_vol_ind[2];
   char                            spcl_cond_ind;
   char                            pos_entry_mde[4];
   char                            pos_cond_cde[2];
   char                            term_entry_cap;
   char                            chrgbck_rduc[7];
   char                            acq_mbr_id[8];
   char                            resp_rsn_cde;
} str_f127_visa_se_info_def;
#define str_f127_visa_se_info_def_Size 59
#pragma section str_f127_visa_ne_info
/* Definition STR-F127-VISA-NE-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __str_f127_visa_ne_info
typedef struct __str_f127_visa_ne_info
{
   char                            dataset_id[2];
   char                            lgth[2];
   char                            stan[6];
   char                            acq_bus_id[11];
   char                            retrvl_ref_num[12];
} str_f127_visa_ne_info_def;
#define str_f127_visa_ne_info_def_Size 33
#pragma section visa_gtwy_ax_info
/* Definition VISA-GTWY-AX-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __visa_gtwy_ax_info
typedef struct __visa_gtwy_ax_info
{
   char                            dataset_id[2];
   char                            pos_data_cde[12];
} visa_gtwy_ax_info_def;
#define visa_gtwy_ax_info_def_Size 14
#pragma section visa_gtwy_dscv_info
/* Definition VISA-GTWY-DSCV-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __visa_gtwy_dscv_info
typedef struct __visa_gtwy_dscv_info
{
   char                            dataset_id[2];
   char                            ntwk_info[29];
   char                            txn_qual[46];
   char                            user_fld_aci;
} visa_gtwy_dscv_info_def;
#define visa_gtwy_dscv_info_def_Size 78
#pragma section visa_gtwy_mc_info
/* Definition VISA-GTWY-MC-INFO created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __visa_gtwy_mc_info
typedef struct __visa_gtwy_mc_info
{
   char                            dataset_id[2];
   char                            pos_entry_mde[3];
   char                            pos_pin_captr_cde[2];
   char                            mc_pos_data[26];
   char                            advc_dat_tim[10];
   char                            ecomm_ind[19];
} visa_gtwy_mc_info_def;
#define visa_gtwy_mc_info_def_Size 62
#pragma section ifx_user_data_tkn
/* Definition IFX-USER-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ifx_user_data_tkn
typedef struct __ifx_user_data_tkn
{
   short                           jms_data_lgth;
   char                            jms_data[510];
} ifx_user_data_tkn_def;
#define ifx_user_data_tkn_def_Size 512
#pragma section ifx_user_data_tknx
/* Definition IFX-USER-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ifx_user_data_tknx
typedef struct __ifx_user_data_tknx
{
   char                            jms_data_lgth[3];
   char                            aci_fld1_ifx;
   char                            jms_data[510];
} ifx_user_data_tknx_def;
#define ifx_user_data_tknx_def_Size 514
#pragma section inst_id_num_tkn
/* Definition INST-ID-NUM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __inst_id_num_tkn
typedef struct __inst_id_num_tkn
{
   char                            acq_inst_id_cde[11];
   char                            frwd_inst_id_cde[11];
   char                            rcv_inst_id_cde[11];
   char                            user_fld_aci[27];
} inst_id_num_tkn_def;
#define inst_id_num_tkn_def_Size 60
#pragma section intra_cntry_data_tkn
/* Definition INTRA-CNTRY-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __intra_cntry_data_tkn
typedef struct __intra_cntry_data_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            info[388];
      struct
      {
         struct
         {
            char                            cntry_cde[4];
            char                            prvt_use_fld[249];
         } intra_cntry_data;
         char                            free_form_txt[135];
      } visa;
      struct
      {
         char                            crd_iss_data[19];
         char                            tax_vat[12];
         char                            tax_amt_base[12];
         char                            retl_data[27];
         char                            term_acq_data[16];
         char                            orig_proc_cde[6];
         char                            bill_pmnt_top_up_data[36];
         char                            local_pos_data;
         char                            local_resp_cdes[2];
         char                            orig_txn_data[42];
         char                            iac_tax_amt[12];
         char                            user_fld_co_bnet[203];
      } co_bnet;
      struct
      {
         char                            crd_iss_data[19];
         char                            tax_vat[12];
         char                            tax_amt_base[12];
         char                            retl_data[27];
         char                            term_acq_data[16];
         char                            orig_proc_cde[6];
         char                            bill_pmnt_top_up_data[36];
         char                            local_pos_data;
         char                            local_resp_cdes[2];
         char                            orig_txn_data[42];
         char                            pmnt_ind;
         char                            ichg_cde;
         char                            ichg_fixed_amt[5];
         char                            ichg_pctg[5];
         char                            local_ichg_grp[3];
         char                            iac_tax_amt[12];
         char                            user_fld_co_mds[188];
      } co_mds;
      struct
      {
         char                            term_id[13];
         char                            jis_ii[69];
         char                            prod_cde[7];
         char                            card_cat;
         char                            err_cde[3];
         char                            user_fld_se_031[7];
         char                            acq_co_cde[7];
         char                            iss_co_cde[7];
         char                            auth_xmit_mde;
         char                            entry_ind;
         char                            auth_typ;
         char                            apprv_num[6];
         char                            sales_slip_num[5];
         char                            rvsl_rfnd_sales_slip_num[5];
         char                            tax_amt[7];
         char                            local_txn_dat[8];
         char                            user_fld_jp_bnet[240];
      } jp_bnet;
      struct
      {
         struct
         {
            char                            acct_typ_ind;
            char                            user_fld_combo_crd[3];
         } combo_crd;
         struct
         {
            char                            fund_typ_ind[3];
            char                            user_fld_bill_pay[3];
         } bill_pay;
         struct
         {
            char                            srvc_cde[2];
            char                            num_instl;
            char                            guar;
            char                            guar_amt[8];
            char                            post_setl_dat[6];
            char                            orig_setl_dat[6];
            char                            orig_ref_num[9];
            char                            auth_cde[6];
            char                            user_fld_post_dated[3];
         } post_dated_txn;
         char                            user_fld_br_bnet[336];
      } br_bnet;
      struct
      {
         char                            mrch_tax_id[15];
         char                            user_fld_br_visa[373];
      } br_visa;
      struct
      {
         char                            rcv_nam[35];
         char                            rcv_postal_cde[10];
         char                            rcv_dob[8];
         char                            rcv_acct_num[20];
         char                            user_fld_gb_bnet[315];
      } gb_bnet;
      struct
      {
         char                            billing_prd[5];
         char                            recur_pmnt_ref_num[12];
         char                            crd_accpt_tax_id[20];
         char                            legal_corp_nam[30];
         char                            user_fld_ar_mds[321];
      } ar_mds;
      struct
      {
         char                            pmnt_ind[3];
         char                            mrch_id[16];
         char                            invce_num[12];
         char                            max_defer_days[3];
         char                            num_instl_data[2];
         struct
         {
            char                            due_dat[6];
            char                            pmnt_amt[12];
         } instl[18];
         char                            user_fld_ar_visa_agro[28];
      } ar_visa_agro;
      struct
      {
         char                            natl_use_data[252];
         char                            user_fld_sw_visa[136];
      } sw_visa;
      struct
      {
         char                            mrch_tax_id[12];
         char                            orig_txn_amt[12];
         char                            ttl_amt_applcbl_for_dscnt[12];
         char                            local_reg_id[2];
         char                            dscnt_amt[12];
         char                            dscnt_cap_rch[12];
         char                            user_fld_uy_mds[326];
      } uy_mds;
      struct
      {
         char                            crd_accpt_tax_id[12];
         char                            user_fld_cl_bnet[376];
      } cl_bnet;
      struct
      {
         char                            crd_accpt_tax_id[12];
         char                            user_fld_cl_mds[376];
      } cl_mds;
      struct
      {
         char                            crd_accpt_tax_id[12];
         char                            user_fld_py_bnet[376];
      } py_bnet;
      struct
      {
         char                            crd_accpt_tax_id[12];
         char                            user_fld_py_mds[376];
      } py_mds;
      struct
      {
         char                            instl_pmnt_ind[2];
         char                            num_instl_pmnt[2];
         char                            instl_pmnt_num[2];
         char                            instl_pmnt_ttl_amt[12];
         char                            instl_pmnt_intrst_amt[12];
         char                            vat_instl_pmnt_intrst_amt[10];
         char                            instl_pmnt_rsk_fee_amt[10];
         char                            vat_instl_pmnt_rsk_fee_amt[10];
         char                            irf_ind;
         char                            setl_ind;
         char                            dfr_crdhldr_bill_dat[6];
         char                            dfr_setl_dat[6];
         char                            tip_amt[12];
         char                            irf[10];
         char                            vat_irf[10];
         char                            prmtn_data[20];
         char                            dfr_setl_dat_orig[6];
         char                            user_fld_ar_visa_nnss[256];
      } ar_visa_nnss;
      struct
      {
         char                            ttl_pmnt_cnt[2];
         char                            pmnt_typ;
         char                            mrch_init_txn_typ;
         char                            mrch_init_txn_amt[12];
         char                            unique_id[14];
         char                            mrch_init_txn_freq[2];
         char                            valid_flg;
         char                            valid_ref[20];
         char                            user_fld_in_dci[335];
      } in_dci;
      struct
      {
         char                            months_dfr;
         char                            tax_benefit_law;
         char                            invce_amt[12];
         char                            tax_benefit_ttl_amt[12];
         char                            tip_amt[12];
         char                            tax_benefit_calc_amt[12];
         char                            basis_points_appl[4];
         char                            mrch_invce_series_num[2];
         char                            mrch_invce_num[7];
         char                            fiscal_benefit_retn_agent;
         char                            order_num[25];
         char                            prmtn_cde[12];
         char                            free_txt_for_rcpt[41];
         char                            ichg_reimb_fee[10];
         char                            vat_rate[4];
         char                            vat_natl_irf[10];
         char                            flr_lmt_appl;
         char                            crdhldr_id_recur_pmnt[13];
         char                            mrch_tax_id_imesi_law[12];
         char                            user_fld_uy_visa[196];
      } uy_visa;
   } u_info;
} intra_cntry_data_tkn_def;
#define intra_cntry_data_tkn_def_Size 390
#pragma section invtry_vchr_tkn
/* Definition INVTRY-VCHR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __invtry_vchr_tkn
typedef struct __invtry_vchr_tkn
{
   char                            acq_stock_cde[4];
   char                            iss_stock_typ[4];
   long long                       stock_val;
   char                            dlvr_seq_num[12];
   char                            stock_num[16];
   char                            stock_exp_dat[8];
   char                            rvsl_typ;
   char                            user_fld_aci;
} invtry_vchr_tkn_def;
#define invtry_vchr_tkn_def_Size 54
#pragma section invtry_vchr_tknx
/* Definition INVTRY-VCHR-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __invtry_vchr_tknx
typedef struct __invtry_vchr_tknx
{
   char                            acq_stock_cde[4];
   char                            iss_stock_typ[4];
   char                            stock_val[19];
   char                            dlvr_seq_num[12];
   char                            stock_num[16];
   char                            stock_exp_dat[8];
   char                            rvsl_typ;
   char                            user_fld_aci;
   char                            user_fld1;
} invtry_vchr_tknx_def;
#define invtry_vchr_tknx_def_Size 66
#pragma section issuer_fee_rebate_tkn
/* Definition ISSUER-FEE-REBATE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __issuer_fee_rebate_tkn
typedef struct __issuer_fee_rebate_tkn
{
   long long                       tran_fee;
   long long                       orig_fee;
   char                            rvsl_cde;
   char                            user_fld1;
   long long                       flat_fee;
   short                           pcnt_fee;
   char                            min_max;
   char                            auth_ind;
} issuer_fee_rebate_tkn_def;
#define issuer_fee_rebate_tkn_def_Size 30
#pragma section issuer_fee_rebate_tknx
/* Definition ISSUER-FEE-REBATE-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __issuer_fee_rebate_tknx
typedef struct __issuer_fee_rebate_tknx
{
   char                            tran_fee[19];
   char                            orig_fee[19];
   char                            rvsl_cde;
   char                            user_fld1;
   char                            flat_fee[19];
   char                            pcnt_fee[5];
   char                            min_max;
   char                            auth_ind;
} issuer_fee_rebate_tknx_def;
#define issuer_fee_rebate_tknx_def_Size 66
#pragma section iss_tknztn_data_tkn
/* Definition ISS-TKNZTN-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __iss_tknztn_data_tkn
typedef struct __iss_tknztn_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   char                            info[255];
} iss_tknztn_data_tkn_def;
#define iss_tknztn_data_tkn_def_Size 260
#pragma section language_tkn
/* Definition LANGUAGE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __language_tkn
typedef struct __language_tkn
{
   char                            lang_id[3];
   char                            lgth[3];
   char                            lang_info[124];
} language_tkn_def;
#define language_tkn_def_Size 130
#pragma section micr_data_tkn
/* Definition MICR-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __micr_data_tkn
typedef struct __micr_data_tkn
{
   char                            micr_data[64];
} micr_data_tkn_def;
#define micr_data_tkn_def_Size 64
#pragma section migr_atm_data1_tkn
/* Definition MIGR-ATM-DATA1-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __migr_atm_data1_tkn
typedef struct __migr_atm_data1_tkn
{
   char                            term_capture_flag;
   char                            atm_err_stat;
   char                            user_fld_aci[18];
} migr_atm_data1_tkn_def;
#define migr_atm_data1_tkn_def_Size 20
#pragma section migr_atm_itm_srvcs_tkn
/* Definition MIGR-ATM-ITM-SRVCS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __migr_atm_itm_srvcs_tkn
typedef struct __migr_atm_itm_srvcs_tkn
{
   char                            itm_admin_cde[2];
   char                            itm_session_id[32];
   char                            user_fld_aci[6];
} migr_atm_itm_srvcs_tkn_def;
#define migr_atm_itm_srvcs_tkn_def_Size 40
#pragma section migr_atm_setl_ttls_tkn
/* Definition MIGR-ATM-SETL-TTLS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __migr_atm_setl_ttls_tkn
typedef struct __migr_atm_setl_ttls_tkn
{
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } admin_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } admin_tim;
   char                            admin_cde[2];
   union
   {
      char                            admin_data[752];
      struct
      {
         struct
         {
            char                            contents[2];
            char                            beg_cash[19];
            char                            cash_incr[19];
            char                            cash_decr[19];
            char                            cash_out[19];
            char                            end_cash[19];
            char                            crncy_cde[3];
            char                            user_fld1;
         } hopr[6];
         char                            num_dep[5];
         char                            amt_dep[19];
         char                            num_cmrcl_dep[5];
         char                            amt_cmrcl_dep[19];
         char                            num_pay[5];
         char                            amt_pay[19];
         char                            num_msg[5];
         char                            num_chk[5];
         char                            amt_chk[19];
         char                            num_logonly[5];
         char                            num_env[5];
         char                            crds_ret[5];
         char                            setl_crncy_cde[3];
         char                            user_fld2;
         char                            tim_ofst[5];
         char                            setl_area[20];
         char                            user_fld3;
      } term_setl;
      struct
      {
         char                            hopr_num;
         char                            hopr_contents[2];
         char                            amt[12];
         char                            crncy_cde[3];
         char                            user_fld4;
         char                            tim_ofst[5];
         char                            cash_area[21];
         char                            user_fld2[707];
      } term_cash;
      struct
      {
         char                            term_db[12];
         char                            term_cr[12];
         char                            on_us_db[12];
         char                            on_us_cr[12];
         char                            crncy_cde[3];
         char                            user_fld5;
         char                            tim_ofst[5];
         char                            ttl_area[20];
         char                            user_fld3[675];
      } setl_ttl;
   } u_admin_data;
} migr_atm_setl_ttls_tkn_def;
#define migr_atm_setl_ttls_tkn_def_Size 768
#pragma section migr_cust_data_tkn
/* Definition MIGR-CUST-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __migr_cust_data_tkn
typedef struct __migr_cust_data_tkn
{
   char                            cust_id_typ[2];
   char                            cust_id[36];
   char                            bank_id_typ[2];
   char                            bank_id[34];
   char                            proc_cde[6];
} migr_cust_data_tkn_def;
#define migr_cust_data_tkn_def_Size 80
#pragma section migr_eps_hiso_tkn
/* Definition MIGR-EPS-HISO-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __migr_eps_hiso_tkn
typedef struct __migr_eps_hiso_tkn
{
   char                            migration_ind;
   char                            user_fld_aci;
} migr_eps_hiso_tkn_def;
#define migr_eps_hiso_tkn_def_Size 2
#pragma section migr_pos_data1_tkn
/* Definition MIGR-POS-DATA1-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __migr_pos_data1_tkn
typedef struct __migr_pos_data1_tkn
{
   char                            term_typ[2];
   char                            adj_proc;
   char                            user_fld_aci[17];
} migr_pos_data1_tkn_def;
#define migr_pos_data1_tkn_def_Size 20
#pragma section mobile_pmnts_tkn
/* Definition MOBILE-PMNTS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mobile_pmnts_tkn
typedef struct __mobile_pmnts_tkn
{
   char                            pmnt_typ[2];
   union
   {
      char                            info[70];
      struct
      {
         char                            mobile_phn_num[15];
         char                            convenience_fee[40];
         char                            user_fld_mc_remt[15];
      } mc_remt;
      struct
      {
         char                            pos_term_loc;
         char                            adnl_term_loc;
         char                            order_id[10];
         char                            user_fld_mc_crdlss_atm[58];
      } mc_crdlss_atm;
   } u_info;
} mobile_pmnts_tkn_def;
#define mobile_pmnts_tkn_def_Size 72
#pragma section mult_crncy_tkn
/* Definition MULT-CRNCY-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_crncy_tkn
typedef struct __mult_crncy_tkn
{
   long long                       txn_amt_1;
   long long                       txn_amt_2;
   char                            txn_crncy_cde[3];
   char                            user_fld1;
   char                            crncy_flg[10];
   short                           num_crncy;
   struct
   {
      long long                       amt_1;
      long long                       amt_2;
      char                            crncy_cde[3];
      char                            conv_rate[8];
      char                            conv_dat[4];
      char                            user_fld2;
   } crncy[5];
} mult_crncy_tkn_def;
#define mult_crncy_tkn_def_Size 192
#pragma section mult_crncy_tknx
/* Definition MULT-CRNCY-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_crncy_tknx
typedef struct __mult_crncy_tknx
{
   char                            txn_amt_1[19];
   char                            txn_amt_2[19];
   char                            txn_crncy_cde[3];
   char                            user_fld1;
   char                            crncy_flg[10];
   char                            num_crncy[5];
   char                            user_fld3;
   struct
   {
      char                            amt_1[19];
      char                            amt_2[19];
      char                            crncy_cde[3];
      char                            conv_rate[8];
      char                            conv_dat[4];
      char                            user_fld2;
   } crncy[5];
} mult_crncy_tknx_def;
#define mult_crncy_tknx_def_Size 328
#pragma section mult_ln_tkn
/* Definition MULT-LN-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_ln_tkn
typedef struct __mult_ln_tkn
{
   char                            acq_ln[4];
   char                            site_ind;
   char                            user_fld1[3];
} mult_ln_tkn_def;
#define mult_ln_tkn_def_Size 8
#pragma section mult_ln_tknx
/* Definition MULT-LN-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_ln_tknx
typedef struct __mult_ln_tknx
{
   char                            acq_ln[4];
   char                            site_ind;
   char                            user_fld1[3];
} mult_ln_tknx_def;
#define mult_ln_tknx_def_Size 8
#pragma section nam_tkn
/* Definition NAM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __nam_tkn
typedef struct __nam_tkn
{
   short                           acct_cnt;
   struct
   {
      char                            ind;
      char                            cust_short_nam[40];
      char                            user_fld1;
   } acct[3];
} nam_tkn_def;
#define nam_tkn_def_Size 128
#pragma section nam_tknx
/* Definition NAM-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __nam_tknx
typedef struct __nam_tknx
{
   char                            acct_cnt[2];
   struct
   {
      char                            ind;
      char                            cust_short_nam[40];
      char                            user_fld1;
   } acct[3];
} nam_tknx_def;
#define nam_tknx_def_Size 128
#pragma section ntwk_rsk_data_tkn
/* Definition NTWK-RSK-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ntwk_rsk_data_tkn
typedef struct __ntwk_rsk_data_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            info[40];
      struct
      {
         struct
         {
            char                            score[2];
            char                            rsn_cde[2];
         } rsk;
         struct
         {
            char                            cde1[2];
            char                            cer_id[2];
            char                            cde3[2];
         } cond;
         char                            user_fld_aci[30];
      } visa_rsk;
      struct
      {
         char                            rsk_ind[6];
         char                            real_time_scoring[3];
         struct
         {
            char                            cde1[4];
            char                            cde2[4];
            char                            cde3[4];
         } rsn_cde;
         char                            auth_dcsn[2];
         char                            user_fld_aci[17];
      } veas_rsk;
   } u_info;
} ntwk_rsk_data_tkn_def;
#define ntwk_rsk_data_tkn_def_Size 42
#pragma section ntwk_tkn_srvc_tkn
/* Definition NTWK-TKN-SRVC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ntwk_tkn_srvc_tkn
typedef struct __ntwk_tkn_srvc_tkn
{
   char                            frmt_cde[2];
   struct
   {
      char                            pan_tkn_data[19];
      char                            tkn_assurance_lvl[2];
      char                            tkn_rq_id[11];
      char                            pan_tkn_ind;
      char                            pan_tkn_exp_dat[4];
      char                            tkn_typ[2];
      char                            txn_typ;
      union
      {
         char                            user_fld1_aci;
         char                            strg_tech;
      } u_user_fld1_aci;
      char                            pan_last_four_dgt[4];
      char                            acct_stat;
      union
      {
         char                            spcf_use[20];
         struct
         {
            char                            act_ind;
            char                            rplmt_pan_exp_dat[4];
            char                            tkn_stat;
            char                            user_fld2_aci[14];
         } tkn_maint_data;
         struct
         {
            char                            de_tknztn_txn_id[15];
            char                            adnl_tkn_resp_info;
            char                            user_fld_aci[4];
         } txn_id_data;
      } u_spcf_use;
   } genrc;
} ntwk_tkn_srvc_tkn_def;
#define ntwk_tkn_srvc_tkn_def_Size 68
#pragma section orig_crncy_60_tkn
/* Definition ORIG-CRNCY-60-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __orig_crncy_60_tkn
typedef struct __orig_crncy_60_tkn
{
   long long                       amt_1;
   long long                       amt_2;
   char                            crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            conv_ind;
   char                            user_fld1[8];
} orig_crncy_60_tkn_def;
#define orig_crncy_60_tkn_def_Size 40
#pragma section orig_crncy_60_tknx
/* Definition ORIG-CRNCY-60-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __orig_crncy_60_tknx
typedef struct __orig_crncy_60_tknx
{
   char                            amt_1[19];
   char                            amt_2[19];
   char                            crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            conv_ind;
   char                            user_fld1[8];
} orig_crncy_60_tknx_def;
#define orig_crncy_60_tknx_def_Size 62
#pragma section pan_mapping_tkn
/* Definition PAN-MAPPING-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pan_mapping_tkn
typedef struct __pan_mapping_tkn
{
   char                            acct_num_ind;
   char                            acct_num[19];
   char                            exp_dat[4];
   char                            prod_cde[3];
   char                            user_fld_aci[3];
} pan_mapping_tkn_def;
#define pan_mapping_tkn_def_Size 30
#pragma section p2p_addl_data_tkn
/* Definition P2P-ADDL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __p2p_addl_data_tkn
typedef struct __p2p_addl_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   union
   {
      char                            info[135];
      struct
      {
         char                            unique_ref_num[19];
         char                            fund_src[2];
         char                            participant_id[30];
         char                            addl_msg[65];
         char                            txn_rsn[2];
         char                            user_fld_mc[17];
      } mc;
      struct
      {
         char                            xfer_srvc_prvd_nam[25];
         char                            pmnt_fclt_nam[25];
         struct
         {
            char                            ref_num[2];
            char                            typ_cde[4];
            char                            subtyp_cde[2];
            char                            val[35];
            char                            iss_cntry[3];
         } cust_id;
         char                            rcpnt_acct_id[34];
         char                            rcpnt_acct_id_typ_cde[2];
         char                            user_fld_visa[3];
      } visa;
      struct
      {
         char                            unique_ref_num[19];
         char                            fund_src[2];
         char                            user_fld_gicc[114];
      } gicc;
   } u_info;
} p2p_addl_data_tkn_def;
#define p2p_addl_data_tkn_def_Size 140
#pragma section p2p_rcv_data_tkn
/* Definition P2P-RCV-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __p2p_rcv_data_tkn
typedef struct __p2p_rcv_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   union
   {
      char                            info[255];
      struct
      {
         char                            acct_num[20];
         char                            first_nam[35];
         char                            middle_nam;
         char                            last_nam[35];
         char                            street_addr[50];
         char                            city[25];
         char                            st[3];
         char                            cntry[3];
         char                            postal_cde[10];
         char                            phn_num[20];
         char                            dob[8];
         char                            id_typ[2];
         char                            id_num[25];
         char                            id_cntry_cde[3];
         char                            id_exp_dat[8];
         char                            natl_cntry_cde[3];
         char                            birth_cntry_cde[3];
         char                            user_fld_mc;
      } mc;
      struct
      {
         char                            nam[24];
         char                            user_fld_puli[231];
      } puli;
      struct
      {
         char                            nam[24];
         char                            user_fld_nyci[231];
      } nyci;
      struct
      {
         char                            nam[24];
         char                            user_fld_dscv[231];
      } dscv;
      struct
      {
         char                            first_nam[35];
         char                            middle_nam[35];
         char                            last_nam[35];
         char                            addr[99];
         char                            city[25];
         char                            st[3];
         char                            cntry[3];
         char                            user_fld_visa[20];
      } visa;
   } u_info;
} p2p_rcv_data_tkn_def;
#define p2p_rcv_data_tkn_def_Size 260
#pragma section p2p_sender_data_tkn
/* Definition P2P-SENDER-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __p2p_sender_data_tkn
typedef struct __p2p_sender_data_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   union
   {
      char                            info[255];
      struct
      {
         char                            acct_num[20];
         char                            first_nam[35];
         char                            middle_nam;
         char                            last_nam[35];
         char                            street_addr[50];
         char                            city[25];
         char                            st[3];
         char                            cntry[3];
         char                            postal_cde[10];
         char                            phn_num[20];
         char                            dob[8];
         char                            id_typ[2];
         char                            id_num[25];
         char                            id_cntry_cde[3];
         char                            id_exp_dat[8];
         char                            natl_cntry_cde[3];
         char                            birth_cntry_cde[3];
         char                            user_fld_mc;
      } mc;
      struct
      {
         char                            bus_appl_id[2];
         char                            unique_ref_num[19];
         char                            acct_num[34];
         char                            nam[24];
         char                            street_addr[50];
         char                            city[25];
         char                            st[2];
         char                            cntry[3];
         char                            postal_cde[10];
         char                            src_of_fund[2];
         char                            dob[8];
         char                            user_fld_puli[76];
      } puli;
      struct
      {
         char                            uniq_ref_num[19];
         char                            acct_num[34];
         char                            nam[30];
         char                            addr[50];
         char                            city[25];
         char                            st[2];
         char                            cntry[3];
         char                            postal_cde[10];
         char                            src_of_fund[2];
         char                            dob[8];
         char                            recipient_nam[24];
         char                            gnrl_info[48];
      } stri;
      struct
      {
         char                            unique_ref_num[19];
         char                            nam[24];
         char                            first_nam[24];
         char                            middle_nam[24];
         char                            last_nam[24];
         char                            street_addr[50];
         char                            city[25];
         char                            st[3];
         char                            cntry[3];
         char                            postal_cde[10];
         char                            acct_num[34];
         char                            bus_appl_id[2];
         char                            src_of_fund[2];
         char                            user_fld_nyci[11];
      } nyci;
      struct
      {
         char                            pmnt_typ[3];
         char                            unique_ref_num[19];
         char                            nam[40];
         char                            street_addr[50];
         char                            city[25];
         char                            cntry[3];
         char                            postal_cde[15];
         char                            acct_num[38];
         char                            src_of_fund[2];
         char                            dob[8];
         char                            user_fld_dscv[52];
      } dscv;
      struct
      {
         char                            first_nam[35];
         char                            middle_nam[35];
         char                            dfr_oct_rqst_typ[2];
         char                            dfr_oct_dat_tim[24];
         char                            prps_of_pmnt[12];
         char                            last_nam[35];
         char                            user_fld_visa[112];
      } visa;
   } u_info;
} p2p_sender_data_tkn_def;
#define p2p_sender_data_tkn_def_Size 260
#pragma section p2p_txn_tkn
/* Definition P2P-TXN-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __p2p_txn_tkn
typedef struct __p2p_txn_tkn
{
   char                            intended_use_flg;
   char                            bus_use_flg;
   char                            trc_num[15];
   char                            third_party_id[60];
   char                            third_party_acct_num[25];
   char                            third_party_phn_num[25];
   char                            third_party_invc_num[25];
   char                            third_party_email_addr[60];
   char                            third_party_descr[50];
   char                            recipient_email_addr[60];
   char                            recipient_num[40];
   char                            user_fld1[20];
} p2p_txn_tkn_def;
#define p2p_txn_tkn_def_Size 382
#pragma section p2p_txn2_tkn
/* Definition P2P-TXN2-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __p2p_txn2_tkn
typedef struct __p2p_txn2_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            info[398];
      struct
      {
         struct
         {
            char                            unique_ref_num[19];
            char                            nam[24];
            char                            addr[91];
            char                            phn_num[20];
            char                            dob[8];
            char                            msg[37];
         } sender;
         struct
         {
            char                            unique_ref_num[19];
            char                            nam[24];
            char                            addr[91];
            char                            phn_num[20];
            char                            dob[8];
            char                            msg[37];
         } rcv;
      } mc;
      struct
      {
         char                            unique_ref_num[19];
         char                            user_id[24];
         char                            addr[91];
         char                            phn_num[20];
         char                            dob[8];
         char                            msg[37];
         char                            user_fld_mc;
         char                            user_fld_aci[198];
      } mc_sender;
      struct
      {
         char                            ref_num[16];
         char                            acct_num[34];
         char                            nam[30];
         char                            addr[35];
         char                            city[25];
         char                            st[2];
         char                            cntry[3];
         char                            fund_src[2];
         char                            recipient_nam[30];
         char                            claim_cde[20];
         char                            dob[8];
         char                            crd_typ_cde;
         char                            bill_crncy_cde[3];
         char                            bill_crncy_cde_mnr_unit;
         char                            iss_bus_id[8];
         char                            crd_iss_cntry_cde[3];
         char                            fast_funds_ind;
         char                            blk_all_oct;
         char                            onl_gmbl_blk_ind;
         char                            geo_rstrct_ind;
         char                            dest_crncy_cde[3];
         char                            dest_crncy_cde_mnr_unit;
         char                            iss_inst_cntry_cde[3];
         char                            user_fld_aci[166];
      } visa_sender;
      struct
      {
         char                            sender_proxy[40];
         char                            recipient_proxy[40];
         char                            txn_ref[18];
         char                            sender_sort_cde[6];
         char                            sender_acct[8];
         char                            pmnt_ref[18];
         char                            rcv_sort_cde[6];
         char                            rcv_acct[8];
         char                            sender_nam[40];
         char                            rcv_nam[40];
         char                            user_fld_aci[174];
      } link;
      struct
      {
         char                            ref_num[16];
         char                            fund_src[2];
         char                            last_nam[25];
         char                            first_nam[25];
         char                            addr[25];
         char                            city[25];
         char                            st[2];
         char                            zip[9];
         char                            phn_num[10];
         char                            rcv_nam[25];
         char                            cntry_cde[3];
         char                            send_rcv_acct_typ[2];
         char                            send_rcv_acct_id[50];
         char                            user_fld_shzm;
         char                            user_fld_aci[178];
      } shzm_sender;
      struct
      {
         char                            ref_num[16];
         char                            acct_num[34];
         char                            nam[30];
         char                            addr[35];
         char                            city[25];
         char                            st[2];
         char                            cntry[3];
         char                            user_fld_cssi_sender;
         char                            user_fld_aci[252];
      } cssi_sender;
      struct
      {
         char                            ref_num[16];
         char                            acct_num[34];
         char                            nam[30];
         char                            addr[35];
         char                            city[25];
         char                            st[2];
         char                            cntry[3];
         char                            fund_src[2];
         char                            recipient_nam[30];
         char                            claim_cde[20];
         char                            dob[8];
         char                            crd_typ_cde;
         char                            bill_crncy_cde[3];
         char                            bill_crncy_cde_mnr_unit;
         char                            iss_bus_id[8];
         char                            crd_iss_cntry_cde[3];
         char                            fast_funds_ind;
         char                            blk_all_oct;
         char                            onl_gmbl_blk_ind;
         char                            geo_rstrct_ind;
         char                            dest_crncy_cde[3];
         char                            dest_crncy_cde_mnr_unit;
         char                            iss_inst_cntry_cde[3];
         char                            user_fld_aci[166];
      } genrc_acq_sender;
   } u_info;
} p2p_txn2_tkn_def;
#define p2p_txn2_tkn_def_Size 400
#pragma section pinc_tkn
/* Definition PINC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pinc_tkn
typedef struct __pinc_tkn
{
   char                            new_pin_frmt;
   char                            new_pin_ofst[16];
   char                            pin_cnt;
   char                            new_pin_size[2];
   char                            new_pin_1[16];
   char                            new_pin_2[16];
} pinc_tkn_def;
#define pinc_tkn_def_Size 52
#pragma section pre_pay_genrc_rcpt_tkn
/* Definition PRE-PAY-GENRC-RCPT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_genrc_rcpt_tkn
typedef struct __pre_pay_genrc_rcpt_tkn
{
   short                           msg_ts[3];
   char                            dflt_rcpt_msg_flg;
   char                            user_fld_aci;
   short                           lgth;
   char                            msg[200];
} pre_pay_genrc_rcpt_tkn_def;
#define pre_pay_genrc_rcpt_tkn_def_Size 210
#pragma section pre_pay_genrc_rcpt_tknx
/* Definition PRE-PAY-GENRC-RCPT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_genrc_rcpt_tknx
typedef struct __pre_pay_genrc_rcpt_tknx
{
   char                            msg_ts[3][5];
   char                            dflt_rcpt_msg_flg;
   char                            user_fld_aci;
   char                            lgth[3];
   char                            msg[200];
} pre_pay_genrc_rcpt_tknx_def;
#define pre_pay_genrc_rcpt_tknx_def_Size 220
#pragma section pre_pay_onl_rcpt_tkn
/* Definition PRE-PAY-ONL-RCPT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_onl_rcpt_tkn
typedef struct __pre_pay_onl_rcpt_tkn
{
   short                           lgth;
   union
   {
      char                            buf[150];
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } exp_dat;
         char                            num[19];
         char                            user_fld_aci[125];
      } onl_frmt1;
   } u_buf;
} pre_pay_onl_rcpt_tkn_def;
#define pre_pay_onl_rcpt_tkn_def_Size 152
#pragma section pre_pay_onl_rcpt_tknx
/* Definition PRE-PAY-ONL-RCPT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_onl_rcpt_tknx
typedef struct __pre_pay_onl_rcpt_tknx
{
   char                            lgth[3];
   char                            user_fld1;
   union
   {
      char                            buf[150];
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } exp_dat;
         char                            num[19];
         char                            user_fld_aci[125];
      } onl_frmt1;
   } u_buf;
} pre_pay_onl_rcpt_tknx_def;
#define pre_pay_onl_rcpt_tknx_def_Size 154
#pragma section pre_pay_orig_data_tkn
/* Definition PRE-PAY-ORIG-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_orig_data_tkn
typedef struct __pre_pay_orig_data_tkn
{
   char                            trk2[40];
   char                            txn_cde[2];
   char                            crd_fiid[4];
   char                            srv[2];
   char                            user_fld_aci[18];
} pre_pay_orig_data_tkn_def;
#define pre_pay_orig_data_tkn_def_Size 66
#pragma section pre_pay_rcpt_tkn
/* Definition PRE-PAY-RCPT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_rcpt_tkn
typedef struct __pre_pay_rcpt_tkn
{
   short                           lgth;
   char                            fiid[4];
   union
   {
      char                            buf[256];
      struct
      {
         char                            oper_msg[200];
         char                            user_fld[56];
      } pre_pay_rcpt;
   } u_buf;
} pre_pay_rcpt_tkn_def;
#define pre_pay_rcpt_tkn_def_Size 262
#pragma section pre_pay_rcpt_tknx
/* Definition PRE-PAY-RCPT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_rcpt_tknx
typedef struct __pre_pay_rcpt_tknx
{
   char                            lgth[3];
   char                            user_fld;
   char                            fiid[4];
   union
   {
      char                            buf[256];
      struct
      {
         char                            oper_msg[200];
         char                            user_fld[56];
      } pre_pay_rcpt;
   } u_buf;
} pre_pay_rcpt_tknx_def;
#define pre_pay_rcpt_tknx_def_Size 264
#pragma section pre_pay_resp_tkn
/* Definition PRE-PAY-RESP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_resp_tkn
typedef struct __pre_pay_resp_tkn
{
   long long                       tax_amt;
   char                            resp_ind;
   char                            carrier_cde[5];
   char                            carrier_nam[20];
   char                            carrier_phn_num[15];
   char                            user_fld_aci;
} pre_pay_resp_tkn_def;
#define pre_pay_resp_tkn_def_Size 50
#pragma section pre_pay_resp_tknx
/* Definition PRE-PAY-RESP-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_resp_tknx
typedef struct __pre_pay_resp_tknx
{
   char                            tax_amt[19];
   char                            resp_ind;
   char                            carrier_cde[5];
   char                            carrier_nam[20];
   char                            carrier_phn_num[15];
   char                            user_fld_aci;
   char                            user_fld1;
} pre_pay_resp_tknx_def;
#define pre_pay_resp_tknx_def_Size 62
#pragma section pre_pay_selct_tkn
/* Definition CARRIER-ENTRY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __carrier_entry
typedef struct __carrier_entry
{
   char                            cde[5];
   char                            user_fld_aci;
   char                            nam[20];
   short                           num_amt;
   long long                       amt[6];
} carrier_entry_def;
#define carrier_entry_def_Size 76
/* Definition PRE-PAY-SELCT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_selct_tkn
typedef struct __pre_pay_selct_tkn
{
   char                            frmt_cde[2];
   short                           lgth;
   union
   {
      char                            info[610];
      struct
      {
         short                           num_amt;
         long long                       amt[6];
         char                            reserved[560];
      } amt_list;
      struct
      {
         unsigned short                  num_carrier;
         struct
         {
            char                            cde[5];
            char                            user_fld_aci;
            char                            nam[20];
            short                           num_amt;
            long long                       amt[6];
         } carrier[8];
      } carrier_list;
   } u_info;
} pre_pay_selct_tkn_def;
#define pre_pay_selct_tkn_def_Size 614
#pragma section pre_pay_selct_tknx
/* Definition CARRIER-ENTRYX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __carrier_entryx
typedef struct __carrier_entryx
{
   char                            cde[5];
   char                            user_fld_aci;
   char                            nam[20];
   char                            num_amt[5];
   char                            user_fld4;
   struct
   {
      char                            amt[19];
      char                            user_fld5;
   } amount[6];
} carrier_entryx_def;
#define carrier_entryx_def_Size 152
/* Definition PRE-PAY-SELCT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_selct_tknx
typedef struct __pre_pay_selct_tknx
{
   char                            frmt_cde[2];
   char                            lgth[4];
   union
   {
      char                            info[1222];
      struct
      {
         char                            num_amt[5];
         char                            user_fld1;
         struct
         {
            char                            amt[19];
            char                            user_fld2;
         } amount[6];
         char                            reserved[1096];
      } amt_list;
      struct
      {
         char                            num_carrier[5];
         char                            user_fld3;
         struct
         {
            char                            cde[5];
            char                            user_fld_aci;
            char                            nam[20];
            char                            num_amt[5];
            char                            user_fld4;
            struct
            {
               char                            amt[19];
               char                            user_fld5;
            } amount[6];
         } carrier[8];
      } carrier_list;
   } u_info;
} pre_pay_selct_tknx_def;
#define pre_pay_selct_tknx_def_Size 1228
#pragma section pre_pay_swi_tkn
/* Definition PRE-PAY-SWI-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_swi_tkn
typedef struct __pre_pay_swi_tkn
{
   short                           lgth;
   char                            buf[448];
} pre_pay_swi_tkn_def;
#define pre_pay_swi_tkn_def_Size 450
#pragma section pre_pay_swi_tknx
/* Definition PRE-PAY-SWI-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_swi_tknx
typedef struct __pre_pay_swi_tknx
{
   char                            lgth[3];
   char                            user_fld1;
   char                            buf[448];
} pre_pay_swi_tknx_def;
#define pre_pay_swi_tknx_def_Size 452
#pragma section pre_pay_top_up_tkn
/* Definition PRE-PAY-TOP-UP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_top_up_tkn
typedef struct __pre_pay_top_up_tkn
{
   struct
   {
      char                            rte_method;
      char                            trk2_data[39];
   } trk2;
   char                            txn_cde[2];
   char                            phn_num[15];
   char                            pmnt_method;
   char                            ref[15];
   char                            orig_ref[15];
   char                            crd_typ[2];
   char                            oper_nam_rcpt[16];
   char                            oper_id[4];
   char                            svc_bal[18];
   char                            other_bal[18];
   char                            actvn_cde[16];
   char                            apprv_cde[15];
   char                            resp_cde[5];
   char                            oper_rtlr_id[19];
   char                            rvsl_cde;
} pre_pay_top_up_tkn_def;
#define pre_pay_top_up_tkn_def_Size 202
#pragma section pre_pay_vchr_rcpt_tkn
/* Definition PRE-PAY-VCHR-RCPT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_vchr_rcpt_tkn
typedef struct __pre_pay_vchr_rcpt_tkn
{
   short                           lgth;
   union
   {
      char                            buf[150];
      struct
      {
         char                            btch_id[11];
         char                            cntl_num[11];
         char                            exp_days[4];
         char                            num[19];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } shelf_dat;
         char                            user_fld_aci[99];
      } vchr_frmt1;
   } u_buf;
} pre_pay_vchr_rcpt_tkn_def;
#define pre_pay_vchr_rcpt_tkn_def_Size 152
#pragma section pre_pay_vchr_rcpt_tknx
/* Definition PRE-PAY-VCHR-RCPT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_vchr_rcpt_tknx
typedef struct __pre_pay_vchr_rcpt_tknx
{
   char                            lgth[3];
   char                            user_fld1;
   union
   {
      char                            buf[150];
      struct
      {
         char                            btch_id[11];
         char                            cntl_num[11];
         char                            exp_days[4];
         char                            num[19];
         char                            shelf_dat[6];
         char                            user_fld_aci[99];
      } vchr_frmt1;
   } u_buf;
} pre_pay_vchr_rcpt_tknx_def;
#define pre_pay_vchr_rcpt_tknx_def_Size 154
#pragma section prism_tkn
/* Definition PRISM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __prism_tkn
typedef struct __prism_tkn
{
   char                            exp_dat[4];
   char                            cur_auth_amt[12];
   char                            pend_auths[12];
   char                            prefix_lgth[2];
   char                            open_to_buy[12];
   char                            auth_lmt[12];
   char                            auth_bal[12];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_pmnt_dat;
   char                            last_pmnt_amt[12];
   char                            acct_stat;
   char                            crd_stat;
   char                            auth_lmt_ind;
   union
   {
      char                            user_fld1;
      char                            send_msg_to_prm;
   } u_user_fld1;
} prism_tkn_def;
#define prism_tkn_def_Size 88
#pragma section prm_rt_tkn
/* Definition PRM-RT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __prm_rt_tkn
typedef struct __prm_rt_tkn
{
   char                            real_time_req_type;
   char                            pip_response_request;
   char                            real_time_status;
   char                            real_time_score[3];
   char                            rtr_rule_fired[4];
   char                            rtr_disposition;
   union
   {
      char                            rtr_filler;
      char                            rts_disposition;
   } u_rtr_filler;
} prm_rt_tkn_def;
#define prm_rt_tkn_def_Size 12
#pragma section pseudo_crd_num_tkn
/* Definition PSEUDO-CRD-NUM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pseudo_crd_num_tkn
typedef struct __pseudo_crd_num_tkn
{
   char                            pseudo_crd_num[19];
   char                            exp_dat[4];
   char                            user_fld1[11];
} pseudo_crd_num_tkn_def;
#define pseudo_crd_num_tkn_def_Size 34
#pragma section rcpt_data_tkn
/* Definition RCPT-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rcpt_data_tkn
typedef struct __rcpt_data_tkn
{
   short                           lgth;
   char                            buf[512];
} rcpt_data_tkn_def;
#define rcpt_data_tkn_def_Size 514
#pragma section rcpt_data_tknx
/* Definition RCPT-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rcpt_data_tknx
typedef struct __rcpt_data_tknx
{
   char                            lgth[4];
   char                            buf[512];
} rcpt_data_tknx_def;
#define rcpt_data_tknx_def_Size 516
#pragma section rvsl_dat_tim_tkn
/* Definition RVSL-DAT-TIM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rvsl_dat_tim_tkn
typedef struct __rvsl_dat_tim_tkn
{
   char                            txn_dat[8];
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } txn_tim;
   char                            rvsl_cde[2];
   char                            user_fld1[10];
} rvsl_dat_tim_tkn_def;
#define rvsl_dat_tim_tkn_def_Size 28
#pragma section sepa_acct_data_tkn
/* Definition SEPA-ACCT-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sepa_acct_data_tkn
typedef struct __sepa_acct_data_tkn
{
   char                            iban[34];
   char                            crd_num[8];
   char                            bic[11];
   char                            user_fld_aci[25];
   char                            nam_lgth[2];
   char                            nam[99];
   char                            nam_filler;
} sepa_acct_data_tkn_def;
#define sepa_acct_data_tkn_def_Size 180
#pragma section split_txn_rte_tkn
/* Definition SPLIT-TXN-RTE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __split_txn_rte_tkn
typedef struct __split_txn_rte_tkn
{
   char                            txn_resp_ind[2];
   char                            txn_stat[2];
   char                            orig_pro_name[16];
   char                            funds_auth_dest[16];
   char                            funds_auth_stat;
   char                            rte_hrchy[2];
   char                            scnd_svc_dest[16];
   char                            scnd_svc_stat;
   char                            tertiary_svc_dest[16];
   char                            offline_auth_fname[35];
   char                            orig_funds_responder;
   char                            orig_funds_resp_cde[3];
   char                            user_fld_aci[47];
} split_txn_rte_tkn_def;
#define split_txn_rte_tkn_def_Size 158
#pragma section surcharge_data_tkn
/* Definition SURCHARGE-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __surcharge_data_tkn
typedef struct __surcharge_data_tkn
{
   long long                       tran_fee;
   long long                       orig_fee;
   char                            term_sur_profile[4];
   char                            rvsl_cde;
   char                            user_fld1;
   long long                       flat_fee;
   short                           pcnt_fee;
   char                            min_max;
   char                            auth_ind;
} surcharge_data_tkn_def;
#define surcharge_data_tkn_def_Size 34
#pragma section surcharge_data_tknx
/* Definition SURCHARGE-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __surcharge_data_tknx
typedef struct __surcharge_data_tknx
{
   char                            tran_fee[19];
   char                            orig_fee[19];
   char                            term_sur_profile[4];
   char                            rvsl_cde;
   char                            flat_fee[19];
   char                            pcnt_fee[5];
   char                            min_max;
   char                            auth_ind;
   char                            user_fld1;
} surcharge_data_tknx_def;
#define surcharge_data_tknx_def_Size 70
#pragma section swi_cmn_data_tkn
/* Definition SWI-CMN-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __swi_cmn_data_tkn
typedef struct __swi_cmn_data_tkn
{
   char                            stan[6];
   char                            retrvl_ref_num[12];
   char                            netwk_id[4];
   char                            resp_cde[3];
   char                            isa_ind;
   char                            isa_amt[8];
   char                            fee_pgm_ind[3];
   char                            on_off_prem_ind;
   char                            cross_border_txn_ind;
   char                            cross_border_crncy_ind;
   char                            crncy_conv_assess_amt[12];
   char                            crd_lvl_prod_id_val[2];
   char                            user_fld_aci[6];
} swi_cmn_data_tkn_def;
#define swi_cmn_data_tkn_def_Size 60
#pragma section swi_tkn
/* Definition SWI-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __swi_tkn
typedef struct __swi_tkn
{
   short                           lgth;
   char                            fiid[4];
   char                            buf[442];
} swi_tkn_def;
#define swi_tkn_def_Size 448
#pragma section swi_tknx
/* Definition SWI-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __swi_tknx
typedef struct __swi_tknx
{
   char                            lgth[3];
   char                            user_fld1;
   char                            fiid[4];
   char                            buf[442];
} swi_tknx_def;
#define swi_tknx_def_Size 450
#pragma section tlf_tkn
/* Definition TLF-TKN created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlf_tkn
typedef struct __tlf_tkn
{
   union
   {
      long long                       rba_64bit;
      __int32_t                       rba[2];
   } u_rba_64bit;
   char                            tlf_nam[35];
   char                            tkn_retrv_opt;
   union
   {
      char                            key_data[30];
      struct
      {
         struct
         {
            char                            ln[4];
            char                            fiid[4];
            char                            pan[19];
            char                            mbr_num[3];
         } crd;
      } atm_key;
      struct
      {
         struct
         {
            char                            ln[4];
            char                            fiid[4];
            struct
            {
               char                            crd_num[19];
               char                            mbr_num[3];
            } card;
         } crd;
      } pos_key;
   } u_key_data;
   short                           file_frmt;
   char                            user_fld1[10];
} tlf_tkn_def;
#define tlf_tkn_def_Size 86
#pragma section tlf_tknx
/* Definition TLF-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __tlf_tknx
typedef struct __tlf_tknx
{
   char                            rba[19];
   char                            tlf_nam[35];
   char                            tkn_retrv_opt;
   union
   {
      char                            key_data[30];
      struct
      {
         struct
         {
            char                            ln[4];
            char                            fiid[4];
            char                            pan[19];
            char                            mbr_num[3];
         } crd;
      } atm_key;
      struct
      {
         struct
         {
            char                            ln[4];
            char                            fiid[4];
            struct
            {
               char                            crd_num[19];
               char                            mbr_num[3];
            } card;
         } crd;
      } pos_key;
   } u_key_data;
   char                            file_frmt[5];
   char                            user_fld1[10];
} tlf_tknx_def;
#define tlf_tknx_def_Size 100
#pragma section track1_tkn
/* Definition TRACK1-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __track1_tkn
typedef struct __track1_tkn
{
   char                            val[82];
} track1_tkn_def;
#define track1_tkn_def_Size 82
#pragma section track2_tkn
/* Definition TRACK2-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __track2_tkn
typedef struct __track2_tkn
{
   char                            track2[40];
} track2_tkn_def;
#define track2_tkn_def_Size 40
#pragma section trk3_tkn
/* Definition TRK3-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __trk3_tkn
typedef struct __trk3_tkn
{
   char                            trk3[107];
   char                            user_fld1;
} trk3_tkn_def;
#define trk3_tkn_def_Size 108
#pragma section tss_idx_tkn
/* Definition TSS-IDX-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __tss_idx_tkn
typedef struct __tss_idx_tkn
{
   char                            pin_key_idx;
   char                            mac_key_idx;
   char                            data_key_idx;
   char                            user_fld1[3];
} tss_idx_tkn_def;
#define tss_idx_tkn_def_Size 6
#pragma section txn_analysis_tkn
/* Definition TXN-ANALYSIS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __txn_analysis_tkn
typedef struct __txn_analysis_tkn
{
   char                            txn_disp[2];
   char                            user_fld_aci[4];
   char                            fiid[4];
   char                            lgth[2];
   union
   {
      char                            info[96];
      struct
      {
         struct
         {
            char                            val[3];
         } test_rslts[29];
         char                            user_fld_bnet[9];
      } bnet;
      struct
      {
         struct
         {
            char                            val[3];
         } test_rslts[29];
         char                            user_fld_mds[9];
      } mds;
   } u_info;
} txn_analysis_tkn_def;
#define txn_analysis_tkn_def_Size 108
#pragma section txn_descr_tkn
/* Definition TXN-DESCR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __txn_descr_tkn
typedef struct __txn_descr_tkn
{
   char                            acq_descr_tag[30];
   char                            iss_descr_tag[30];
} txn_descr_tkn_def;
#define txn_descr_tkn_def_Size 60
#pragma section txn_prfl_tkn
/* Definition TXN-PRFL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __txn_prfl_tkn
typedef struct __txn_prfl_tkn
{
   char                            acq_txn_prfl[16];
   char                            iss_txn_prfl[16];
   char                            discrd_rvsl_flg;
   char                            apcf_rte;
} txn_prfl_tkn_def;
#define txn_prfl_tkn_def_Size 34
#pragma section txn_subtyp_tkn
/* Definition TXN-SUBTYP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __txn_subtyp_tkn
typedef struct __txn_subtyp_tkn
{
   char                            txn_subtyp[4];
   char                            acq_proc_cde[6];
   char                            iss_proc_cde[6];
   char                            user_fld1[20];
} txn_subtyp_tkn_def;
#define txn_subtyp_tkn_def_Size 36
#pragma section csm_cf_tkn
/* Definition CSM-CF-TKN created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __csm_cf_tkn
typedef struct __csm_cf_tkn
{
   long long                       imp_cuota;
   long long                       costo_fin_tot;
   long long                       imp_cargo_otor;
   __int32_t                       tasa_cargo_seguro;
   __int32_t                       tna;
   __int32_t                       tea;
   char                            plan_cred;
   char                            sub_plan_cred[2];
   char                            flag_tipo_seg;
   char                            flag_tipo_emi;
   char                            cant_cuotas[2];
   char                            max_cant_cuotas[2];
   char                            cod_aut_orig[8];
   char                            user_fld;
} csm_cf_tkn_def;
#define csm_cf_tkn_def_Size 54
#pragma section csm_cf_tknx
/* Definition CSM-CF-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_cf_tknx
typedef struct __csm_cf_tknx
{
   char                            imp_cuota[10];
   char                            costo_fin_tot[5];
   char                            imp_cargo_otor[7];
   char                            tasa_cargo_seguro[7];
   char                            tna[5];
   char                            tea[5];
   char                            plan_cred;
   char                            sub_plan_cred[2];
   char                            flag_tipo_seg;
   char                            flag_tipo_emi;
   char                            cant_cuotas[2];
   char                            max_cant_cuotas[2];
   char                            cod_aut_orig[8];
} csm_cf_tknx_def;
#define csm_cf_tknx_def_Size 56
#pragma section csm_consulta_tkn
/* Definition CSM-CONSULTA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_consulta_tkn
typedef struct __csm_consulta_tkn
{
   long long                       pesos_payment;
   long long                       dolar_payment;
   long long                       min_payment;
   long long                       min_dolar_payment;
   char                            cash_fee[8];
   char                            interest_rate[6];
   char                            payment_date[6];
   char                            use_lmt[4];
} csm_consulta_tkn_def;
#define csm_consulta_tkn_def_Size 56
#pragma section csm_consulta_tknx
/* Definition CSM-CONSULTA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_consulta_tknx
typedef struct __csm_consulta_tknx
{
   char                            pesos_payment[12];
   char                            dolar_payment[12];
   char                            min_payment[12];
   char                            min_dolar_payment[12];
   char                            cash_fee[8];
   char                            interest_rate[6];
   char                            payment_date[6];
   char                            use_lmt[4];
} csm_consulta_tknx_def;
#define csm_consulta_tknx_def_Size 72
#pragma section csm_consulta_ext_tkn
/* Definition CSM-CONSULTA-EXT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_consulta_ext_tkn
typedef struct __csm_consulta_ext_tkn
{
   long long                       pesos_payment;
   long long                       dolar_payment;
   long long                       min_payment;
   long long                       min_dolar_payment;
   char                            cash_fee[8];
   char                            interest_rate[6];
   char                            payment_date[6];
   char                            use_lmt[4];
   char                            cft[5];
   char                            user_fld[25];
} csm_consulta_ext_tkn_def;
#define csm_consulta_ext_tkn_def_Size 86
#pragma section csm_consulta_ext_tknx
/* Definition CSM-CONSULTA-EXT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_consulta_ext_tknx
typedef struct __csm_consulta_ext_tknx
{
   char                            pesos_payment[12];
   char                            dolar_payment[12];
   char                            min_payment[12];
   char                            min_dolar_payment[12];
   char                            cash_fee[8];
   char                            interest_rate[6];
   char                            payment_date[6];
   char                            use_lmt[4];
   char                            cft[5];
   char                            user_fld[25];
} csm_consulta_ext_tknx_def;
#define csm_consulta_ext_tknx_def_Size 102
#pragma section csm_nuevos_limites_tkn
/* Definition CSM-NUEVOS-LIMITES-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_nuevos_limites_tkn
typedef struct __csm_nuevos_limites_tkn
{
   long long                       lim_adelanto_efectivo;
   long long                       lim_contado;
   long long                       lim_cuotas;
   long long                       lim_prest_consumo;
   long long                       lim_prest_financia;
} csm_nuevos_limites_tkn_def;
#define csm_nuevos_limites_tkn_def_Size 40
#pragma section csm_nuevos_limites_tknx
/* Definition CSM-NUEVOS-LIMITES-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_nuevos_limites_tknx
typedef struct __csm_nuevos_limites_tknx
{
   char                            lim_adelanto_efectivo[8];
   char                            lim_contado[8];
   char                            lim_cuotas[8];
   char                            lim_prest_consumo[8];
   char                            lim_prest_financia[8];
} csm_nuevos_limites_tknx_def;
#define csm_nuevos_limites_tknx_def_Size 40
#pragma section csm_info_diners_tkn
/* Definition CSM-INFO-DINERS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_info_diners_tkn
typedef struct __csm_info_diners_tkn
{
   char                            nrid[15];
   char                            action_cde[3];
   char                            din_entry_mde[12];
   char                            surcharge_fee_val;
   char                            surcharge_tran_fee[10];
   char                            term_typ;
   char                            user_fld[10];
} csm_info_diners_tkn_def;
#define csm_info_diners_tkn_def_Size 52
#pragma section csm_info_diners_tknx
/* Definition CSM-INFO-DINERS-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_info_diners_tknx
typedef struct __csm_info_diners_tknx
{
   char                            nrid[15];
   char                            action_cde[3];
   char                            din_entry_mde[12];
   char                            surcharge_fee_val;
   char                            surcharge_tran_fee[10];
   char                            term_typ;
   char                            user_fld[10];
} csm_info_diners_tknx_def;
#define csm_info_diners_tknx_def_Size 52
#pragma section csm_alertas_tkn
/* Definition CSM-ALERTAS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_alertas_tkn
typedef struct __csm_alertas_tkn
{
   char                            datetimereceivacq[17];
   char                            datetimereceiviss[17];
   char                            datetimeiss[17];
   char                            systemtraceauditnumber[6];
   char                            msgtyp[4];
   char                            codigob24[3];
   char                            fiidiss[4];
   char                            trancode[2];
   char                            importedol[12];
   char                            importeorig[12];
   char                            currencyorig[3];
   char                            importeiss[12];
   char                            currencyiss[3];
   char                            uso_futuro[134];
} csm_alertas_tkn_def;
#define csm_alertas_tkn_def_Size 246
#pragma section csm_pfac_tkn
/* Definition CSM-PFAC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pfac_tkn
typedef struct __csm_pfac_tkn
{
   char                            submerchant[22];
   char                            city[13];
   char                            state[3];
   char                            country[3];
   char                            codigo_postal[10];
   char                            payment_id[11];
   char                            submerchant_id[15];
   char                            user_fld;
} csm_pfac_tkn_def;
#define csm_pfac_tkn_def_Size 78
#pragma section par_tkn
/* Definition PAR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __par_tkn
typedef struct __par_tkn
{
   char                            par[29];
   char                            par_updt_ind;
   char                            user_fld_aci[10];
} par_tkn_def;
#define par_tkn_def_Size 40
#pragma section srvc_chrg_tkn
/* Definition SRVC-CHRG-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __srvc_chrg_tkn
typedef struct __srvc_chrg_tkn
{
   char                            num_fees[2];
   struct
   {
      char                            fee_cde[2];
      char                            crncy_cde[3];
      char                            amt_sign;
      char                            fee_amt[12];
      char                            user_fld_aci[2];
   } info[6];
} srvc_chrg_tkn_def;
#define srvc_chrg_tkn_def_Size 122
#pragma section dest_crncy_tkn
/* Definition DEST-CRNCY-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __dest_crncy_tkn
typedef struct __dest_crncy_tkn
{
   long long                       amt_1;
   long long                       amt_2;
   char                            crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            crncy_ind;
   char                            user_fld_aci[8];
} dest_crncy_tkn_def;
#define dest_crncy_tkn_def_Size 40
#pragma section dest_crncy_tknx
/* Definition DEST-CRNCY-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __dest_crncy_tknx
typedef struct __dest_crncy_tknx
{
   char                            amt_1[19];
   char                            amt_2[19];
   char                            crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            crncy_ind;
   char                            user_fld_aci[8];
} dest_crncy_tknx_def;
#define dest_crncy_tknx_def_Size 62
#pragma section csm_sat_tkn
/* Definition CSM-SAT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_sat_tkn
typedef struct __csm_sat_tkn
{
   char                            info[200];
} csm_sat_tkn_def;
#define csm_sat_tkn_def_Size 200
#pragma section addl_hopr_tkn
/* Definition ADDL-HOPR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __addl_hopr_tkn
typedef struct __addl_hopr_tkn
{
   struct
   {
      char                            contents[2];
      long long                       beg_cash;
      long long                       cash_incr;
      long long                       cash_decr;
      long long                       cash_out;
      long long                       end_cash;
      char                            crncy_cde[3];
      char                            user_fld;
   } hopr[2];
} addl_hopr_tkn_def;
#define addl_hopr_tkn_def_Size 92
#pragma section addl_hopr_tknx
/* Definition ADDL-HOPR-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __addl_hopr_tknx
typedef struct __addl_hopr_tknx
{
   struct
   {
      char                            contents[2];
      char                            beg_cash[18];
      char                            cash_incr[18];
      char                            cash_decr[18];
      char                            cash_out[18];
      char                            end_cash[18];
      char                            crncy_cde[3];
      char                            user_fld;
   } hopr[2];
} addl_hopr_tknx_def;
#define addl_hopr_tknx_def_Size 192
#pragma section at_flg1_tkn
/* Definition AT-FLG1-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __at_flg1_tkn
typedef struct __at_flg1_tkn
{
   char                            crd_typ[2];
   char                            auth_only;
   char                            svc_ind;
   char                            exp_dat[4];
   char                            cash_dep_flg;
   char                            crd_stat;
} at_flg1_tkn_def;
#define at_flg1_tkn_def_Size 10
#pragma section at50_tkn
/* Definition AT50-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __at50_tkn
typedef struct __at50_tkn
{
   char                            err_flg;
   char                            locl_pin_vrfy_flg;
   char                            crd_vrfy_flg;
   char                            complete_track2_data;
   char                            uaf_flg;
   char                            rcpt_rqstd;
} at50_tkn_def;
#define at50_tkn_def_Size 6
#pragma section atm_bal_tkn
/* Definition ATM-BAL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __atm_bal_tkn
typedef struct __atm_bal_tkn
{
   char                            cust_bal_info;
   char                            crncy_bal_info;
   long long                       acct_amt_2;
   long long                       acct_amt_3;
   long long                       txn_amt_2;
   long long                       txn_amt_3;
   char                            acct_crncy_cde[3];
   char                            txn_crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            user_fld1[8];
} atm_bal_tkn_def;
#define atm_bal_tkn_def_Size 60
#pragma section atm_bal_tknx
/* Definition ATM-BAL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __atm_bal_tknx
typedef struct __atm_bal_tknx
{
   char                            cust_bal_info;
   char                            crncy_bal_info;
   char                            acct_amt_2[19];
   char                            acct_amt_3[19];
   char                            txn_amt_2[19];
   char                            txn_amt_3[19];
   char                            acct_crncy_cde[3];
   char                            txn_crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            user_fld1[8];
} atm_bal_tknx_def;
#define atm_bal_tknx_def_Size 104
#pragma section atm_data1_tkn
/* Definition ATM-DATA1-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __atm_data1_tkn
typedef struct __atm_data1_tkn
{
   char                            trk_used;
   char                            term_loc_ind;
   char                            lang_cde[3];
   char                            term_envmt_ind;
   char                            mob_acss_ind;
   char                            user_fld_aci[13];
} atm_data1_tkn_def;
#define atm_data1_tkn_def_Size 20
#pragma section atm_pfrd_txn_tkn
/* Definition ATM-PFRD-TXN-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __atm_pfrd_txn_tkn
typedef struct __atm_pfrd_txn_tkn
{
   struct
   {
      char                            acct_num[19];
   } acct;
   char                            tran_cde[2];
   char                            from_acct_typ[2];
   char                            to_acct_typ[2];
   char                            rcpt_opt;
   long long                       amt;
   char                            prfl_updt_ind;
   char                            ada_ind;
   char                            mrkt_seg_ind[2];
   char                            on_us_crd_ind;
   char                            user_fld_aci[13];
} atm_pfrd_txn_tkn_def;
#define atm_pfrd_txn_tkn_def_Size 52
#pragma section atm_pfrd_txn_tknx
/* Definition ATM-PFRD-TXN-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __atm_pfrd_txn_tknx
typedef struct __atm_pfrd_txn_tknx
{
   struct
   {
      char                            acct_num[19];
   } acct;
   char                            tran_cde[2];
   char                            from_acct_typ[2];
   char                            to_acct_typ[2];
   char                            rcpt_opt;
   char                            amt[19];
   char                            prfl_updt_ind;
   char                            ada_ind;
   char                            mrkt_seg_ind[2];
   char                            on_us_crd_ind;
   char                            user_fld_aci[14];
} atm_pfrd_txn_tknx_def;
#define atm_pfrd_txn_tknx_def_Size 64
#pragma section bill_pymt_conf_tkn
/* Definition BILL-PYMT-CONF-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bill_pymt_conf_tkn
typedef struct __bill_pymt_conf_tkn
{
   char                            short_company_nam[12];
   char                            acct_num[40];
   char                            conf_num[6];
   char                            pymt_pro_dat[8];
} bill_pymt_conf_tkn_def;
#define bill_pymt_conf_tkn_def_Size 66
#pragma section bill_pymt_payee_list_tkn
/* Definition BILL-PYMT-PAYEE-LIST-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bill_pymt_payee_list_tkn
typedef struct __bill_pymt_payee_list_tkn
{
   char                            more_payees;
   char                            user_fld1;
   short                           num_payees_returned;
   struct
   {
      char                            short_company_nam[12];
      char                            acct_num[40];
      char                            merch_id[9];
      char                            acct_stat[8];
      char                            extra_ind;
   } company_list[10];
} bill_pymt_payee_list_tkn_def;
#define bill_pymt_payee_list_tkn_def_Size 704
#pragma section bill_pymt_payee_list_tknx
/* Definition BILL-PYMT-PAYEE-LIST-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bill_pymt_payee_list_tknx
typedef struct __bill_pymt_payee_list_tknx
{
   char                            more_payees;
   char                            user_fld1;
   char                            num_payees_returned[2];
   struct
   {
      char                            short_company_nam[12];
      char                            acct_num[40];
      char                            merch_id[9];
      char                            acct_stat[8];
      char                            extra_ind;
   } company_list[10];
} bill_pymt_payee_list_tknx_def;
#define bill_pymt_payee_list_tknx_def_Size 704
#pragma section bna_mcu_tkn
/* Definition BNA-MCU-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bna_mcu_tkn
typedef struct __bna_mcu_tkn
{
   char                            term_crncy_cde[3];
   char                            user_fld1_aci;
   struct
   {
      char                            orig_crncy_cde[3];
      char                            user_fld2_aci;
      long long                       orig_amt;
      char                            conv_rate[8];
      long long                       conv_amt;
   } amt_info[4];
} bna_mcu_tkn_def;
#define bna_mcu_tkn_def_Size 116
#pragma section bna_mcu_tknx
/* Definition BNA-MCU-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bna_mcu_tknx
typedef struct __bna_mcu_tknx
{
   char                            term_crncy_cde[3];
   char                            user_fld1_aci;
   struct
   {
      char                            orig_crncy_cde[3];
      char                            user_fld2_aci;
      char                            orig_amt[18];
      char                            conv_rate[8];
      char                            conv_amt[18];
   } amt_info[4];
} bna_mcu_tknx_def;
#define bna_mcu_tknx_def_Size 196
#pragma section bulk_chk_amt_tkn
/* Definition BULK-CHK-AMT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_amt_tkn
typedef struct __bulk_chk_amt_tkn
{
   short                           num_chks;
   struct
   {
      char                            amount[12];
   } amt_data[20];
} bulk_chk_amt_tkn_def;
#define bulk_chk_amt_tkn_def_Size 242
#pragma section bulk_chk_amt_tknx
/* Definition BULK-CHK-AMT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_amt_tknx
typedef struct __bulk_chk_amt_tknx
{
   char                            num_chks[2];
   struct
   {
      char                            amount[12];
   } amt_data[20];
} bulk_chk_amt_tknx_def;
#define bulk_chk_amt_tknx_def_Size 242
#pragma section bulk_chk_disp_tkn
/* Definition BULK-CHK-DISP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_disp_tkn
typedef struct __bulk_chk_disp_tkn
{
   short                           num_chks;
   struct
   {
      char                            disp;
   } disp_data[20];
} bulk_chk_disp_tkn_def;
#define bulk_chk_disp_tkn_def_Size 22
#pragma section bulk_chk_disp_tknx
/* Definition BULK-CHK-DISP-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_disp_tknx
typedef struct __bulk_chk_disp_tknx
{
   char                            num_chks[2];
   struct
   {
      char                            disp;
   } disp_data[20];
} bulk_chk_disp_tknx_def;
#define bulk_chk_disp_tknx_def_Size 22
#pragma section bulk_chk_micr_tkn
/* Definition BULK-CHK-MICR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_micr_tkn
typedef struct __bulk_chk_micr_tkn
{
   short                           num_chks;
   struct
   {
      char                            micr[64];
   } micr_data[20];
} bulk_chk_micr_tkn_def;
#define bulk_chk_micr_tkn_def_Size 1282
#pragma section bulk_chk_micr_tknx
/* Definition BULK-CHK-MICR-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_micr_tknx
typedef struct __bulk_chk_micr_tknx
{
   char                            num_chks[2];
   struct
   {
      char                            micr[64];
   } micr_data[20];
} bulk_chk_micr_tknx_def;
#define bulk_chk_micr_tknx_def_Size 1282
#pragma section bulk_chk_ssbc_tkn
/* Definition BULK-CHK-SSBC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_ssbc_tkn
typedef struct __bulk_chk_ssbc_tkn
{
   short                           num_chks;
   struct
   {
      char                            bin_seq_num[5];
      char                            chk_ret;
      char                            chk_disp;
      char                            corp_num[10];
      char                            csf_tran_ind;
   } ssbc_data[20];
} bulk_chk_ssbc_tkn_def;
#define bulk_chk_ssbc_tkn_def_Size 362
#pragma section bulk_chk_ssbc_tknx
/* Definition BULK-CHK-SSBC-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __bulk_chk_ssbc_tknx
typedef struct __bulk_chk_ssbc_tknx
{
   char                            num_chks[2];
   struct
   {
      char                            bin_seq_num[5];
      char                            chk_ret;
      char                            chk_disp;
      char                            corp_num[10];
      char                            csf_tran_ind;
   } ssbc_data[20];
} bulk_chk_ssbc_tknx_def;
#define bulk_chk_ssbc_tknx_def_Size 362
#pragma section cash_accpt_term_setl_tkn
/* Definition CASH-ACCPT-TERM-SETL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cash_accpt_term_setl_tkn
typedef struct __cash_accpt_term_setl_tkn
{
   char                            notes_refunded[5];
   char                            notes_rejected[5];
   char                            notes_encashed[5];
   char                            notes_escrowed[5];
} cash_accpt_term_setl_tkn_def;
#define cash_accpt_term_setl_tkn_def_Size 20
#pragma section cntctlss_txn_data_tkn
/* Definition CNTCTLSS-TXN-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cntctlss_txn_data_tkn
typedef struct __cntctlss_txn_data_tkn
{
   char                            pt_srv_entry_mde[3];
   char                            dcv_valid_ind;
   char                            atc[2];
   char                            atc_valid_ind;
   char                            user_fld1_aci[3];
   char                            user_fld2_aci[2];
} cntctlss_txn_data_tkn_def;
#define cntctlss_txn_data_tkn_def_Size 12
#pragma section cntctlss_txn_data_tknx
/* Definition CNTCTLSS-TXN-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cntctlss_txn_data_tknx
typedef struct __cntctlss_txn_data_tknx
{
   char                            pt_srv_entry_mde[3];
   char                            dcv_valid_ind;
   char                            atc[4];
   char                            atc_valid_ind;
   char                            user_fld1_aci[3];
   char                            user_fld2_aci[4];
} cntctlss_txn_data_tknx_def;
#define cntctlss_txn_data_tknx_def_Size 16
#pragma section cstm_resp_cde_tkn
/* Definition CSTM-RESP-CDE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cstm_resp_cde_tkn
typedef struct __cstm_resp_cde_tkn
{
   char                            cstm_resp_cde[12];
} cstm_resp_cde_tkn_def;
#define cstm_resp_cde_tkn_def_Size 12
#pragma section diebold_bna_cnts_tkn
/* Definition DIEBOLD-BNA-CNTS-TKN created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __diebold_bna_cnts_tkn
typedef struct __diebold_bna_cnts_tkn
{
   char                            crncy_cde[3];
   char                            bna_user_fld1;
   short                           num_entries;
   struct
   {
      __int32_t                       note_value;
      __int32_t                       cb4_cnt;
      __int32_t                       cb3_cnt;
      __int32_t                       re4_cnt;
      __int32_t                       re3_cnt;
      __int32_t                       a6_cnt;
   } bna_info[9];
} diebold_bna_cnts_tkn_def;
#define diebold_bna_cnts_tkn_def_Size 222
#pragma section diebold_bna_cnts_tknx
/* Definition DIEBOLD-BNA-CNTS-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __diebold_bna_cnts_tknx
typedef struct __diebold_bna_cnts_tknx
{
   char                            crncy_cde[3];
   char                            bna_user_fld1;
   char                            num_entries[2];
   struct
   {
      char                            note_value[9];
      char                            cb4_cnt[5];
      char                            cb3_cnt[5];
      char                            re4_cnt[5];
      char                            re3_cnt[5];
      char                            a6_cnt[5];
   } bna_info[9];
} diebold_bna_cnts_tknx_def;
#define diebold_bna_cnts_tknx_def_Size 312
#pragma section hld_tkn
/* Definition HLD-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __hld_tkn
typedef struct __hld_tkn
{
   long long                       hld_amt;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } hld_dat;
   char                            hld_accepted;
   char                            hld_user_fld1;
} hld_tkn_def;
#define hld_tkn_def_Size 16
#pragma section hld_tknx
/* Definition HLD-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __hld_tknx
typedef struct __hld_tknx
{
   char                            hld_amt[19];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } hld_dat;
   char                            hld_accepted;
} hld_tknx_def;
#define hld_tknx_def_Size 26
#pragma section ichg_compliance_atm_tkn
/* Definition ICHG-COMPLIANCE-ATM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ichg_compliance_atm_tkn
typedef struct __ichg_compliance_atm_tkn
{
   char                            life_cycle_ind;
   char                            trace_id[15];
   char                            valid_cde[4];
   char                            monitoring_stat;
   char                            err_ind;
} ichg_compliance_atm_tkn_def;
#define ichg_compliance_atm_tkn_def_Size 22
#pragma section interim_stmt_proc_tkn
/* Definition INTERIM-STMT-PROC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __interim_stmt_proc_tkn
typedef struct __interim_stmt_proc_tkn
{
   short                           num_lines_rqst;
   short                           num_lines_returned;
   short                           num_lines_matched;
   char                            more_data_ind;
   char                            user_fld1;
} interim_stmt_proc_tkn_def;
#define interim_stmt_proc_tkn_def_Size 8
#pragma section interim_stmt_proc_tknx
/* Definition INTERIM-STMT-PROC-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __interim_stmt_proc_tknx
typedef struct __interim_stmt_proc_tknx
{
   char                            num_lines_rqst[2];
   char                            num_lines_returned[2];
   char                            num_lines_matched[2];
   char                            more_data_ind;
   char                            user_fld1;
} interim_stmt_proc_tknx_def;
#define interim_stmt_proc_tknx_def_Size 8
#pragma section intstmt_psbk_data_tkn
/* Definition INTSTMT-PSBK-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __intstmt_psbk_data_tkn
typedef struct __intstmt_psbk_data_tkn
{
   union
   {
      char                            interim_stmt_data[958];
      char                            psbk_data[958];
   } u_interim_stmt_data;
} intstmt_psbk_data_tkn_def;
#define intstmt_psbk_data_tkn_def_Size 958
#pragma section mbc_bd_tkn
/* Definition MBC-BD-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mbc_bd_tkn
typedef struct __mbc_bd_tkn
{
   char                            bag_id[12];
} mbc_bd_tkn_def;
#define mbc_bd_tkn_def_Size 12
#pragma section mbc_mx_tkn
/* Definition MBC-MX-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mbc_mx_tkn
typedef struct __mbc_mx_tkn
{
   struct
   {
      long long                       cash_accepted;
      long long                       cash_ret;
      char                            rvsl_flg;
   } from_cash;
   char                            user_fld;
   struct
   {
      short                           bills;
      short                           rolls;
   } change_req[8];
} mbc_mx_tkn_def;
#define mbc_mx_tkn_def_Size 50
#pragma section mbc_mx_tknx
/* Definition MBC-MX-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mbc_mx_tknx
typedef struct __mbc_mx_tknx
{
   struct
   {
      char                            cash_accepted[18];
      char                            cash_ret[18];
      char                            rev_flg;
   } from_cash;
   char                            user_fld;
   struct
   {
      char                            bills[2];
      char                            rolls[2];
   } change_req[8];
} mbc_mx_tknx_def;
#define mbc_mx_tknx_def_Size 70
#pragma section mbc_setl_tkn
/* Definition MBC-SETL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mbc_setl_tkn
typedef struct __mbc_setl_tkn
{
   struct
   {
      char                            contents[2];
      long long                       beg_cash;
      long long                       cash_incr;
      long long                       cash_decr;
      long long                       cash_out;
      long long                       end_cash;
      char                            crncy_cde[3];
      char                            user_fld1;
   } hopr[6];
   struct
   {
      char                            crncy_cde[3];
      char                            user_fld2;
      long long                       cash_in_vault;
   } crncy_acceptor;
   short                           num_mx;
   long long                       amt_mx;
} mbc_setl_tkn_def;
#define mbc_setl_tkn_def_Size 298
#pragma section mbc_setl_tknx
/* Definition MBC-SETL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mbc_setl_tknx
typedef struct __mbc_setl_tknx
{
   struct
   {
      char                            contents[2];
      char                            beg_cash[18];
      char                            cash_incr[18];
      char                            cash_decr[18];
      char                            cash_out[18];
      char                            end_cash[18];
      char                            crncy_cde[3];
      char                            user_fld1;
   } hopr[6];
   struct
   {
      char                            crncy_cde[3];
      char                            user_fld2;
      char                            cash_in_vault[18];
   } crncy_acceptor;
   char                            num_mx[5];
   char                            amt_mx[15];
} mbc_setl_tknx_def;
#define mbc_setl_tknx_def_Size 618
#pragma section mult_acct_inq_tkn
/* Definition MULT-ACCT-INQ-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_acct_inq_tkn
typedef struct __mult_acct_inq_tkn
{
   short                           num_accts;
   struct
   {
      char                            typ[2];
      struct
      {
         char                            acct_num[19];
      } num;
      char                            stat;
      long long                       ledger_bal;
      long long                       avail_bal;
   } acct[4];
} mult_acct_inq_tkn_def;
#define mult_acct_inq_tkn_def_Size 154
#pragma section mult_acct_inq_tknx
/* Definition MULT-ACCT-INQ-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_acct_inq_tknx
typedef struct __mult_acct_inq_tknx
{
   char                            num_accts[2];
   struct
   {
      char                            typ[2];
      struct
      {
         char                            acct_num[19];
      } num;
      char                            stat;
      char                            ledger_bal[19];
      char                            avail_bal[19];
   } acct[4];
} mult_acct_inq_tknx_def;
#define mult_acct_inq_tknx_def_Size 242
#pragma section mult_acct_tkn
/* Definition MULT-ACCT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_acct_tkn
typedef struct __mult_acct_tkn
{
   char                            from_to;
   char                            first_pass;
   char                            more;
   char                            user_fld1;
   short                           from_caf_idx;
   short                           from_caf_pri_idx;
   short                           to_caf_idx;
   short                           to_caf_pri_idx;
} mult_acct_tkn_def;
#define mult_acct_tkn_def_Size 12
#pragma section ncd_tkn
/* Definition NCD-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ncd_tkn
typedef struct __ncd_tkn
{
   char                            item_qty[2];
   char                            hopr_contents[2];
} ncd_tkn_def;
#define ncd_tkn_def_Size 4
#pragma section psbk_proc_tkn
/* Definition PSBK-PROC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __psbk_proc_tkn
typedef struct __psbk_proc_tkn
{
   long long                       psbk_bal;
   char                            psbk_next_line[5];
   char                            msg_typ_ind;
   char                            psbk_prnt_frmt;
   char                            last_item_prntd[3];
   char                            more_data_ind;
   char                            cnsldt;
} psbk_proc_tkn_def;
#define psbk_proc_tkn_def_Size 20
#pragma section psbk_proc_tknx
/* Definition PSBK-PROC-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __psbk_proc_tknx
typedef struct __psbk_proc_tknx
{
   char                            psbk_bal[19];
   char                            psbk_next_line[5];
   char                            msg_typ_ind;
   char                            psbk_print_frmt;
   char                            last_item_prntd[3];
   char                            more_data_ind;
   char                            cnsldt;
   char                            psbk_user_fld1;
} psbk_proc_tknx_def;
#define psbk_proc_tknx_def_Size 32
#pragma section shrd_bna_cnts_tkn
/* Definition SHRD-BNA-CNTS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __shrd_bna_cnts_tkn
typedef struct __shrd_bna_cnts_tkn
{
   short                           bna_txn_cnt;
   short                           retract_notes_cnt;
   short                           retract_coins_cnt;
   short                           l4_notes_cnt;
   short                           l3_notes_cnt;
   short                           l2_notes_cnt;
   char                            user_fld_aci[4];
} shrd_bna_cnts_tkn_def;
#define shrd_bna_cnts_tkn_def_Size 16
#pragma section shrd_bna_cnts_tknx
/* Definition SHRD-BNA-CNTS-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __shrd_bna_cnts_tknx
typedef struct __shrd_bna_cnts_tknx
{
   char                            bna_txn_cnt[4];
   char                            retract_notes_cnt[5];
   char                            retract_coins_cnt[5];
   char                            l4_notes_cnt[5];
   char                            l3_notes_cnt[5];
   char                            l2_notes_cnt[5];
   char                            user_fld_aci[5];
} shrd_bna_cnts_tknx_def;
#define shrd_bna_cnts_tknx_def_Size 34
#pragma section chk_bndl_tkn
/* Definition CHK-BNDL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __chk_bndl_tkn
typedef struct __chk_bndl_tkn
{
   short                           num_chks;
   short                           chk_idx;
   char                            user_fld_aci[10];
} chk_bndl_tkn_def;
#define chk_bndl_tkn_def_Size 14
#pragma section chk_bndl_tknx
/* Definition CHK-BNDL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __chk_bndl_tknx
typedef struct __chk_bndl_tknx
{
   char                            num_chks[2];
   char                            chk_idx[2];
   char                            user_fld_aci[10];
} chk_bndl_tknx_def;
#define chk_bndl_tknx_def_Size 14
#pragma section sm_pri_tkn
/* Definition SM-PRI-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sm_pri_tkn
typedef struct __sm_pri_tkn
{
   char                            crd_scheme;
   char                            num_crds;
   char                            txn_side_ind;
   char                            impl_dest[16];
   struct
   {
      char                            crd_ln[4];
      char                            crd_fiid[4];
      char                            inst_id_num[11];
      char                            responder;
      char                            resp_cde[3];
      char                            sm_sec;
      char                            dest_order;
      char                            not_on_us_flg;
      char                            user_fld;
      long long                       exit_tim;
      long long                       re_entry_tim;
   } svc_auth_info;
} sm_pri_tkn_def;
#define sm_pri_tkn_def_Size 62
#pragma section sm_pri_tknx
/* Definition SM-PRI-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sm_pri_tknx
typedef struct __sm_pri_tknx
{
   char                            crd_scheme;
   char                            num_crds;
   char                            txn_side_ind;
   char                            impl_dest[16];
   struct
   {
      char                            crd_ln[4];
      char                            crd_fiid[4];
      char                            inst_id_num[11];
      char                            responder;
      char                            resp_cde[3];
      char                            sm_sec;
      char                            dest_order;
      char                            not_on_us_flg;
      char                            user_fld;
      char                            exit_tim[19];
      char                            re_entry_tim[19];
   } svc_auth_info;
} sm_pri_tknx_def;
#define sm_pri_tknx_def_Size 84
#pragma section sm_refr_tkn
/* Definition SM-REFR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sm_refr_tkn
typedef struct __sm_refr_tkn
{
   struct
   {
      char                            pbf1;
      char                            pbf2;
      char                            pbf3;
      char                            pbf4;
      char                            caf;
   } refr_ind_0210;
   struct
   {
      char                            pbf1;
      char                            pbf2;
      char                            pbf3;
      char                            pbf4;
      char                            caf;
   } refr_ind_0420;
} sm_refr_tkn_def;
#define sm_refr_tkn_def_Size 10
#pragma section sm_term_setl_tkn
/* Definition SM-TERM-SETL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sm_term_setl_tkn
typedef struct __sm_term_setl_tkn
{
   short                           num_load_value;
   long long                       amt_load_value;
} sm_term_setl_tkn_def;
#define sm_term_setl_tkn_def_Size 10
#pragma section sm_term_setl_tknx
/* Definition SM-TERM-SETL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sm_term_setl_tknx
typedef struct __sm_term_setl_tknx
{
   char                            num_load_value[5];
   char                            amt_load_value[15];
} sm_term_setl_tknx_def;
#define sm_term_setl_tknx_def_Size 20
#pragma section sm_visa_tkn
/* Definition SM-VISA-TKN created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __sm_visa_tkn
typedef struct __sm_visa_tkn
{
   char                            svc_num[16];
   union
   {
      long long                       s1;
      long long                       s2;
   } u_s1;
   long long                       s3;
   __int32_t                       r;
   char                            cexp;
   char                            dexp[3];
   __int32_t                       ppsam;
   short                           nt;
   __int32_t                       bal;
   short                           cc;
   char                            vk[2];
   char                            svc_compl_dest[16];
   char                            algo;
   char                            user_fld1;
} sm_visa_tkn_def;
#define sm_visa_tkn_def_Size 72
#pragma section sm_visa_tknx
/* Definition SM-VISA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sm_visa_tknx
typedef struct __sm_visa_tknx
{
   char                            svc_num[16];
   union
   {
      char                            s1[16];
      char                            s2[16];
   } u_s1;
   char                            s3[16];
   char                            r[10];
   char                            cexp[2];
   char                            dexp[6];
   char                            ppsam[8];
   char                            nt[5];
   char                            bal[6];
   char                            cc[4];
   char                            vk[2];
   char                            svc_compl_dest[16];
   char                            algo;
} sm_visa_tknx_def;
#define sm_visa_tknx_def_Size 108
#pragma section ssbb_tkn
/* Definition SSBB-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbb_tkn
typedef struct __ssbb_tkn
{
   char                            super_tlr_ind;
   char                            user_fld1;
   long long                       dep_bal_cr;
} ssbb_tkn_def;
#define ssbb_tkn_def_Size 10
#pragma section ssbb_tknx
/* Definition SSBB-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbb_tknx
typedef struct __ssbb_tknx
{
   char                            super_tlr_ind;
   char                            user_fld1;
   char                            dep_bal_cr[12];
} ssbb_tknx_def;
#define ssbb_tknx_def_Size 14
#pragma section ssbc_tkn
/* Definition SSBC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbc_tkn
typedef struct __ssbc_tkn
{
   char                            bin_seq_num[5];
   char                            chk_ret;
   char                            chk_disp;
   char                            corp_num[10];
   char                            csf_tran_ind;
} ssbc_tkn_def;
#define ssbc_tkn_def_Size 18
#pragma section ssbc_term_setl_tkn
/* Definition SSBC-TERM-SETL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbc_term_setl_tkn
typedef struct __ssbc_term_setl_tkn
{
   struct
   {
      short                           num_chk;
      long long                       amt_chk;
   } dep_bin[4];
} ssbc_term_setl_tkn_def;
#define ssbc_term_setl_tkn_def_Size 40
#pragma section ssbc_term_setl_tknx
/* Definition SSBC-TERM-SETL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbc_term_setl_tknx
typedef struct __ssbc_term_setl_tknx
{
   struct
   {
      char                            num_chk[5];
      char                            amt_chk[15];
   } dep_bin[4];
} ssbc_term_setl_tknx_def;
#define ssbc_term_setl_tknx_def_Size 80
#pragma section stmt_prnt_tkn
/* Definition STMT-PRNT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __stmt_prnt_tkn
typedef struct __stmt_prnt_tkn
{
   char                            prnt_frmt;
   char                            prnt_siz[3];
} stmt_prnt_tkn_def;
#define stmt_prnt_tkn_def_Size 4
#pragma section ps2000_atm_tkn
/* Definition PS2000-ATM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ps2000_atm_tkn
typedef struct __ps2000_atm_tkn
{
   char                            srv_ind;
   char                            tran_id[15];
   char                            valid_cde[4];
} ps2000_atm_tkn_def;
#define ps2000_atm_tkn_def_Size 20
#pragma section csm_atm_tkn
/* Definition CSM-ATM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_atm_tkn
typedef struct __csm_atm_tkn
{
   short                           algo_impacto_saldo;
   short                           algo_check_saldo;
   char                            bank_fiid[4];
   char                            tipo_dep;
   char                            entry_mde[3];
   char                            condition_cde[2];
   char                            mcc[4];
   char                            card_type[2];
   char                            cntry_iso[3];
   char                            user_fld;
} csm_atm_tkn_def;
#define csm_atm_tkn_def_Size 24
#pragma section csm_atm_tknx
/* Definition CSM-ATM-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_atm_tknx
typedef struct __csm_atm_tknx
{
   char                            algo_impacto_saldo[2];
   char                            algo_check_saldo[2];
   char                            bank_fiid[4];
   char                            tipo_dep;
   char                            entry_mde[3];
   char                            condition_cde[2];
   char                            mcc[4];
   char                            card_type[2];
   char                            cntry_iso[3];
   char                            user_fld;
} csm_atm_tknx_def;
#define csm_atm_tknx_def_Size 24
#pragma section csm_atm_ichg_tkn
/* Definition CSM-ATM-ICHG-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_atm_ichg_tkn
typedef struct __csm_atm_ichg_tkn
{
   char                            iss_resp_cde[3];
   char                            iso_resp_cde[2];
   char                            user_fld[11];
} csm_atm_ichg_tkn_def;
#define csm_atm_ichg_tkn_def_Size 16
#pragma section csm_pago_serv_tkn
/* Definition CSM-PAGO-SERV-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pago_serv_tkn
typedef struct __csm_pago_serv_tkn
{
   long long                       importe;
   char                            cod_abreviado[2];
   char                            nro_entidad[3];
   char                            nro_cliente[24];
   char                            nombre_entidad[24];
   char                            vencimiento[6];
   char                            cuota[5];
   char                            linea[32];
   char                            cod_seg[3];
   char                            user_fld;
   char                            firma_digital[16];
} csm_pago_serv_tkn_def;
#define csm_pago_serv_tkn_def_Size 124
#pragma section csm_pago_serv_tknx
/* Definition CSM-PAGO-SERV-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pago_serv_tknx
typedef struct __csm_pago_serv_tknx
{
   char                            importe[13];
   char                            cod_abreviado[2];
   char                            nro_entidad[3];
   char                            nro_cliente[24];
   char                            nombre_entidad[24];
   char                            vencimiento[6];
   char                            cuota[5];
   char                            linea[32];
   char                            cod_seg[3];
   char                            firma_digital[16];
} csm_pago_serv_tknx_def;
#define csm_pago_serv_tknx_def_Size 128
#pragma section csm_pil_tkn
/* Definition CSM-PIL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pil_tkn
typedef struct __csm_pil_tkn
{
   char                            letras_sopa[24];
   char                            letras_seleccion[9];
   char                            estado_pil[2];
   char                            resp_mds[2];
   char                            usr_fld[3];
} csm_pil_tkn_def;
#define csm_pil_tkn_def_Size 40
#pragma section ach_db_tkn
/* Definition ACH-DB-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ach_db_tkn
typedef struct __ach_db_tkn
{
   char                            rttn[11];
   char                            user_fld1;
} ach_db_tkn_def;
#define ach_db_tkn_def_Size 12
#pragma section addr_ver_tkn
/* Definition ADDR-VER-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __addr_ver_tkn
typedef struct __addr_ver_tkn
{
   char                            addr[20];
   char                            zip_cde[9];
   char                            user_fld1;
} addr_ver_tkn_def;
#define addr_ver_tkn_def_Size 30
#pragma section adnl_mrch_data_tkn
/* Definition ADNL-MRCH-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __adnl_mrch_data_tkn
typedef struct __adnl_mrch_data_tkn
{
   char                            pmnt_facilitator_id[11];
   char                            idpnt_sales_org_id[11];
   char                            sub_mrch_id[15];
   char                            rtlr_ind[3];
   char                            cntry_cde[3];
   char                            user_fld_aci[7];
} adnl_mrch_data_tkn_def;
#define adnl_mrch_data_tkn_def_Size 50
#pragma section alt_merch_id_tkn
/* Definition ALT-MERCH-ID-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __alt_merch_id_tkn
typedef struct __alt_merch_id_tkn
{
   char                            alt_merch_id[15];
   char                            user_fld1;
} alt_merch_id_tkn_def;
#define alt_merch_id_tkn_def_Size 16
#pragma section amex_adnl_data_tkn
/* Definition AMEX-ADNL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __amex_adnl_data_tkn
typedef struct __amex_adnl_data_tkn
{
   char                            lgth[3];
   char                            info[301];
} amex_adnl_data_tkn_def;
#define amex_adnl_data_tkn_def_Size 304
#pragma section amex_tkn
/* Definition AMEX-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __amex_tkn
typedef struct __amex_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            amex_data[106];
      struct
      {
         long long                       audit_adj_amt;
         char                            agreement_number[9];
         char                            reference_number[8];
         char                            rental_city[18];
         char                            rental_st[2];
         char                            rental_dat[6];
         char                            rental_tim[4];
         char                            return_city[18];
         char                            return_st[2];
         char                            return_dat[6];
         char                            return_tim[4];
         char                            renter_name[20];
         char                            user_fld1;
      } auto_rent;
      struct
      {
         char                            reference_cde[9];
         char                            charge_type;
         char                            tab_roc_id[10];
         long long                       tax_amt;
         char                            arrival_dat[6];
         char                            depart_dat[6];
         long long                       room_rate;
         char                            program_cde;
         char                            user_fld2[57];
      } ldg;
      struct
      {
         char                            reference_cde[9];
         char                            charge_cde1[4];
         char                            tab_roc_id[10];
         char                            description_cde;
         long long                       tax_amt;
         long long                       food_amt;
         long long                       beverage_amt;
         char                            tip1_cde;
         char                            tip2_cde;
         long long                       tip1_amt;
         long long                       tip2_amt;
         char                            user_fld5[40];
      } rstrnt;
      struct
      {
         long long                       tax_amt;
         char                            reference_cde[9];
         char                            charge_cde1[4];
         char                            tab_roc_id[10];
         char                            charge_cde2[4];
         char                            charge_cde3[4];
         char                            charge_cde4[4];
         char                            charge_cde5[4];
         char                            user_fld3[59];
      } gen_retail;
      struct
      {
         char                            reference_cde[12];
         char                            charge_cde1[4];
         char                            tab_roc_id[10];
         long long                       tax_amt;
         char                            user_fld4[72];
      } oil;
   } u_amex_data;
} amex_tkn_def;
#define amex_tkn_def_Size 108
#pragma section amex_tknx
/* Definition AMEX-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __amex_tknx
typedef struct __amex_tknx
{
   char                            frmt_cde[2];
   union
   {
      char                            amex_data[116];
      struct
      {
         char                            audit_adj_amt[18];
         char                            agreement_number[9];
         char                            reference_number[8];
         char                            rental_city[18];
         char                            rental_st[2];
         char                            rental_dat[6];
         char                            rental_tim[4];
         char                            return_city[18];
         char                            return_st[2];
         char                            return_dat[6];
         char                            return_tim[4];
         char                            renter_name[20];
         char                            user_fld1;
      } auto_rent;
      struct
      {
         char                            reference_cde[9];
         char                            charge_type;
         char                            tab_roc_id[10];
         char                            tax_amt[18];
         char                            arrival_dat[6];
         char                            depart_dat[6];
         char                            room_rate[18];
         char                            program_cde;
         char                            user_fld2[47];
      } ldg;
      struct
      {
         char                            reference_cde[9];
         char                            charge_cde1[4];
         char                            tab_roc_id[10];
         char                            description_cde;
         char                            tax_amt[18];
         char                            food_amt[18];
         char                            beverage_amt[18];
         char                            tip1_cde;
         char                            tip2_cde;
         char                            tip1_amt[18];
         char                            tip2_amt[18];
      } rstrnt;
      struct
      {
         char                            tax_amt[18];
         char                            reference_cde[9];
         char                            charge_cde1[4];
         char                            tab_roc_id[10];
         char                            charge_cde2[4];
         char                            charge_cde3[4];
         char                            charge_cde4[4];
         char                            charge_cde5[4];
         char                            user_fld3[59];
      } gen_retail;
      struct
      {
         char                            reference_cde[12];
         char                            charge_cde1[4];
         char                            tab_roc_id[10];
         char                            tax_amt[18];
         char                            user_fld4[72];
      } oil;
   } u_amex_data;
} amex_tknx_def;
#define amex_tknx_def_Size 118
#pragma section authn_data_tkn
/* Definition AUTHN-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __authn_data_tkn
typedef struct __authn_data_tkn
{
   char                            authn_ind_flg[2];
   union
   {
      char                            authn_ind_data[200];
      struct
      {
         char                            cap_tkn[18];
         char                            unpredict_num[8];
         char                            crncy_cde[4];
         char                            amt_auth[12];
         char                            apsn[2];
         char                            resp_atc[4];
         char                            rslt_cde;
         char                            user_fld_aci[151];
      } cap_tkn_data;
      struct
      {
         char                            aav[28];
         char                            crypto[28];
         char                            user_fld_aci[144];
      } dgtl_pmnt_data;
   } u_authn_ind_data;
} authn_data_tkn_def;
#define authn_data_tkn_def_Size 202
#pragma section auto_substan_data_tkn
/* Definition AUTO-SUBSTAN-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __auto_substan_data_tkn
typedef struct __auto_substan_data_tkn
{
   char                            iias_ind;
   char                            asgn_id[6];
   char                            user_fld_aci[43];
} auto_substan_data_tkn_def;
#define auto_substan_data_tkn_def_Size 50
#pragma section cert_tkn
/* Definition CERT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cert_tkn
typedef struct __cert_tkn
{
   char                            merch_cert_serial_num[16];
   char                            crd_hldr_cert_serial_num[16];
} cert_tkn_def;
#define cert_tkn_def_Size 32
#pragma section chk_auth_tkn
/* Definition CHK-AUTH-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __chk_auth_tkn
typedef struct __chk_auth_tkn
{
   char                            chk_id_num[40];
   char                            chk_id_typ[2];
   char                            state_cde[2];
   char                            birth_dat[6];
   char                            chk_rtg_grp[11];
   char                            chk_provider;
   char                            chk_mrchnt_id[15];
   char                            user_fld1;
} chk_auth_tkn_def;
#define chk_auth_tkn_def_Size 78
#pragma section chk_auth2_tkn
/* Definition CHK-AUTH2-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __chk_auth2_tkn
typedef struct __chk_auth2_tkn
{
   char                            chk_num[12];
   char                            proc_cntl_num[6];
   char                            phone_num[20];
   char                            proc_cde[6];
   char                            auth_typ;
   char                            auth_lvl;
   char                            chk_spf;
   char                            setl_flg;
   char                            conv_flg;
   char                            user_fld1[19];
} chk_auth2_tkn_def;
#define chk_auth2_tkn_def_Size 68
#pragma section chk_auth2_tknx
/* Definition CHK-AUTH2-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __chk_auth2_tknx
typedef struct __chk_auth2_tknx
{
   char                            chk_num[12];
   char                            proc_cntl_num[6];
   char                            phone_num[20];
   char                            proc_cde[6];
   char                            auth_typ;
   char                            auth_lvl;
   char                            chk_spf;
   char                            setl_flg;
   char                            conv_flg;
   char                            user_fld1[19];
} chk_auth2_tknx_def;
#define chk_auth2_tknx_def_Size 68
#pragma section chk_callback_tkn
/* Definition CHK-CALLBACK-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __chk_callback_tkn
typedef struct __chk_callback_tkn
{
   char                            auth_nam[25];
   struct
   {
      char                            street[20];
      char                            city[13];
      char                            st[2];
      char                            postal_cde[9];
   } addr;
   char                            phone_num[20];
   char                            user_fld1;
} chk_callback_tkn_def;
#define chk_callback_tkn_def_Size 90
#pragma section crdhldr_serial_num_tkn
/* Definition CRDHLDR-SERIAL-NUM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __crdhldr_serial_num_tkn
typedef struct __crdhldr_serial_num_tkn
{
   char                            serial_num[32];
} crdhldr_serial_num_tkn_def;
#define crdhldr_serial_num_tkn_def_Size 32
#pragma section dgtl_remt_pmnt_tkn
/* Definition DGTL-REMT-PMNT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __dgtl_remt_pmnt_tkn
typedef struct __dgtl_remt_pmnt_tkn
{
   char                            frmt_cde[2];
   char                            lgth[3];
   union
   {
      char                            info[255];
      char                            genrc[255];
      struct
      {
         char                            mrch_id[150];
         char                            user_fld_mc[105];
      } mc;
      struct
      {
         char                            pmnt_cred_mrch_relnshp;
         char                            ovrl_rsk_assess[2];
         char                            user_fld_visa[252];
      } visa;
   } u_info;
} dgtl_remt_pmnt_tkn_def;
#define dgtl_remt_pmnt_tkn_def_Size 260
#pragma section dukpt_data_tkn
/* Definition DUKPT-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __dukpt_data_tkn
typedef struct __dukpt_data_tkn
{
   char                            key_serial_num[20];
   char                            user_fld1[20];
} dukpt_data_tkn_def;
#define dukpt_data_tkn_def_Size 40
#pragma section ebt_avail_bal_tkn
/* Definition EBT-AVAIL-BAL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ebt_avail_bal_tkn
typedef struct __ebt_avail_bal_tkn
{
   char                            cash_acct_bal_ind;
   char                            user_fld1a;
   long long                       cash_acct_bal;
   char                            food_stmp_bal_ind;
   char                            user_fld1b;
   long long                       food_stmp_bal;
   char                            user_fld1[20];
} ebt_avail_bal_tkn_def;
#define ebt_avail_bal_tkn_def_Size 40
#pragma section ebt_avail_bal_tknx
/* Definition EBT-AVAIL-BAL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ebt_avail_bal_tknx
typedef struct __ebt_avail_bal_tknx
{
   char                            cash_acct_bal_ind;
   char                            cash_acct_bal[18];
   char                            food_stmp_bal_ind;
   char                            food_stmp_bal[18];
   char                            user_fld1[20];
} ebt_avail_bal_tknx_def;
#define ebt_avail_bal_tknx_def_Size 58
#pragma section ebt_voucher_num_tkn
/* Definition EBT-VOUCHER-NUM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ebt_voucher_num_tkn
typedef struct __ebt_voucher_num_tkn
{
   char                            voucher_num[24];
   char                            user_fld1[24];
} ebt_voucher_num_tkn_def;
#define ebt_voucher_num_tkn_def_Size 48
#pragma section emv_3ds_data_tkn
/* Definition EMV-3DS-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __emv_3ds_data_tkn
typedef struct __emv_3ds_data_tkn
{
   char                            ds_txn_id[36];
   char                            user_fld_aci[44];
} emv_3ds_data_tkn_def;
#define emv_3ds_data_tkn_def_Size 80
#pragma section enhnc_rvsl_rte_tkn
/* Definition ENHNC-RVSL-RTE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __enhnc_rvsl_rte_tkn
typedef struct __enhnc_rvsl_rte_tkn
{
   char                            auth_dest[16];
} enhnc_rvsl_rte_tkn_def;
#define enhnc_rvsl_rte_tkn_def_Size 16
#pragma section e_com_addl_data_tkn
/* Definition E-COM-ADDL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __e_com_addl_data_tkn
typedef struct __e_com_addl_data_tkn
{
   char                            scheme_merch_id[15];
   char                            crdhldr_authn_ind;
   char                            dev_typ;
   char                            pgm_typ_id;
   char                            pmnt_initiation_chan[2];
   char                            mobile_txn_typ;
   char                            dat_info[6];
   char                            user_fld_aci[3];
} e_com_addl_data_tkn_def;
#define e_com_addl_data_tkn_def_Size 30
#pragma section genrc_industry_tkn
/* Definition GENRC-INDUSTRY-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __genrc_industry_tkn
typedef struct __genrc_industry_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            info[100];
      struct
      {
         char                            mrch_vat_rgstr_num[20];
         char                            cust_vat_rgstr_num[13];
         char                            user_fld_aci[67];
      } genrc_acq;
      struct
      {
         char                            mrch_vat_rgstr_num[20];
         char                            cust_vat_rgstr_num[13];
         char                            user_fld_aci[67];
      } visa_non_industry_spcf;
   } u_info;
} genrc_industry_tkn_def;
#define genrc_industry_tkn_def_Size 102
#pragma section healthcare_tkn
/* Definition HEALTHCARE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __healthcare_tkn
typedef struct __healthcare_tkn
{
   struct
   {
      struct
      {
         char                            acct_typ[2];
         char                            amt_typ[2];
         char                            crncy_cde[3];
         char                            amt_sign;
         char                            amt[12];
      } bal1;
      struct
      {
         char                            acct_typ[2];
         char                            amt_typ[2];
         char                            crncy_cde[3];
         char                            amt_sign;
         char                            amt[12];
      } bal2;
      struct
      {
         char                            acct_typ[2];
         char                            amt_typ[2];
         char                            crncy_cde[3];
         char                            amt_sign;
         char                            amt[12];
      } bal3;
      struct
      {
         char                            acct_typ[2];
         char                            amt_typ[2];
         char                            crncy_cde[3];
         char                            amt_sign;
         char                            amt[12];
      } bal4;
      struct
      {
         char                            acct_typ[2];
         char                            amt_typ[2];
         char                            crncy_cde[3];
         char                            amt_sign;
         char                            amt[12];
      } bal5;
      struct
      {
         char                            acct_typ[2];
         char                            amt_typ[2];
         char                            crncy_cde[3];
         char                            amt_sign;
         char                            amt[12];
      } bal6;
   } addl_amt;
   struct
   {
      char                            dataset_id;
      char                            dataset_lgth[2];
      union
      {
         char                            info[101];
         struct
         {
            struct
            {
               struct
               {
                  char                            tag;
                  char                            lgth;
                  char                            tag_data[9];
               } hlthcr_prov_id;
               struct
               {
                  char                            tag;
                  char                            lgth;
                  char                            tag_data[2];
               } srv_typ_cde;
               struct
               {
                  char                            tag;
                  char                            lgth;
                  char                            tag_data[6];
               } payer_id;
               struct
               {
                  char                            tag;
                  char                            lgth;
                  char                            tag_data[2];
               } reason_cde;
            } tlv_data;
            char                            reserved[74];
         } healthcare;
      } u_info;
   } txn_spcf_data;
   char                            reserved[200];
} healthcare_tkn_def;
#define healthcare_tkn_def_Size 424
#pragma section hlthcr_srvc_tkn
/* Definition HLTHCR-SRVC-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __hlthcr_srvc_tkn
typedef struct __hlthcr_srvc_tkn
{
   short                           num_srvc;
   struct
   {
      char                            provider_id[9];
      char                            typ_cde[2];
      char                            payer_id[6];
      char                            rsn_cde[2];
      char                            user_fld1;
   } srvc[5];
} hlthcr_srvc_tkn_def;
#define hlthcr_srvc_tkn_def_Size 102
#pragma section hlthcr_srvc_tknx
/* Definition HLTHCR-SRVC-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __hlthcr_srvc_tknx
typedef struct __hlthcr_srvc_tknx
{
   char                            num_srvc[2];
   struct
   {
      char                            provider_id[9];
      char                            typ_cde[2];
      char                            payer_id[6];
      char                            rsn_cde[2];
      char                            user_fld1;
   } srvc[5];
} hlthcr_srvc_tknx_def;
#define hlthcr_srvc_tknx_def_Size 102
#pragma section hlthcr_transit_tkn
/* Definition HLTHCR-TRANSIT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __hlthcr_transit_tkn
typedef struct __hlthcr_transit_tkn
{
   short                           num_adnl_amt;
   struct
   {
      char                            acct_typ[2];
      char                            amt_typ[2];
      char                            crncy_cde[3];
      char                            amt_sign;
      long long                       amt;
   } adnl_amt[6];
} hlthcr_transit_tkn_def;
#define hlthcr_transit_tkn_def_Size 98
#pragma section hlthcr_transit_tknx
/* Definition HLTHCR-TRANSIT-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __hlthcr_transit_tknx
typedef struct __hlthcr_transit_tknx
{
   char                            num_adnl_amt[2];
   struct
   {
      char                            acct_typ[2];
      char                            amt_typ[2];
      char                            crncy_cde[3];
      char                            amt_sign;
      char                            amt[12];
   } adnl_amt[6];
} hlthcr_transit_tknx_def;
#define hlthcr_transit_tknx_def_Size 122
#pragma section iavs_data_tkn
/* Definition IAVS-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __iavs_data_tkn
typedef struct __iavs_data_tkn
{
   char                            pstl_cde[9];
   char                            addr[40];
   char                            user_fld1;
} iavs_data_tkn_def;
#define iavs_data_tkn_def_Size 50
#pragma section ichg_compliance_tkn
/* Definition ICHG-COMPLIANCE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ichg_compliance_tkn
typedef struct __ichg_compliance_tkn
{
   char                            life_cycle_ind;
   char                            trace_id[15];
   char                            valid_cde[4];
   char                            monitoring_stat;
   char                            err_ind;
} ichg_compliance_tkn_def;
#define ichg_compliance_tkn_def_Size 22
#pragma section ichg_pgm_tkn
/* Definition ICHG-PGM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ichg_pgm_tkn
typedef struct __ichg_pgm_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            pgm_data[256];
      struct
      {
         char                            ttl_amt[12];
         char                            crncy_cde[3];
         char                            num_instl[3];
         char                            amt_each_instl[12];
         char                            instl_pmnt_num[3];
         char                            freq_instl;
         char                            dat_first_instl[6];
         char                            ttl_amt_funded[12];
         char                            pcnt_amt_rqst[4];
         char                            ttl_expenses[12];
         char                            pcnt_ttl_expenses[4];
         char                            ttl_fees[12];
         char                            pcnt_ttl_fees[4];
         char                            ttl_taxes[12];
         char                            pcnt_ttl_taxes[4];
         char                            ttl_insurance[12];
         char                            pcnt_ttl_insurance[4];
         char                            ttl_other_costs[12];
         char                            pcnt_ttl_other_costs[4];
         char                            mnthly_intrst_rate[7];
         char                            annual_intrst_rate[7];
         char                            annual_ttl_cost_financing[7];
         char                            instl_pmnt_typ[2];
         char                            grace_prd[4];
         char                            instl_pmnt_intrst[12];
         char                            vat_instl_pmnt_intrst[10];
         char                            plan_rgstr_sys_id[35];
         char                            plan_owner[2];
         char                            user_fld_aci[34];
      } visa_instl_pmnt_data;
      struct
      {
         char                            instl_plan_typ[2];
         char                            num_instl[2];
         char                            amt_each_instl[12];
         char                            ttl_amt[12];
         char                            intrst_rat[4];
         char                            ttl_eff_cost[12];
         char                            ttl_taxes[7];
         char                            pcnt_ttl_taxes[4];
         char                            ttl_fees[7];
         char                            pcnt_ttl_fees[4];
         char                            ttl_insurance[7];
         char                            pcnt_ttl_insurance[4];
         char                            ttl_other_costs[7];
         char                            pct_ttl_other_costs[4];
         char                            ttl_amt_to_mrch[7];
         char                            pcnt_ttl_amt_to_mrch[4];
         char                            pct_ttl_eff_cost[7];
         char                            user_fld_aci[150];
      } mc_instl_pmnt_data;
      struct
      {
         char                            ntwk_id;
         char                            ichg_pgm_id[3];
         char                            stri_vrfy_val[10];
         char                            market_ind;
         char                            mrch_aggr_ind;
         char                            txn_aggr_ind;
         char                            money_xfer_prepd_loan;
         char                            txn_descr[2];
         char                            acss_txn_seq_num[15];
         char                            incr_auth;
         char                            pur_id[26];
         char                            mrch_ship_dat[8];
         char                            mrch_back_order[2];
         char                            mult_clr_txn_num[3];
         char                            mult_clr_txn_cnt[3];
         char                            acq_ref_num[23];
         char                            sms_dms_ind[3];
         char                            user_fld_aci[152];
      } star_access_txn_data;
      struct
      {
         char                            instl_plan_typ[2];
         char                            num_instl[2];
         char                            amt_each_instl[12];
         char                            intrst_rate_nominal[5];
         char                            intrst_rate[5];
         char                            pcnt_insurance[5];
         char                            amt_insurance[12];
         char                            amt_iss_charge[12];
         char                            ttl_num_instl[2];
         char                            user_fld_cuotas[2];
         char                            user_fld_aci[197];
      } mc_cuotas_pmnt_data;
      struct
      {
         char                            dob[8];
         char                            acct_num[10];
         char                            postal_cde[6];
         char                            surname[6];
         char                            free_txt[221];
         char                            user_fld_aci[5];
      } visa_debt_repay_rcpnt;
      struct
      {
         struct
         {
            char                            plan_ind;
            char                            num_instl[2];
         } instl;
         char                            cust_deferred_sale[6];
         char                            pos_web[15];
         char                            purch_amt[12];
         char                            user_fld_aci[220];
      } visa_argentina_pmnt;
      struct
      {
         char                            recur_pmnt_mndt_typ;
         char                            recur_pmnt_txn_typ;
         char                            valid_flg;
         char                            max_recur_pmnt_amt[10];
         char                            rgstrd_txn_id[10];
         char                            num_recur_pmnts[2];
         char                            recur_pmnt_freq;
         char                            user_fld_aci[230];
      } mc_e_comm_recur_pmnt_data;
      struct
      {
         char                            pmnt_typ;
         char                            pmnt_amt_ind_per_txn;
         char                            num_pmnt[2];
         char                            freq_pmnt[2];
         char                            rgstr_ref_num[35];
         char                            max_pmnt_amt[12];
         char                            valid_ind;
         char                            user_fld_aci[202];
      } visa_recur_pmnt_arng;
   } u_pgm_data;
} ichg_pgm_tkn_def;
#define ichg_pgm_tkn_def_Size 258
#pragma section mhi_addl_data_tkn
/* Definition MHI-ADDL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mhi_addl_data_tkn
typedef struct __mhi_addl_data_tkn
{
   short                           lgth;
   long long                       orig_amt;
   char                            user_fld[192];
} mhi_addl_data_tkn_def;
#define mhi_addl_data_tkn_def_Size 202
#pragma section instl_cntry_data_tkn
/* Definition INSTL-CNTRY-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __instl_cntry_data_tkn
typedef struct __instl_cntry_data_tkn
{
   char                            cntry_cde[2];
   union
   {
      char                            info[36];
      struct
      {
         char                            tax_id[20];
         char                            user_fld_hr[16];
      } croatia;
      struct
      {
         char                            cust_id[11];
         char                            user_fld_co[25];
      } colombia;
      struct
      {
         char                            fncl_typ;
         char                            buyer_id_typ;
         char                            buyer_tax_id[14];
         char                            mrch_tax_id[20];
      } brazil;
   } u_info;
   char                            user_fld_aci[4];
} instl_cntry_data_tkn_def;
#define instl_cntry_data_tkn_def_Size 42
#pragma section mhi_addl_data_tknx
/* Definition MHI-ADDL-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mhi_addl_data_tknx
typedef struct __mhi_addl_data_tknx
{
   char                            lgth[5];
   char                            orig_amt[18];
   char                            user_fld2;
   char                            user_fld[192];
} mhi_addl_data_tknx_def;
#define mhi_addl_data_tknx_def_Size 216
#pragma section mrch_cntct_data_tkn
/* Definition MRCH-CNTCT-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mrch_cntct_data_tkn
typedef struct __mrch_cntct_data_tkn
{
   char                            phone[20];
   char                            email_addr[60];
   char                            user_fld_aci[40];
} mrch_cntct_data_tkn_def;
#define mrch_cntct_data_tkn_def_Size 120
#pragma section mrch_descriptor_tkn
/* Definition MRCH-DESCRIPTOR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mrch_descriptor_tkn
typedef struct __mrch_descriptor_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            tkn_data[50];
      struct
      {
         char                            nam[12];
         char                            tckt_num[13];
         char                            user_fld_airline_data[25];
      } airline_data;
   } u_tkn_data;
} mrch_descriptor_tkn_def;
#define mrch_descriptor_tkn_def_Size 52
#pragma section mrch_serial_num_tkn
/* Definition MRCH-SERIAL-NUM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mrch_serial_num_tkn
typedef struct __mrch_serial_num_tkn
{
   char                            serial_num[32];
} mrch_serial_num_tkn_def;
#define mrch_serial_num_tkn_def_Size 32
#pragma section opt_data_tkn
/* Definition OPT-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __opt_data_tkn
typedef struct __opt_data_tkn
{
   char                            opt_data[250];
} opt_data_tkn_def;
#define opt_data_tkn_def_Size 250
#pragma section pos_bal_tkn
/* Definition POS-BAL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_bal_tkn
typedef struct __pos_bal_tkn
{
   long long                       acct_amt_1;
   long long                       txn_amt_1;
   char                            acct_crncy_cde[3];
   char                            txn_crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            cpf_rtrn_bal;
   char                            user_fld1[5];
} pos_bal_tkn_def;
#define pos_bal_tkn_def_Size 40
#pragma section pos_data1_tkn
/* Definition POS-DATA1-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_data1_tkn
typedef struct __pos_data1_tkn
{
   char                            resp_src_rsn_cde;
   char                            crd_vrfy_flg2;
   long long                       online_lmt;
   char                            retl_class_cde[4];
   char                            emv_capable_outlet;
   union
   {
      char                            recur_pmnt_ind;
      char                            pmnt_ind;
   } u_recur_pmnt_ind;
   union
   {
      char                            num_instl[2];
      struct
      {
         char                            amt;
         char                            user_fld_recur_pmnt;
      } recur_pmnt;
   } u_num_instl;
   char                            num_mm_gratuity[2];
   union
   {
      char                            pmnt_plan[3];
      char                            pmnt_typ_ind[3];
   } u_pmnt_plan;
   char                            term_output_cap_ind;
   char                            crdhldr_authn_cap_ind;
   char                            partial_auth_opt;
   char                            instl_plan_typ[2];
   union
   {
      char                            instl_gratuity_prd;
      char                            instl_stat;
   } u_instl_gratuity_prd;
   char                            rvsl_rsn_ind;
   union
   {
      char                            failed_cvm_alwd;
      char                            cvm_ind;
   } u_failed_cvm_alwd;
   union
   {
      char                            dup_chk_req;
      char                            real_time_data_ind;
   } u_dup_chk_req;
   char                            auth_msg_ind;
   char                            term_typ;
   union
   {
      char                            recur_pmnt_info;
      char                            pmnt_info;
   } u_recur_pmnt_info;
   char                            user_fld1;
} pos_data1_tkn_def;
#define pos_data1_tkn_def_Size 36
#pragma section free_form_txt
/* Definition FREE-FORM-TXT created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __free_form_txt
typedef struct __free_form_txt
{
   char                            dataset_id[2];
   char                            free_form_data[99];
   char                            orig_cr_appl_data[50];
   char                            user_fld_aci;
} free_form_txt_def;
#define free_form_txt_def_Size 152
#pragma section pos_data1_tknx
/* Definition POS-DATA1-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_data1_tknx
typedef struct __pos_data1_tknx
{
   char                            resp_src_rsn_cde;
   char                            crd_vrfy_flg2;
   char                            online_lmt[12];
   char                            retl_class_cde[4];
   char                            emv_capable_outlet;
   union
   {
      char                            recur_pmnt_ind;
      char                            pmnt_ind;
   } u_recur_pmnt_ind;
   char                            num_instl[2];
   char                            num_mm_gratuity[2];
   union
   {
      char                            pmnt_plan[3];
      char                            pmnt_typ_ind[3];
   } u_pmnt_plan;
   char                            term_output_cap_ind;
   char                            crdhldr_authn_cap_ind;
   char                            partial_auth_opt;
   char                            instl_plan_typ[2];
   union
   {
      char                            instl_gratuity_prd;
      char                            instl_stat;
   } u_instl_gratuity_prd;
   char                            rvsl_rsn_ind;
   char                            failed_cvm_alwd;
   char                            dup_chk_req;
   char                            auth_msg_ind;
   char                            term_typ;
   union
   {
      char                            recur_pmnt_info;
      char                            pmnt_info;
   } u_recur_pmnt_info;
   char                            user_fld1;
} pos_data1_tknx_def;
#define pos_data1_tknx_def_Size 40
#pragma section pos_data2_tkn
/* Definition POS-DATA2-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_data2_tkn
typedef struct __pos_data2_tkn
{
   char                            atc[2];
   char                            form_factr_ind[4];
   char                            atc_valid_ind;
   char                            crd_authn_ind;
   char                            pmnt_initiation_chan[2];
   char                            crdhldr_vrfy_mthd_id_by_dev[2];
   char                            adnl_data_cde[2];
   char                            user_fld_aci[20];
} pos_data2_tkn_def;
#define pos_data2_tkn_def_Size 34
#pragma section pos_data2_tknx
/* Definition POS-DATA2-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_data2_tknx
typedef struct __pos_data2_tknx
{
   char                            atc[4];
   char                            form_factr_ind[8];
   char                            atc_valid_ind;
   char                            crd_authn_ind;
   char                            pmnt_initiation_chan[2];
   char                            crdhldr_vrfy_mthd_id_by_dev[2];
   char                            adnl_data_cde[2];
   char                            user_fld_aci[20];
} pos_data2_tknx_def;
#define pos_data2_tknx_def_Size 40
#pragma section pos_bal_tknx
/* Definition POS-BAL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_bal_tknx
typedef struct __pos_bal_tknx
{
   char                            acct_amt_1[19];
   char                            txn_amt_1[19];
   char                            acct_crncy_cde[3];
   char                            txn_crncy_cde[3];
   char                            conv_rate[8];
   char                            conv_dat[4];
   char                            cpf_rtrn_bal;
   char                            user_fld1[5];
} pos_bal_tknx_def;
#define pos_bal_tknx_def_Size 62
#pragma section pos_mrch_tkn
/* Definition POS-MRCH-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_mrch_tkn
typedef struct __pos_mrch_tkn
{
   char                            e_comm_goods_ind;
   union
   {
      char                            existing_debt_ind;
      char                            spcl_pos_cond;
   } u_existing_debt_ind;
   char                            deferred_billing_ind;
   char                            reln_participant_ind;
   char                            dpc_num[4];
   char                            pinpad_id[16];
   char                            acq_term_id[16];
   char                            rcncl_ent;
   char                            acq_term_post_dat[6];
   char                            pre_auth_chrgbk;
   char                            enhanced_pre_auth;
   char                            adnl_resp_cde[3];
   char                            mc_elec_accpt_ind;
   char                            mrch_id[8];
   char                            pgm_ind;
   char                            user_fld1[8];
} pos_mrch_tkn_def;
#define pos_mrch_tkn_def_Size 70
#pragma section pos_split_txn_rte_tkn
/* Definition POS-SPLIT-TXN-RTE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_split_txn_rte_tkn
typedef struct __pos_split_txn_rte_tkn
{
   char                            ast_rtn_pro_name[16];
   char                            router1_name[16];
   char                            router2_name[16];
   char                            user_fld_aci[12];
} pos_split_txn_rte_tkn_def;
#define pos_split_txn_rte_tkn_def_Size 60
#pragma section industry_data_tkn
/* Definition INDUSTRY-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __industry_data_tkn
typedef struct __industry_data_tkn
{
   char                            industry_typ[2];
   union
   {
      char                            industry_data[170];
      struct
      {
         char                            arrival_dat[6];
         char                            depart_dat[6];
         char                            ttl_room_nights[4];
         char                            room_rate[12];
         char                            room_tax[12];
         char                            phn_chrgs[12];
         char                            laundry_chrgs[12];
         char                            gift_shop_chrgs[12];
         char                            bar_chrgs[12];
         char                            other_chrgs[12];
         char                            ttl_tax_amt[12];
         char                            property_phn_num[15];
         char                            cust_svc_phn_num[15];
         char                            folio_num[10];
         char                            fire_safety_act_ind;
         char                            no_show_ind;
         char                            user_fld1[16];
      } lodging;
      struct
      {
         char                            renter_nam[29];
         char                            rental_clas_id[4];
         char                            rental_dat[6];
         char                            rental_city[18];
         char                            rental_st[3];
         char                            rental_cntry[3];
         char                            rtrn_dat[6];
         char                            rtrn_city[18];
         char                            rtrn_st[3];
         char                            rtrn_cntry[3];
         char                            rtrn_loc_id[10];
         char                            days_rented[4];
         char                            dly_rental_rate[12];
         char                            extra_chrgs[12];
         char                            ttl_tax_amt[12];
         char                            cust_svc_phn_num[15];
         char                            agreement_num[9];
         char                            tax_exempt_ind;
         char                            no_show_ind;
         char                            user_fld2;
      } vehicle;
   } u_industry_data;
} industry_data_tkn_def;
#define industry_data_tkn_def_Size 172
#pragma section instl_pmnt_data_tkn
/* Definition INSTL-PMNT-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __instl_pmnt_data_tkn
typedef struct __instl_pmnt_data_tkn
{
   union
   {
      char                            total_amt[12];
      char                            first_amt[12];
   } u_total_amt;
   char                            instl_amt[12];
   char                            first_pmnt_dat[6];
   char                            iss_crncy_cde[3];
   char                            intrst_rat[5];
   char                            intrst_rat_prd;
   char                            amt_flg;
   char                            user_fld_aci[4];
} instl_pmnt_data_tkn_def;
#define instl_pmnt_data_tkn_def_Size 44
#pragma section pre_pay_mrch_tkn
/* Definition PRE-PAY-MRCH-TKN created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __pre_pay_mrch_tkn
typedef struct __pre_pay_mrch_tkn
{
   __int32_t                       refund_timr;
   char                            prod_nam[20];
   char                            end_of_day_flg;
   char                            sol_prov_id[2];
   char                            telco_mcc[3];
   char                            rel_ind[2];
   char                            purch_ref[15];
   char                            user_fld_aci;
} pre_pay_mrch_tkn_def;
#define pre_pay_mrch_tkn_def_Size 48
#pragma section pre_pay_mrch_tknx
/* Definition PRE-PAY-MRCH-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pre_pay_mrch_tknx
typedef struct __pre_pay_mrch_tknx
{
   char                            refund_timr[10];
   char                            prod_nam[20];
   char                            end_of_day_flg;
   char                            sol_prov_id[2];
   char                            telco_mcc[3];
   char                            rel_ind[2];
   char                            purch_ref[15];
   char                            user_fld_aci;
} pre_pay_mrch_tknx_def;
#define pre_pay_mrch_tknx_def_Size 54
#pragma section ps2000_tkn
/* Definition PS2000-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ps2000_tkn
typedef struct __ps2000_tkn
{
   char                            srv_ind;
   char                            tran_id[15];
   char                            valid_cde[4];
   char                            mkt_spfc_data_id;
   char                            dur[2];
   char                            prstgs_prop_ind;
} ps2000_tkn_def;
#define ps2000_tkn_def_Size 24
#pragma section ps2000_offl_tkn
/* Definition PS2000-OFFL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ps2000_offl_tkn
typedef struct __ps2000_offl_tkn
{
   struct
   {
      char                            frmt_id;
      char                            info[25];
   } pur_id;
   char                            chk_dat[6];
   char                            no_shw_ind;
   char                            extra_chrgs[6];
   char                            mult_clrng_seq_num[2];
   char                            mult_clrng_seq_cnt[2];
   char                            rstrctd_tckt_ind;
   char                            tot_amt_auth[12];
   char                            rqstd_pymnt_srvc;
   char                            chrgbck_rghts_ind[2];
   char                            user_fld1;
} ps2000_offl_tkn_def;
#define ps2000_offl_tkn_def_Size 60
#pragma section ps50_tkn
/* Definition PS50-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ps50_tkn
typedef struct __ps50_tkn
{
   char                            err_flg;
   char                            rte_grp[11];
   char                            crd_vrfy_flg;
   char                            city_ext[5];
   char                            complete_track2_data;
   char                            uaf_flg;
} ps50_tkn_def;
#define ps50_tkn_def_Size 20
#pragma section ps51_tkn
/* Definition PS51-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ps51_tkn
typedef struct __ps51_tkn
{
   char                            cvd_fld[4];
   char                            resub_stat;
   char                            resub_cntr[3];
   char                            term_postal_cde[10];
   union
   {
      char                            e_com_flg;
      char                            moto_flg;
   } u_e_com_flg;
   char                            cmrcl_crd_typ;
   char                            adnl_data_ind;
   char                            cvd_fld_present;
   union
   {
      char                            saf_or_force_post;
      char                            mrch_srvc_rqst;
   } u_saf_or_force_post;
   char                            authn_coll_ind;
   char                            frd_prn_flg;
   char                            cavv_aav_rslt_cde;
} ps51_tkn_def;
#define ps51_tkn_def_Size 26
#pragma section pt_srv_data_tkn
/* Definition PT-SRV-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pt_srv_data_tkn
typedef struct __pt_srv_data_tkn
{
   char                            term_attend_ind;
   char                            term_oper_ind;
   char                            term_loc_ind;
   char                            crdhldr_present_ind;
   char                            crd_present_ind;
   char                            crd_captr_ind;
   char                            txn_stat_ind;
   char                            txn_sec_ind;
   char                            txn_rtn_ind;
   char                            crdhldr_actvt_term_ind;
   char                            term_input_cap_ind;
   char                            crdhldr_id_method;
} pt_srv_data_tkn_def;
#define pt_srv_data_tkn_def_Size 12
#pragma section purchase_tkn
/* Definition PURCHASE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __purchase_tkn
typedef struct __purchase_tkn
{
   struct
   {
      char                            crd_typ;
      char                            cust_ref_ind[17];
      char                            tax_amt[12];
   } purchase;
   union
   {
      char                            tkn_data[846];
      struct
      {
         char                            ship_from_cde[9];
         char                            dest_postal_cde[9];
         char                            dest_cntry_cde[3];
         char                            mrch_ref_num[17];
         char                            freight_amt[9];
         char                            duty_amt[9];
         char                            prod_cde[12];
         char                            descr[35];
         char                            qty[4];
         char                            unit_of_measure[3];
         char                            extended_amt[9];
         char                            db_cr_ind;
         char                            discount_ind;
         char                            discount_amt[9];
         char                            net_gross_ind;
         char                            sales_tax_ind;
         char                            vat_tax_rate[5];
         char                            vat_tax_typ[4];
         char                            vat_tax_amt[9];
         char                            alt_tax_amt_ind;
         char                            alt_tax_amt[9];
         char                            alt_tax_id[15];
         char                            user_fld1;
         char                            user_fld2[670];
      } mc_purchase_data;
      struct
      {
         char                            prod_cde[12];
         char                            descr[26];
         char                            commodity_cde[12];
         char                            qty[12];
         char                            unit_of_measure[12];
         char                            unit_cost[12];
         char                            vat_tax_amt[12];
         char                            vat_tax_rate[4];
         char                            discount_amt[12];
         char                            ttl_amt[12];
         char                            detl_ind;
         char                            user_fld3;
         char                            user_fld4[718];
      } visa_purchase_data;
      struct
      {
         char                            brand_cde[4];
         char                            svc_typ;
         char                            fuel_prod_cde[2];
         char                            unit_cost[5];
         char                            unit_of_measure;
         char                            qty[6];
         char                            gross_fuel_price[9];
         char                            odometer[7];
         char                            vehicle_num[17];
         char                            id_num[17];
         char                            prod_typ;
         char                            tax_exemption_amt[5];
         char                            alt_tax_id[15];
         char                            dcln_rsn_cde[2];
         char                            non_fuel_items;
         char                            user_fld5;
         struct
         {
            char                            prod_cde[12];
            char                            descr[35];
            char                            qty[5];
            char                            unit_of_measure[3];
            char                            extnd_amt[9];
            char                            discount_ind;
            char                            discount_amt[9];
            char                            net_gross_ind;
            char                            vat_tax_rate[5];
            char                            vat_tax_typ[4];
            char                            tax_amt[9];
            char                            db_cr_ind;
         } non_fuel_data[8];
      } mc_fleet_data;
      struct
      {
         char                            purch_typ;
         char                            fuel_typ[2];
         char                            unit_of_measure;
         char                            qty[12];
         char                            unit_cost[12];
         char                            gross_fuel_price[12];
         char                            net_fuel_price[12];
         char                            net_non_fuel[12];
         char                            vehicle_num[17];
         char                            id_num[17];
         char                            odometer[7];
         char                            vat_tax_rate[4];
         union
         {
            char                            misc_fuel_tax[12];
            struct
            {
               char                            user_data[12];
            } user_fld8;
         } u_misc_fuel_tax;
         char                            other_tax[12];
         union
         {
            char                            misc_non_fuel_tax[12];
            struct
            {
               char                            user_data[12];
            } user_fld9;
         } u_misc_non_fuel_tax;
         char                            svc_typ;
         char                            prod_cde[8][2];
         char                            gross_non_fuel[12];
         union
         {
            char                            misc_fuel_stat;
            struct
            {
               char                            user_data;
            } user_fld10;
         } u_misc_fuel_stat;
         union
         {
            char                            misc_non_fuel_stat;
            struct
            {
               char                            user_data;
            } user_fld11;
         } u_misc_non_fuel_stat;
         char                            user_fld_12[3];
         char                            fleet_trlr_num[16];
         char                            fleet_adnl_prmpt_data_1[20];
         char                            fleet_adnl_prmpt_data_2[20];
         char                            pur_rstrct_flg;
         char                            host_based_pur_rstrct[32];
         union
         {
            char                            city_fuel_tax[12];
            struct
            {
               char                            amt[12];
            } local_tax;
         } u_city_fuel_tax;
         char                            fleet_employee_num[12];
         char                            user_fld_13[2];
         union
         {
            char                            fed_sales_tax[12];
            struct
            {
               char                            amt[12];
            } natl_tax;
         } u_fed_sales_tax;
         char                            natl_tax_incl;
         char                            local_tax_incl;
         char                            mrch_vat_rgstr_num[20];
         char                            cust_vat_rgstr_num[13];
         char                            cust_id[17];
         char                            msg_id[15];
         char                            adnl_data_ind;
         char                            sum_commodity_cde[4];
         char                            fuel_brand[4];
         char                            fuel_txn_valid_rslt[5];
         char                            fuel_accpt_mde;
         char                            drv_id[20];
         char                            job_num[10];
         char                            fleet_num[8];
         char                            vehicle_rgstr_num[14];
         union
         {
            char                            prod_qual[6];
            struct
            {
               char                            user_data[6];
            } user_fld14;
         } u_prod_qual;
         char                            expand_fuel_typ[4];
         struct
         {
            char                            prod_cde[4];
            char                            prod_cde_qty[4];
            char                            prod_cde_unit_cost[12];
         } expand_non_fuel[4];
         char                            user_fld6[316];
      } visa_fleet_data;
   } u_tkn_data;
} purchase_tkn_def;
#define purchase_tkn_def_Size 876
#pragma section reward_pgm_tkn
/* Definition REWARD-PGM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __reward_pgm_tkn
typedef struct __reward_pgm_tkn
{
   char                            prgrm_id[6];
   char                            reserved[40];
} reward_pgm_tkn_def;
#define reward_pgm_tkn_def_Size 46
#pragma section sta_id_tkn
/* Definition STA-ID-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sta_id_tkn
typedef struct __sta_id_tkn
{
   char                            sta_id[16];
} sta_id_tkn_def;
#define sta_id_tkn_def_Size 16
#pragma section stored_value_tkn
/* Definition STORED-VALUE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __stored_value_tkn
typedef struct __stored_value_tkn
{
   long long                       crd_bal;
   char                            exp_dat[4];
   union
   {
      char                            bal_as_cash;
      char                            prev_acct_stat;
   } u_bal_as_cash;
   union
   {
      char                            sv_rvsl_flg;
      char                            cur_acct_stat;
   } u_sv_rvsl_flg;
   char                            trk2[40];
} stored_value_tkn_def;
#define stored_value_tkn_def_Size 54
#pragma section stored_value_tknx
/* Definition STORED-VALUE-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __stored_value_tknx
typedef struct __stored_value_tknx
{
   char                            crd_bal[18];
   char                            exp_dat[4];
   union
   {
      char                            bal_as_cash;
      char                            prev_acct_stat;
   } u_bal_as_cash;
   union
   {
      char                            sv_rvsl_flg;
      char                            cur_acct_stat;
   } u_sv_rvsl_flg;
   char                            trk2[40];
} stored_value_tknx_def;
#define stored_value_tknx_def_Size 64
#pragma section suppl_instl_data_tkn
/* Definition SUPPL-INSTL-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __suppl_instl_data_tkn
typedef struct __suppl_instl_data_tkn
{
   char                            instl_pmnt_bonus[12];
   char                            first_cmsn_fee[12];
   char                            prd_cmsn_fee[12];
   char                            cmsn_fee_rate[6];
   char                            adnl_cmsn_fee_rate[6];
   char                            user_fld_aci[32];
} suppl_instl_data_tkn_def;
#define suppl_instl_data_tkn_def_Size 80
#pragma section suppl_mrch_data_tkn
/* Definition SUPPL-MRCH-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __suppl_mrch_data_tkn
typedef struct __suppl_mrch_data_tkn
{
   char                            mrch_id[20];
   char                            user_fld_aci[20];
} suppl_mrch_data_tkn_def;
#define suppl_mrch_data_tkn_def_Size 40
#pragma section trans_stain_xid_tkn
/* Definition TRANS-STAIN-XID-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __trans_stain_xid_tkn
typedef struct __trans_stain_xid_tkn
{
   char                            xid[40];
   char                            trans_stain[40];
} trans_stain_xid_tkn_def;
#define trans_stain_xid_tkn_def_Size 80
#pragma section transit_txn_tkn
/* Definition TRANSIT-TXN-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __transit_txn_tkn
typedef struct __transit_txn_tkn
{
   char                            txn_typ_ind[2];
   char                            trnsprt_mde_ind[2];
   char                            user_fld_aci[4];
} transit_txn_tkn_def;
#define transit_txn_tkn_def_Size 8
#pragma section ext_authn_data_tkn
/* Definition EXT-AUTHN-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ext_authn_data_tkn
typedef struct __ext_authn_data_tkn
{
   char                            data_ind_flg[2];
   char                            info_data_lgth[4];
   union
   {
      char                            info[256];
      char                            cup_cert_data[256];
      struct
      {
         char                            pgm_proto;
         char                            ds_txn_id[36];
         char                            user_fld_mc[219];
      } mc_authn_data;
      struct
      {
         char                            auth_pgm[2];
         struct
         {
            char                            id[48];
            char                            num[15];
            char                            loc[25];
            char                            ip_addr[15];
         } tkn_dev;
         char                            user_fld_visa[151];
      } visa_authn_data;
      struct
      {
         char                            pgm_proto;
         char                            ds_txn_id[36];
         char                            user_fld_genrc[219];
      } genrc_authn_data;
   } u_info;
} ext_authn_data_tkn_def;
#define ext_authn_data_tkn_def_Size 262
#pragma section instl_resp_data_tkn
/* Definition INSTL-RESP-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __instl_resp_data_tkn
typedef struct __instl_resp_data_tkn
{
   char                            frmt_cde[2];
   short                           lgth;
   union
   {
      char                            info[784];
      struct
      {
         char                            instl_plan_typ[2];
         char                            pmnt_opt;
         char                            instl_opt;
         char                            min_num_instl[2];
         char                            max_num_instl[2];
         char                            iss_crncy_cde[3];
         char                            user_fld_aci;
         char                            num_opts_spcf[2];
         char                            num_opts_avail[2];
         struct
         {
            char                            intrst_rat[5];
            char                            instl_fee[12];
            char                            annual_pctg_rat[5];
            char                            ttl_amt_due[12];
            char                            first_instl_amt[12];
            char                            instl_amt[12];
            char                            num_instl[2];
            char                            user_fld_aci[4];
         } option[12];
      } mc_instl_resp_data;
      struct
      {
         char                            bank_nam[30];
         char                            num_instl_inq_resp[2];
         struct
         {
            char                            num_instl[2];
            char                            instl_amt_opt[12];
            char                            intrst_rate_opt[5];
            char                            user_fld_aci;
         } instl_inq_resp[5];
         char                            user_fld_aci[652];
      } visa_argentina_pmnt_inq_resp;
      struct
      {
         struct
         {
            char                            plan_ind;
            char                            num_instl[2];
         } instl;
         struct
         {
            char                            instl_amt[12];
            char                            intrst_rate_iss[5];
            char                            mthly_intrst_rate[5];
            char                            bank_nam[30];
            char                            intrst_rate_amt[12];
         } iss_instl;
         char                            user_fld_pmnt_resp;
         char                            user_fld_aci[716];
      } visa_argentina_pmnt_auth_resp;
   } u_info;
} instl_resp_data_tkn_def;
#define instl_resp_data_tkn_def_Size 788
#pragma section instl_resp_data_tknx
/* Definition INSTL-RESP-DATA-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __instl_resp_data_tknx
typedef struct __instl_resp_data_tknx
{
   char                            frmt_cde[2];
   char                            lgth[4];
   union
   {
      char                            info[784];
      struct
      {
         char                            instl_plan_typ[2];
         char                            pmnt_opt;
         char                            instl_opt;
         char                            min_num_instl[2];
         char                            max_num_instl[2];
         char                            iss_crncy_cde[3];
         char                            user_fld_aci;
         char                            num_opts_spcf[2];
         char                            num_opts_avail[2];
         struct
         {
            char                            intrst_rat[5];
            char                            instl_fee[12];
            char                            annual_pctg_rat[5];
            char                            ttl_amt_due[12];
            char                            first_instl_amt[12];
            char                            instl_amt[12];
            char                            num_instl[2];
            char                            user_fld_aci[4];
         } option[12];
      } mc_instl_resp_data;
      struct
      {
         char                            bank_nam[30];
         char                            num_instl_inq_resp[2];
         struct
         {
            char                            num_instl[2];
            char                            instl_amt_opt[12];
            char                            intrst_rate_opt[5];
            char                            user_fld_aci;
         } instl_inq_resp[5];
         char                            user_fld_aci[652];
      } visa_argentina_pmnt_inq_resp;
      struct
      {
         struct
         {
            char                            plan_ind;
            char                            num_instl[2];
         } instl;
         struct
         {
            char                            instl_amt[12];
            char                            intrst_rate_iss[5];
            char                            mthly_intrst_rate[5];
            char                            bank_nam[30];
            char                            intrst_rate_amt[12];
         } iss_instl;
         char                            user_fld_pmnt_resp;
         char                            user_fld_aci[716];
      } visa_argentina_pmnt_auth_resp;
   } u_info;
} instl_resp_data_tknx_def;
#define instl_resp_data_tknx_def_Size 790
#pragma section sca_acq_data_tkn
/* Definition SCA-ACQ-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sca_acq_data_tkn
typedef struct __sca_acq_data_tkn
{
   char                            sca_exempt_inds[4];
   char                            pgm_proto;
   char                            ecomm_3d_secure_ind;
   char                            sca_scope_ind;
   char                            sca_ind;
   char                            tra_exempt_rslt;
   char                            trusted_mrch_exempt_rslt;
   union
   {
      char                            dlgt_authn_exempt_rslt;
      char                            exempt_ind_stat;
   } u_dlgt_authn_exempt_rslt;
   char                            exempt_ind_id;
   char                            cav_typ;
   char                            acq_cntry_cde[3];
   char                            user_fld_aci[4];
} sca_acq_data_tkn_def;
#define sca_acq_data_tkn_def_Size 20
#pragma section trnsprt_ancillary_tkn
/* Definition TRNSPRT-ANCILLARY-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __trnsprt_ancillary_tkn
typedef struct __trnsprt_ancillary_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            ancillary_data[100];
      struct
      {
         char                            tckt_doc_num[15];
         char                            srvc_cat1[4];
         char                            srvc_sub_cat1[4];
         char                            srvc_cat2[4];
         char                            srvc_sub_cat2[4];
         char                            srvc_cat3[4];
         char                            srvc_sub_cat3[4];
         char                            srvc_cat4[4];
         char                            srvc_sub_cat4[4];
         char                            passenger_nam[20];
         char                            in_cnct_with_tckt_num[15];
         char                            cr_rsn_ind;
         char                            user_fld_aci[17];
      } visa_passenger_ancillary_data;
   } u_ancillary_data;
} trnsprt_ancillary_tkn_def;
#define trnsprt_ancillary_tkn_def_Size 102
#pragma section trnsprt_industry_tkn
/* Definition TRNSPRT-INDUSTRY-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __trnsprt_industry_tkn
typedef struct __trnsprt_industry_tkn
{
   char                            frmt_cde[2];
   union
   {
      char                            trnsprt_data[100];
      struct
      {
         char                            fare_basis_cde_leg1[6];
         char                            fare_basis_cde_leg2[6];
         char                            fare_basis_cde_leg3[6];
         char                            fare_basis_cde_leg4[6];
         char                            computer_rsrv_sys[4];
         char                            flight_num_leg1[5];
         char                            flight_num_leg2[5];
         char                            flight_num_leg3[5];
         char                            flight_num_leg4[5];
         char                            cr_rsn_ind;
         char                            tckt_chng_ind;
         char                            user_fld_aci[50];
      } visa_airline_data;
      struct
      {
         char                            passenger_nam[20];
         char                            depart_dat[6];
         char                            orig_city_airport[3];
         char                            carrier_cde_leg1[2];
         char                            class_leg1;
         char                            stop_over_leg1;
         char                            city_cde_leg1[3];
         char                            carrier_cde_leg2[2];
         char                            class_leg2;
         char                            stop_over_leg2;
         char                            city_cde_leg2[3];
         char                            carrier_cde_leg3[2];
         char                            class_leg3;
         char                            stop_over_leg3;
         char                            city_cde_leg3[3];
         char                            carrier_cde_leg4[2];
         char                            class_leg4;
         char                            stop_over_leg4;
         char                            city_cde_leg4[3];
         char                            travel_agency_cde_nam[33];
         char                            cr_rsn_ind;
         char                            tckt_chng_ind;
         char                            user_fld_aci[8];
      } vdps_airline_data;
      struct
      {
         char                            tckt_num[15];
         char                            passenger_nam[25];
         char                            trvl_dat[6];
         char                            city_orig[5];
         char                            city_dest[5];
         char                            user_fld_aci[44];
      } puli_airline_data;
   } u_trnsprt_data;
} trnsprt_industry_tkn_def;
#define trnsprt_industry_tkn_def_Size 102
#pragma section txn_spcf_data_tkn
/* Definition TXN-SPCF-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __txn_spcf_data_tkn
typedef struct __txn_spcf_data_tkn
{
   char                            dataset_id[2];
   union
   {
      char                            info[252];
      struct
      {
         char                            phn_svc_cde;
         char                            user_fld_dial_term[251];
      } dial_term;
      struct
      {
         char                            bus_appl_id[2];
         char                            src_of_fund;
         char                            related_txn_data_userfld[249];
      } related_txn_data;
      struct
      {
         char                            typ[2];
         char                            cde[25];
         char                            descr[25];
         char                            user_fld_prmtn[200];
      } prmtn;
      struct
      {
         char                            descr[99];
         char                            orig_cr_appl_data[50];
         char                            user_fld_free_form[103];
      } free_form_txt;
   } u_info;
} txn_spcf_data_tkn_def;
#define txn_spcf_data_tkn_def_Size 254
#pragma section dial_term_data
/* Definition DIAL-TERM-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __dial_term_data
typedef struct __dial_term_data
{
   char                            dataset_id[2];
   char                            phn_srvc_cde;
   char                            user_fld_aci;
} dial_term_data_def;
#define dial_term_data_def_Size 4
#pragma section related_txn_data
/* Definition RELATED-TXN-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __related_txn_data
typedef struct __related_txn_data
{
   char                            dataset_id[2];
   char                            bus_appl_id[2];
   char                            src_of_fund;
   char                            user_fld_aci;
} related_txn_data_def;
#define related_txn_data_def_Size 6
#pragma section prmtn_data
/* Definition PRMTN-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __prmtn_data
typedef struct __prmtn_data
{
   char                            dataset_id[2];
   char                            typ[2];
   char                            cde[25];
   char                            descr[25];
} prmtn_data_def;
#define prmtn_data_def_Size 54
#pragma section instl_pmnt_data
/* Definition INSTL-PMNT-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __instl_pmnt_data
typedef struct __instl_pmnt_data
{
   char                            dataset_id[2];
   char                            ttl_amt[12];
   char                            crncy_cde[3];
   char                            num_instl[3];
   char                            amt_each_instl[12];
   char                            instl_pmnt_num[3];
   char                            freq_instl;
} instl_pmnt_data_def;
#define instl_pmnt_data_def_Size 36
#pragma section csm_pos_tkn
/* Definition CSM-POS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pos_tkn
typedef struct __csm_pos_tkn
{
   short                           algo_impacto_saldo;
   short                           algo_check_saldo;
   short                           cant_cuotas;
   char                            user_fld0;
   char                            cap_flag;
   char                            tipo_financiacion[2];
   char                            ind_conting;
   char                            impacta_saldo;
   char                            situacion_iva_comer[2];
   char                            rubro[5];
   char                            fiid_acq[4];
   char                            cntry_iso[3];
   char                            orig_apprv_cde[6];
   char                            pre_auth_chk_cvc2;
   char                            flag_cuenta_emisor;
   char                            grupo_term[2];
   char                            entry_mde_bnet[2];
} csm_pos_tkn_def;
#define csm_pos_tkn_def_Size 38
#pragma section csm_pos_tknx
/* Definition CSM-POS-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pos_tknx
typedef struct __csm_pos_tknx
{
   char                            algo_impacto_saldo[2];
   char                            algo_check_saldo[2];
   char                            cant_cuotas[2];
   char                            user_fld0;
   char                            cap_flag;
   char                            tipo_financiacion[2];
   char                            ind_conting;
   char                            impacta_saldo;
   char                            situacion_iva_comer[2];
   char                            rubro[5];
   char                            fiid_acq[4];
   char                            cntry_iso[3];
   char                            orig_apprv_cde[6];
   char                            pre_auth_chk_cvc2;
   char                            flag_cuenta_emisor;
   char                            grupo_term[2];
   char                            entry_mde_bnet[2];
} csm_pos_tknx_def;
#define csm_pos_tknx_def_Size 38
#pragma section csm_pos_ichg_tkn
/* Definition CSM-POS-ICHG-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pos_ichg_tkn
typedef struct __csm_pos_ichg_tkn
{
   short                           cant_cuotas;
   char                            ent_emisora[4];
   char                            plan;
   char                            situacion_iva;
   char                            foto_flag;
   char                            nro_factura[12];
   char                            tipo_id;
   char                            nro_id[11];
   char                            tcc;
   char                            tipo_financiacion[2];
   char                            track1_fld;
   char                            service_cde[3];
   char                            b24_orig_proc[2];
   char                            cf_flag_emi;
   char                            cf_flag_seg;
   char                            flag_rechazo_cavv;
   char                            user_fld;
} csm_pos_ichg_tkn_def;
#define csm_pos_ichg_tkn_def_Size 46
#pragma section csm_pos_ichg_tknx
/* Definition CSM-POS-ICHG-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pos_ichg_tknx
typedef struct __csm_pos_ichg_tknx
{
   char                            cant_cuotas[2];
   char                            ent_emisora[4];
   char                            plan;
   char                            situacion_iva;
   char                            foto_flag;
   char                            nro_factura[12];
   char                            tipo_id;
   char                            nro_id[11];
   char                            tcc;
   char                            tipo_financiacion[2];
   char                            track1_fld;
   char                            service_cde[3];
   char                            b24_orig_proc[2];
   char                            cf_flag_emi;
   char                            cf_flag_seg;
   char                            flag_rechazo_cavv;
   char                            user_fld;
} csm_pos_ichg_tknx_def;
#define csm_pos_ichg_tknx_def_Size 46
#pragma section csm_debito_aut_tkn
/* Definition CSM-DEBITO-AUT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_debito_aut_tkn
typedef struct __csm_debito_aut_tkn
{
   char                            nro_referencia[12];
   char                            periodo_facturacion[5];
   char                            status_da[2];
   char                            flag_ent;
} csm_debito_aut_tkn_def;
#define csm_debito_aut_tkn_def_Size 20
#pragma section csm_prnt_tkn
/* Definition CSM-PRNT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_prnt_tkn
typedef struct __csm_prnt_tkn
{
   char                            len[3];
   char                            datos[199];
} csm_prnt_tkn_def;
#define csm_prnt_tkn_def_Size 202
#pragma section csm_puntaje_tkn
/* Definition CSM-PUNTAJE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_puntaje_tkn
typedef struct __csm_puntaje_tkn
{
   char                            rubro_comercio[6];
   char                            codigo_producto[12];
   char                            nro_factura[12];
   char                            puntos[10];
} csm_puntaje_tkn_def;
#define csm_puntaje_tkn_def_Size 40
#pragma section csm_veraz_tkn
/* Definition CSM-VERAZ-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_veraz_tkn
typedef struct __csm_veraz_tkn
{
   char                            tipo_id;
   char                            nro_id[11];
   char                            sexo;
   char                            nombre[25];
   char                            monto[4];
   struct
   {
      char                            nro[2];
   } observacion[8];
} csm_veraz_tkn_def;
#define csm_veraz_tkn_def_Size 58
#pragma section csm_diferimiento_tkn
/* Definition CSM-DIFERIMIENTO-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_diferimiento_tkn
typedef struct __csm_diferimiento_tkn
{
   char                            tipo_dif;
   char                            dia_dif[2];
   char                            dia_inicio_dif[2];
   char                            dia_presentacion[6];
   char                            forma_dif;
} csm_diferimiento_tkn_def;
#define csm_diferimiento_tkn_def_Size 12
#pragma section csm_pulsos_tkn
/* Definition CSM-PULSOS-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_pulsos_tkn
typedef struct __csm_pulsos_tkn
{
   char                            producto[2];
   char                            sub_producto[2];
   char                            pin[25];
   char                            cod_asignacion[5];
   char                            secuencia[15];
   char                            fecha_vigencia[8];
   char                            monto[8];
   char                            filler_0[7];
} csm_pulsos_tkn_def;
#define csm_pulsos_tkn_def_Size 72
#pragma section csm_v2dh_com_tkn
/* Definition CSM-V2DH-COM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_v2dh_com_tkn
typedef struct __csm_v2dh_com_tkn
{
   struct
   {
      char                            fiid[4];
      char                            nro_comercio[13];
   } comercio[6];
} csm_v2dh_com_tkn_def;
#define csm_v2dh_com_tkn_def_Size 102
#pragma section csm_monitoreo_tkn
/* Definition CSM-MONITOREO-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_monitoreo_tkn
typedef struct __csm_monitoreo_tkn
{
   char                            rechazo_emisor[3];
   char                            autoriz_internac[6];
   char                            service_cde[3];
   char                            authn_coll_ind;
   char                            user_fld[47];
} csm_monitoreo_tkn_def;
#define csm_monitoreo_tkn_def_Size 60
#pragma section csm_flota_tkn
/* Definition CSM-FLOTA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_flota_tkn
typedef struct __csm_flota_tkn
{
   char                            tipo_combustible;
   char                            patente[6];
   char                            cant_litros[6];
   char                            kilometros[8];
   char                            user_fld[19];
} csm_flota_tkn_def;
#define csm_flota_tkn_def_Size 40
#pragma section csm_carga_tkn
/* Definition CSM-CARGA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_carga_tkn
typedef struct __csm_carga_tkn
{
   char                            nro_operacion[30];
   char                            nro_telefono[11];
   char                            tran_cde[2];
   char                            nro_tarjeta[19];
   char                            operador[2];
   char                            fiid_operador[4];
   char                            saldo_comercio[12];
   char                            saldo_linea[12];
   char                            status_tran[2];
   char                            std_consulta[2];
   char                            csm_cant_operaciones[8];
   char                            csm_periodo[6];
   char                            csm_total_ventas[12];
   char                            csm_comisiones[12];
   char                            csm_retailer_id_sub[12];
   char                            csm_tipo_comercio;
   char                            csm_integrador[2];
   char                            ip_comercio[12];
   char                            id_oper_comer[20];
   char                            uso_futuro[11];
} csm_carga_tkn_def;
#define csm_carga_tkn_def_Size 192
#pragma section csm_descuento_tkn
/* Definition CSM-DESCUENTO-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_descuento_tkn
typedef struct __csm_descuento_tkn
{
   char                            categoria_socio[2];
   char                            producto;
   char                            importe_descuento[15];
   char                            descuento[5];
   char                            prg_fidelizacion[8];
   char                            uso_futuro[9];
} csm_descuento_tkn_def;
#define csm_descuento_tkn_def_Size 40
#pragma section csm_carga_cel_tkn
/* Definition CSM-CARGA-CEL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_carga_cel_tkn
typedef struct __csm_carga_cel_tkn
{
   char                            t001_modo_pago[2];
   char                            t010_fiid_mov[4];
   char                            t011_tipo_carga[2];
   char                            t002_tarjeta[19];
   char                            t003_traceno[12];
   char                            t004_cupon[4];
   char                            t005_approval_code[6];
   char                            t006_comercio[15];
   char                            t012_cuenta_cbu[25];
   char                            t007_imp_comision[12];
   char                            t008_imp_cargado[12];
   char                            t009_saldo_telefono[12];
   char                            filler_0[5];
} csm_carga_cel_tkn_def;
#define csm_carga_cel_tkn_def_Size 130
#pragma section csm_tax_free_tkn
/* Definition CSM-TAX-FREE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_tax_free_tkn
typedef struct __csm_tax_free_tkn
{
   char                            merch_vat_num[16];
   char                            merch_cntry_cde[3];
   char                            merch_store_id[15];
   char                            trans_type;
   char                            invoice_number[16];
   char                            vat_rate[5];
   char                            gross_amt[9];
   char                            masked_pan[19];
   char                            voucher_number[30];
   char                            bar_code[30];
   char                            bar_code_type[2];
   char                            price_inc_vat[9];
   char                            price_exc_vat[9];
   char                            vat_amount[9];
   char                            fee[9];
   char                            refund_amt[9];
   char                            client_name[25];
   char                            client_ctry_cde[3];
   char                            client_passport[15];
   char                            billing_type[2];
   char                            user_fld[2];
} csm_tax_free_tkn_def;
#define csm_tax_free_tkn_def_Size 238
#pragma section csm_carga2_tkn
/* Definition CSM-CARGA2-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_carga2_tkn
typedef struct __csm_carga2_tkn
{
   char                            fiid_operador[4];
   char                            usuario[20];
   char                            sales_person_pin[20];
   char                            vending_device_external[20];
   char                            uso_futuro[20];
} csm_carga2_tkn_def;
#define csm_carga2_tkn_def_Size 84
#pragma section csm_agro_cabal_tkn
/* Definition CSM-AGRO-CABAL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_agro_cabal_tkn
typedef struct __csm_agro_cabal_tkn
{
   char                            num_factura[12];
   char                            dato_sub_campo[28];
   char                            cant_cuotas[2];
   struct
   {
      char                            fecha_cuota[6];
      char                            monto_cuota[8];
   } detalle_cuotas[4];
} csm_agro_cabal_tkn_def;
#define csm_agro_cabal_tkn_def_Size 98
#pragma section csm_devl_iva_tkn
/* Definition CSM-DEVL-IVA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_devl_iva_tkn
typedef struct __csm_devl_iva_tkn
{
   char                            monto_trx[12];
   char                            monto_gravado[12];
   char                            monto_devl[12];
   char                            aplica_devolucion;
   char                            periodo;
   char                            ley[6];
   char                            cotizacion_ui[12];
   char                            cotizacion_dolar[12];
   char                            puntos_iva;
   char                            iva_devuelto[4];
   char                            importe_factura[12];
   char                            tipo_tarjeta;
   char                            desc_emv;
   char                            indi;
   char                            aplica_online;
   char                            orig_tarjeta;
   char                            usr_fld[2];
} csm_devl_iva_tkn_def;
#define csm_devl_iva_tkn_def_Size 92
#pragma section csm_tdes_tkn
/* Definition CSM-TDES-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_tdes_tkn
typedef struct __csm_tdes_tkn
{
   char                            prefijo[2];
   char                            hash_cuit[5];
   char                            id[9];
   char                            uso_futuro[10];
} csm_tdes_tkn_def;
#define csm_tdes_tkn_def_Size 26
#pragma section adj_pay_tkn
/* Definition ADJ-PAY-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __adj_pay_tkn
typedef struct __adj_pay_tkn
{
   char                            adj_typ;
   char                            usr_fld[19];
} adj_pay_tkn_def;
#define adj_pay_tkn_def_Size 20
#pragma section csm_soft_desc_split_tkn
/* Definition CSM-SOFT-DESC-SPLIT-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_soft_desc_split_tkn
typedef struct __csm_soft_desc_split_tkn
{
   char                            soft_descriptor[22];
   char                            filler_0[10];
} csm_soft_desc_split_tkn_def;
#define csm_soft_desc_split_tkn_def_Size 32
#pragma section dgtl_wallet_tkn
/* Definition DGTL-WALLET-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __dgtl_wallet_tkn
typedef struct __dgtl_wallet_tkn
{
   char                            wallet_ind_flg[2];
   union
   {
      char                            dgtl_wallet_data[12];
      struct
      {
         char                            id[3];
         char                            user_fld_aci[9];
      } wallet;
      struct
      {
         char                            dgtl_commerce_ind[2];
         char                            user_fld_aci[10];
      } visa_secure_remt_commerce;
      struct
      {
         char                            id[5];
         char                            user_fld_aci[7];
      } visa_dgtl_entity;
      struct
      {
         char                            id[5];
         char                            adnl_auth_mthd[2];
         char                            adnl_auth_rsn_cde[2];
         char                            user_fld_aci[3];
      } vme;
   } u_dgtl_wallet_data;
} dgtl_wallet_tkn_def;
#define dgtl_wallet_tkn_def_Size 14
#pragma section mc_mbr_def_data
/* Definition MC-MBR-DEF-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mc_mbr_def_data
typedef struct __mc_mbr_def_data
{
   char                            dataset_id[2];
   char                            mbr_def_data[98];
   char                            auth_agent_id_cde[6];
   char                            mc_asgn_id[6];
   char                            adnl_proc_info[3];
   char                            authn_ind;
   struct
   {
      char                            svc[2];
      char                            ind;
   } on_behalf_svc;
   char                            user_fld_aci;
} mc_mbr_def_data_def;
#define mc_mbr_def_data_def_Size 120
#pragma section mult_pmnt_forms_data
/* Definition MULT-PMNT-FORMS-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __mult_pmnt_forms_data
typedef struct __mult_pmnt_forms_data
{
   char                            dataset_id[2];
   char                            num_of_pmnt_forms;
   char                            user_fld_aci;
} mult_pmnt_forms_data_def;
#define mult_pmnt_forms_data_def_Size 4
#pragma section trvl_tag_data
/* Definition TRVL-TAG-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __trvl_tag_data
typedef struct __trvl_tag_data
{
   char                            dataset_id[2];
   char                            trvl_tag_cde;
   char                            user_fld_aci;
} trvl_tag_data_def;
#define trvl_tag_data_def_Size 4
#pragma section loan_detl_data
/* Definition LOAN-DETL-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __loan_detl_data
typedef struct __loan_detl_data
{
   char                            dataset_id[2];
   char                            crdhldr_tax_id_typ[4];
   char                            crdhldr_tax_id[15];
   char                            asset_ind;
   char                            loan_typ[20];
   char                            mrch_pgm_id[6];
} loan_detl_data_def;
#define loan_detl_data_def_Size 48
#pragma section money_xfer_data
/* Definition MONEY-XFER-DATA created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __money_xfer_data
typedef struct __money_xfer_data
{
   char                            dataset_id[2];
   char                            send_ref_num[16];
   char                            send_acct_num[34];
   char                            send_nam[30];
   char                            send_addr[35];
   char                            send_city[25];
   char                            send_st[2];
   char                            send_cntry[3];
   char                            fund_src[2];
   char                            recipient_nam[30];
   char                            claim_cde[20];
   char                            user_fld_aci;
} money_xfer_data_def;
#define money_xfer_data_def_Size 200
#pragma section csm_consulta_cd_tkn
/* Definition CSM-CONSULTA-CD-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_consulta_cd_tkn
typedef struct __csm_consulta_cd_tkn
{
   char                            producto[3];
   char                            cant_cuotas_1[2];
   char                            valor_cuota_1[10];
   char                            tasa_cuota_1[5];
   char                            cant_cuotas_2[2];
   char                            valor_cuota_2[10];
   char                            tasa_cuota_2[5];
   char                            cant_cuotas_3[2];
   char                            valor_cuota_3[10];
   char                            tasa_cuota_3[5];
   char                            cant_cuotas_4[2];
   char                            valor_cuota_4[10];
   char                            tasa_cuota_4[5];
   char                            cant_cuotas_5[2];
   char                            valor_cuota_5[10];
   char                            tasa_cuota_5[5];
   char                            banco[31];
   char                            usr_fld[31];
} csm_consulta_cd_tkn_def;
#define csm_consulta_cd_tkn_def_Size 150
#pragma section csm_consulta_cd_tknx
/* Definition CSM-CONSULTA-CD-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_consulta_cd_tknx
typedef struct __csm_consulta_cd_tknx
{
   char                            producto[3];
   char                            cant_cuotas_1[2];
   char                            valor_cuota_1[10];
   char                            tasa_cuota_1[5];
   char                            cant_cuotas_2[2];
   char                            valor_cuota_2[10];
   char                            tasa_cuota_2[5];
   char                            cant_cuotas_3[2];
   char                            valor_cuota_3[10];
   char                            tasa_cuota_3[5];
   char                            cant_cuotas_4[2];
   char                            valor_cuota_4[10];
   char                            tasa_cuota_4[5];
   char                            cant_cuotas_5[2];
   char                            valor_cuota_5[10];
   char                            tasa_cuota_5[5];
   char                            banco[31];
   char                            usr_fld[31];
} csm_consulta_cd_tknx_def;
#define csm_consulta_cd_tknx_def_Size 150
#pragma section csm_compra_cd_tkn
/* Definition CSM-COMPRA-CD-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_compra_cd_tkn
typedef struct __csm_compra_cd_tkn
{
   char                            producto[3];
   char                            valor_cuota[10];
   char                            tasa_1[5];
   char                            tasa_2[5];
   char                            banco[30];
   char                            intereses[12];
   char                            usr_fld[35];
} csm_compra_cd_tkn_def;
#define csm_compra_cd_tkn_def_Size 100
#pragma section csm_compra_cd_tknx
/* Definition CSM-COMPRA-CD-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_compra_cd_tknx
typedef struct __csm_compra_cd_tknx
{
   char                            producto[3];
   char                            valor_cuota[10];
   char                            tasa_1[5];
   char                            tasa_2[5];
   char                            banco[30];
   char                            intereses[12];
   char                            usr_fld[35];
} csm_compra_cd_tknx_def;
#define csm_compra_cd_tknx_def_Size 100
#pragma section csm_visa_agro_req_tkn
/* Definition CSM-VISA-AGRO-REQ-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_visa_agro_req_tkn
typedef struct __csm_visa_agro_req_tkn
{
   char                            producto[3];
   char                            formato_fecha;
   char                            nro_estab[16];
   char                            nro_factura[12];
   short                           cuotas;
   char                            dias[4];
   struct
   {
      char                            fecha_cuota[6];
      char                            monto_cuota[12];
   } detalle_cuotas[18];
   char                            usr_fld[50];
} csm_visa_agro_req_tkn_def;
#define csm_visa_agro_req_tkn_def_Size 412
#pragma section csm_visa_agro_req_tknx
/* Definition CSM-VISA-AGRO-REQ-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_visa_agro_req_tknx
typedef struct __csm_visa_agro_req_tknx
{
   char                            producto[3];
   char                            formato_fecha;
   char                            nro_estab[16];
   char                            nro_factura[12];
   char                            cuotas[2];
   char                            dias[4];
   struct
   {
      char                            fecha_cuota[6];
      char                            monto_cuota[12];
   } detalle_cuotas[18];
   char                            usr_fld[50];
} csm_visa_agro_req_tknx_def;
#define csm_visa_agro_req_tknx_def_Size 412
#pragma section csm_visa_agro_res_tkn
/* Definition CSM-VISA-AGRO-RES-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_visa_agro_res_tkn
typedef struct __csm_visa_agro_res_tkn
{
   char                            producto[3];
   char                            cant_subcampos[4];
   char                            long_subcampo[3];
   char                            id_subcampo[3];
   char                            datos_subcampo[28];
   char                            usr_fld[19];
} csm_visa_agro_res_tkn_def;
#define csm_visa_agro_res_tkn_def_Size 60
#pragma section csm_visa_agro_res_tknx
/* Definition CSM-VISA-AGRO-RES-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_visa_agro_res_tknx
typedef struct __csm_visa_agro_res_tknx
{
   char                            producto[3];
   char                            cant_subcampos[4];
   char                            long_subcampo[3];
   char                            id_subcampo[3];
   char                            datos_subcampo[28];
   char                            usr_fld[19];
} csm_visa_agro_res_tknx_def;
#define csm_visa_agro_res_tknx_def_Size 60
#pragma section csm_qr_tkn
/* Definition CSM-QR-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_qr_tkn
typedef struct __csm_qr_tkn
{
   char                            tipo_tran;
   char                            cvu_com[22];
   char                            cbu_usr[22];
   char                            tran_id[26];
   char                            estado[3];
   char                            wallet_id[10];
   char                            user_fld[6];
} csm_qr_tkn_def;
#define csm_qr_tkn_def_Size 90
#pragma section csm_cna_tkn
/* Definition CSM-CNA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_cna_tkn
typedef struct __csm_cna_tkn
{
   char                            codgo_campana;
   char                            desc_amt[12];
   char                            resp_cde[2];
   char                            usr_fld[45];
} csm_cna_tkn_def;
#define csm_cna_tkn_def_Size 60
#pragma section csm_info_tkn
/* Definition CSM-INFO-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_info_tkn
typedef struct __csm_info_tkn
{
   char                            netmyname[16];
   char                            stationid[16];
   char                            usr_fld[32];
} csm_info_tkn_def;
#define csm_info_tkn_def_Size 64
#pragma section csm_mdes_rqst_tkn
/* Definition CSM-MDES-RQST-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_mdes_rqst_tkn
typedef struct __csm_mdes_rqst_tkn
{
   char                            messagetype[2];
   char                            correlationid[14];
   union
   {
      char                            mdes_data[300];
      struct
      {
         char                            primaryaccountnumsource;
         char                            paymentappinstid[48];
         char                            numberactivetkn[2];
         char                            walletproviderid[64];
         char                            cardholdername[27];
         char                            tokentype;
         char                            filler_0[157];
      } info_ter;
      struct
      {
         char                            primaryaccountnumsource;
         char                            paymentappinstid[48];
         char                            devicesourceipaddress[12];
         char                            walletprovideracctidhash[64];
         char                            cardholdername[27];
         char                            wallettokenrecom;
         char                            wallettokenrecomonstaver[2];
         char                            walletproviderdevicescore;
         char                            walletprovideraccountscore;
         char                            numberactivetokens[2];
         char                            walltsrvprovtknreconreascds[6];
         char                            devicelocation[9];
         char                            mobilenumberlastdigits[4];
         char                            tokentype;
         char                            consumeridentifier[88];
         char                            filler_1[33];
      } info_tar;
      struct
      {
         char                            activationcode[8];
         char                            activcodeexpdatetime[10];
         char                            consactivationmetpref[165];
         char                            filler_2[117];
      } info_acn;
      struct
      {
         char                            numbactitknprimaccntnumb[2];
         char                            issproductconfigid[10];
         char                            consumerlanguage[2];
         char                            devicename[20];
         char                            finaltkndecision;
         char                            finaltkndecisionindi;
         char                            tcidentifier[32];
         char                            tcdatetime[10];
         char                            numberactivationattempts;
         char                            tokenuniquereference[48];
         char                            primaryaccnumbuniqueref[48];
         char                            tokentype;
         char                            filler_3[124];
      } info_tcn;
      struct
      {
         char                            tkneventindi;
         char                            tkneventreasoncde[2];
         char                            eventrequestor;
         char                            filler_4[296];
      } info_tvn;
   } u_mdes_data;
} csm_mdes_rqst_tkn_def;
#define csm_mdes_rqst_tkn_def_Size 316
#pragma section csm_mdes_resp_tkn
/* Definition CSM-MDES-RESP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_mdes_resp_tkn
typedef struct __csm_mdes_resp_tkn
{
   char                            messagetype[2];
   union
   {
      char                            resp_data[300];
      struct
      {
         char                            issuerproductconfigid[10];
         char                            primaryaccnumcardseqnum[3];
         char                            tokendataactivationmet[186];
         char                            pathindicator;
         char                            filler_0[100];
      } ter_data;
      struct
      {
         char                            issuerproductconfigid[10];
         char                            primaryaccnumcardseqnum[3];
         char                            tokendataactivationmet[286];
         char                            pathindicator;
      } tar_data;
   } u_resp_data;
} csm_mdes_resp_tkn_def;
#define csm_mdes_resp_tkn_def_Size 302
#pragma section csm_shell_tkn
/* Definition CSM-SHELL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_shell_tkn
typedef struct __csm_shell_tkn
{
   char                            codprom[2];
   char                            millasred[20];
   char                            beneficio[20];
   char                            usr_fld[8];
} csm_shell_tkn_def;
#define csm_shell_tkn_def_Size 50
#pragma section csm_ctas_esp_tkn
/* Definition CSM-CTAS-ESP-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_ctas_esp_tkn
typedef struct __csm_ctas_esp_tkn
{
   char                            ctaesp[3];
   char                            usr_fld[17];
} csm_ctas_esp_tkn_def;
#define csm_ctas_esp_tkn_def_Size 20
#pragma section csm_devl2_tkn
/* Definition CSM-DEVL2-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_devl2_tkn
typedef struct __csm_devl2_tkn
{
   char                            ley[6];
   char                            rut[12];
   char                            nro_factura[12];
   char                            user_fld[10];
} csm_devl2_tkn_def;
#define csm_devl2_tkn_def_Size 40
#pragma section amex_prvt_use_data_tkn
/* Definition AMEX-PRVT-USE-DATA-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __amex_prvt_use_data_tkn
typedef struct __amex_prvt_use_data_tkn
{
   char                            lgth[3];
   union
   {
      char                            info[201];
      struct
      {
         char                            first_nam[15];
         char                            lst_nam[30];
         char                            phn_num[10];
         char                            ship_to_zip_cde[9];
         char                            ship_to_addr[50];
         char                            ship_to_first_nam[15];
         char                            ship_to_lst_nam[30];
         char                            ship_to_phn_num[10];
         char                            ship_to_cntry_cde[3];
         char                            user_fld1[29];
      } avs;
   } u_info;
} amex_prvt_use_data_tkn_def;
#define amex_prvt_use_data_tkn_def_Size 204
#pragma section csm_ext_resp_cde_tkn
/* Definition CSM-EXT-RESP-CDE-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_ext_resp_cde_tkn
typedef struct __csm_ext_resp_cde_tkn
{
   char                            ext_rc_cde[2];
   char                            ext_rc_descr[20];
   char                            mc_mac[2];
   char                            visa_rc_cat;
   char                            req_ext_rc_cde;
   char                            user_fld[4];
} csm_ext_resp_cde_tkn_def;
#define csm_ext_resp_cde_tkn_def_Size 30
#pragma section pos_data3_tkn
/* Definition POS-DATA3-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_data3_tkn
typedef struct __pos_data3_tkn
{
   char                            resp_cde_cat;
   char                            crd_stat;
   char                            rstrct_rsn_cde;
   char                            acct_stat;
   char                            user_fld_aci[26];
} pos_data3_tkn_def;
#define pos_data3_tkn_def_Size 30
#pragma section csm_orig_tid_tkn
/* Definition CSM-ORIG-TID-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csm_orig_tid_tkn
typedef struct __csm_orig_tid_tkn
{
   char                            orig_tid[15];
   char                            user_fld[25];
} csm_orig_tid_tkn_def;
#define csm_orig_tid_tkn_def_Size 40
#pragma section cse_ebt_avail_bal_tkn
/* Definition CSE-EBT-AVAIL-BAL-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cse_ebt_avail_bal_tkn
typedef struct __cse_ebt_avail_bal_tkn
{
   char                            cash_acct_bal_ind;
   char                            user_fld1a;
   long long                       cash_acct_bal;
   char                            food_stmp_bal_ind;
   char                            user_fld1b;
   long long                       food_stmp_bal;
   char                            user_fld1[20];
} cse_ebt_avail_bal_tkn_def;
#define cse_ebt_avail_bal_tkn_def_Size 40
#pragma section cse_ebt_avail_bal_tknx
/* Definition CSE-EBT-AVAIL-BAL-TKNX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cse_ebt_avail_bal_tknx
typedef struct __cse_ebt_avail_bal_tknx
{
   char                            cash_acct_bal_ind;
   char                            cash_acct_bal[18];
   char                            food_stmp_bal_ind;
   char                            food_stmp_bal[18];
   char                            user_fld1[20];
} cse_ebt_avail_bal_tknx_def;
#define cse_ebt_avail_bal_tknx_def_Size 58
#pragma section cse_ebt_voucher_num_tkn
/* Definition CSE-EBT-VOUCHER-NUM-TKN created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __cse_ebt_voucher_num_tkn
typedef struct __cse_ebt_voucher_num_tkn
{
   char                            voucher_num[24];
   char                            user_fld1[24];
} cse_ebt_voucher_num_tkn_def;
#define cse_ebt_voucher_num_tkn_def_Size 48
#pragma section atm
/* Definition ATM created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __atm
typedef struct __atm
{
   char                            typ[4];
   char                            tran_cde[2];
   char                            from_acct_typ[2];
   char                            to_acct_typ[2];
   struct
   {
      char                            orig_pro_name[16];
      char                            originator;
      char                            responder;
   } rte;
   char                            crd_ln[4];
   char                            crd_fiid[4];
   char                            rcv_inst_id_num[11];
   char                            crd_iss_id_num[11];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   short                           tim_ofst;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } acq_ichg_setl_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } iss_ichg_setl_dat;
   char                            term_fiid[4];
   char                            term_id[16];
   char                            term_ln[4];
   char                            seq_num[12];
   struct
   {
      char                            track2[40];
      char                            mbr_num[3];
      char                            orig_crncy_cde[3];
      union
      {
         struct
         {
            char                            auth_crncy_cde[3];
            char                            setl_crncy_cde[3];
            char                            auth_conv_rate[8];
            char                            setl_conv_rate[8];
            long long                       conv_dat_tim;
         } mult_crncy;
         char                            user_fld1[30];
      } u_mult_crncy;
      char                            acq_inst_id_num[11];
      char                            user_fld2;
      char                            rvsl_cde[2];
      struct
      {
         char                            acct_num[19];
      } from_acct;
      char                            user_fld3;
      struct
      {
         char                            acct_num[19];
      } to_acct;
      char                            user_fld4;
      long long                       amt_1;
      long long                       amt_2;
      __int32_t                       dep_bal_cr;
      char                            compl_req;
      char                            resp[3];
      char                            term_name_loc[25];
      char                            term_owner_name[22];
      char                            term_city[13];
      char                            term_st_x[3];
      char                            term_cntry_x[2];
      char                            auth_id_resp[6];
      char                            auth_dest[16];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } orig_dat;
      struct
      {
         char                            hh[2];
         char                            mm[2];
         char                            ss[2];
         char                            tt[2];
      } orig_tim;
      char                            user_fld4a;
      long long                       amt_3;
      char                            rte_grp[11];
      char                            pin_ofst[16];
   } rqst;
   char                            user_fld5[243];
} atm_def;
#define atm_def_Size 662
#pragma section pos
/* Definition POS created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos
typedef struct __pos
{
   union
   {
      char                            typ[4];
      char                            msg_typ[4];
   } u_typ;
   char                            orig_pro_name[16];
   char                            ast_rtn_pro_name[16];
   char                            originator;
   char                            responder;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            term_ln[4];
   char                            term_fiid[4];
   char                            term_id[16];
   char                            term_name_loc[25];
   char                            term_owner_name[22];
   char                            term_city[13];
   char                            term_st_x[3];
   char                            term_cntry_x[2];
   char                            orig_crncy_cde[3];
   short                           tim_ofst;
   char                            seq_num[12];
   char                            invoice_num[10];
   char                            orig_invoice_num[10];
   char                            retl_id[19];
   char                            acq_inst_id_num[11];
   char                            rcv_inst_id_num[11];
   char                            auth_ind2;
   struct
   {
      char                            compl_req;
      struct
      {
         char                            cc[2];
         char                            t;
         char                            aa[2];
         char                            c;
      } tran_cde;
      char                            dest[4];
      char                            crd_ln[4];
      char                            crd_fiid[4];
      char                            user_fld2;
      struct
      {
         char                            acct_num[19];
      } from_acct;
      char                            resp[3];
      char                            track2[40];
      char                            mbr_num[3];
      char                            exp_dat[4];
      char                            user_fld3;
      long long                       amt_1;
      long long                       amt_2;
      union
      {
         struct
         {
            char                            auth_crncy_cde[3];
            char                            setl_crncy_cde[3];
            char                            auth_conv_rate[8];
            char                            setl_conv_rate[8];
            long long                       conv_dat_tim;
         } mult_crncy;
         char                            user_fld0[30];
      } u_mult_crncy;
      char                            apprv_cde[10];
      char                            dft_capture_flg;
      char                            setl_flg;
   } tran;
   struct
   {
      char                            srv[2];
      char                            iss[2];
      char                            pri[16];
      char                            alt1[16];
      char                            alt2[16];
      char                            authr;
      char                            dflt;
   } rte;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } acq_ichg_setl_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } iss_ichg_setl_dat;
   char                            rvsl_cde[2];
   char                            pt_srv_cond_cde[2];
   char                            pt_srv_entry_mde[3];
   char                            crd_iss_id_num[11];
   char                            msg_orig_ind;
   char                            addr_vrfy_stat;
   struct
   {
      short                           lgth;
      char                            info[200];
   } product;
} pos_def;
#define pos_def_Size 662
#pragma section ilf
/* Record ILF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __ilf
typedef struct __ilf
{
   struct
   {
      char                            byte[55];
   } prikey;
   char                            user_fldb;
   short                           substate;
   short                           rec_typ;
   char                            orig_net_pro[16];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_dat_add;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } cur_tim_add;
   long long                       last_update;
   struct
   {
      char                            tran_typ[4];
      char                            resp_cde[8];
      char                            rvsl_cde[4];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } swi_dat;
      struct
      {
         char                            hh[2];
         char                            mm[2];
         char                            ss[2];
         char                            tt[2];
      } swi_tim;
      char                            trace_num[6];
      char                            user_fld[16];
   } sem;
   short                           intrn_msg_savearea_lgth;
   union
   {
      struct
      {
         char                            typ[4];
         char                            tran_cde[2];
         char                            from_acct_typ[2];
         char                            to_acct_typ[2];
         struct
         {
            char                            orig_pro_name[16];
            char                            originator;
            char                            responder;
         } rte;
         char                            crd_ln[4];
         char                            crd_fiid[4];
         char                            rcv_inst_id_num[11];
         char                            crd_iss_id_num[11];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } tran_dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tran_tim;
         short                           tim_ofst;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } post_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } acq_ichg_setl_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } iss_ichg_setl_dat;
         char                            term_fiid[4];
         char                            term_id[16];
         char                            term_ln[4];
         char                            seq_num[12];
         struct
         {
            char                            track2[40];
            char                            mbr_num[3];
            char                            orig_crncy_cde[3];
            union
            {
               struct
               {
                  char                            auth_crncy_cde[3];
                  char                            setl_crncy_cde[3];
                  char                            auth_conv_rate[8];
                  char                            setl_conv_rate[8];
                  long long                       conv_dat_tim;
               } mult_crncy;
               char                            user_fld1[30];
            } u_mult_crncy;
            char                            acq_inst_id_num[11];
            char                            user_fld2;
            char                            rvsl_cde[2];
            struct
            {
               char                            acct_num[19];
            } from_acct;
            char                            user_fld3;
            struct
            {
               char                            acct_num[19];
            } to_acct;
            char                            user_fld4;
            long long                       amt_1;
            long long                       amt_2;
            __int32_t                       dep_bal_cr;
            char                            compl_req;
            char                            resp[3];
            char                            term_name_loc[25];
            char                            term_owner_name[22];
            char                            term_city[13];
            char                            term_st_x[3];
            char                            term_cntry_x[2];
            char                            auth_id_resp[6];
            char                            auth_dest[16];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } orig_dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } orig_tim;
            char                            user_fld4a;
            long long                       amt_3;
            char                            rte_grp[11];
            char                            pin_ofst[16];
         } rqst;
         char                            user_fld5[243];
      } atm;
      struct
      {
         union
         {
            char                            typ[4];
            char                            msg_typ[4];
         } u_typ;
         char                            orig_pro_name[16];
         char                            ast_rtn_pro_name[16];
         char                            originator;
         char                            responder;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } post_dat;
         char                            term_ln[4];
         char                            term_fiid[4];
         char                            term_id[16];
         char                            term_name_loc[25];
         char                            term_owner_name[22];
         char                            term_city[13];
         char                            term_st_x[3];
         char                            term_cntry_x[2];
         char                            orig_crncy_cde[3];
         short                           tim_ofst;
         char                            seq_num[12];
         char                            invoice_num[10];
         char                            orig_invoice_num[10];
         char                            retl_id[19];
         char                            acq_inst_id_num[11];
         char                            rcv_inst_id_num[11];
         char                            auth_ind2;
         struct
         {
            char                            compl_req;
            struct
            {
               char                            cc[2];
               char                            t;
               char                            aa[2];
               char                            c;
            } tran_cde;
            char                            dest[4];
            char                            crd_ln[4];
            char                            crd_fiid[4];
            char                            user_fld2;
            struct
            {
               char                            acct_num[19];
            } from_acct;
            char                            resp[3];
            char                            track2[40];
            char                            mbr_num[3];
            char                            exp_dat[4];
            char                            user_fld3;
            long long                       amt_1;
            long long                       amt_2;
            union
            {
               struct
               {
                  char                            auth_crncy_cde[3];
                  char                            setl_crncy_cde[3];
                  char                            auth_conv_rate[8];
                  char                            setl_conv_rate[8];
                  long long                       conv_dat_tim;
               } mult_crncy;
               char                            user_fld0[30];
            } u_mult_crncy;
            char                            apprv_cde[10];
            char                            dft_capture_flg;
            char                            setl_flg;
         } tran;
         struct
         {
            char                            srv[2];
            char                            iss[2];
            char                            pri[16];
            char                            alt1[16];
            char                            alt2[16];
            char                            authr;
            char                            dflt;
         } rte;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } tran_dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tran_tim;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } acq_ichg_setl_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } iss_ichg_setl_dat;
         char                            rvsl_cde[2];
         char                            pt_srv_cond_cde[2];
         char                            pt_srv_entry_mde[3];
         char                            crd_iss_id_num[11];
         char                            msg_orig_ind;
         char                            addr_vrfy_stat;
         struct
         {
            short                           lgth;
            char                            info[200];
         } product;
      } pos;
   } u_atm;
   char                            extrn_msg_lgth[4];
   struct
   {
      char                            savearea[3254];
   } extrn_msg;
} ilf_def;
#define ilf_def_Size 4072
#pragma section atm_d
/* Definition ATM-D created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __atm_d
typedef struct __atm_d
{
   char                            typ[4];
   char                            tran_cde[2];
   char                            from_acct_typ[2];
   char                            to_acct_typ[2];
   struct
   {
      char                            orig_pro_name[16];
      char                            originator;
      char                            responder;
   } rte;
   char                            crd_ln[4];
   char                            crd_fiid[4];
   char                            rcv_inst_id_num[11];
   char                            crd_iss_id_num[11];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   char                            tim_ofst[5];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } acq_ichg_setl_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } iss_ichg_setl_dat;
   char                            term_fiid[4];
   char                            term_id[16];
   char                            term_ln[4];
   char                            seq_num[12];
   struct
   {
      char                            track2[40];
      char                            mbr_num[3];
      char                            orig_crncy_cde[3];
      union
      {
         struct
         {
            char                            auth_crncy_cde[3];
            char                            setl_crncy_cde[3];
            char                            auth_conv_rate[8];
            char                            setl_conv_rate[8];
            char                            conv_dat_tim[19];
         } mult_crncy;
         char                            user_fld1[41];
      } u_mult_crncy;
      char                            acq_inst_id_num[11];
      char                            user_fld2;
      char                            rvsl_cde[2];
      char                            from_acct[28];
      char                            user_fld3;
      char                            to_acct[28];
      char                            user_fld4;
      char                            amt_1[19];
      char                            amt_2[19];
      char                            dep_bal_cr[10];
      char                            compl_req;
      char                            resp[3];
      char                            term_name_loc[25];
      char                            term_owner_name[22];
      char                            term_city[13];
      char                            term_st_x[3];
      char                            term_cntry_x[2];
      char                            auth_id_resp[6];
      char                            auth_dest[16];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } orig_dat;
      struct
      {
         char                            hh[2];
         char                            mm[2];
         char                            ss[2];
         char                            tt[2];
      } orig_tim;
      char                            user_fld4a;
      char                            amt_3[19];
      char                            rte_grp[11];
   } rqst;
   char                            user_fld5[236];
} atm_d_def;
#define atm_d_def_Size 710
#pragma section pos_d
/* Definition POS-D created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pos_d
typedef struct __pos_d
{
   union
   {
      char                            typ[4];
      char                            msg_typ[4];
   } u_typ;
   char                            orig_pro_name[16];
   char                            ast_rtn_pro_name[16];
   char                            originator;
   char                            responder;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } post_dat;
   char                            term_ln[4];
   char                            term_fiid[4];
   char                            term_id[16];
   char                            term_name_loc[25];
   char                            term_owner_name[22];
   char                            term_city[13];
   char                            term_st_x[3];
   char                            term_cntry_x[2];
   char                            orig_crncy_cde[3];
   char                            tim_ofst[5];
   char                            seq_num[12];
   char                            invoice_num[10];
   char                            orig_invoice_num[10];
   char                            retl_id[19];
   char                            acq_inst_id_num[11];
   char                            rcv_inst_id_num[11];
   char                            auth_ind2;
   struct
   {
      char                            compl_req;
      struct
      {
         char                            cc[2];
         char                            t;
         char                            aa[2];
         char                            c;
      } tran_cde;
      char                            dest[4];
      char                            crd_ln[4];
      char                            crd_fiid[4];
      char                            user_fld2;
      char                            from_acct[28];
      char                            resp[3];
      char                            track2[40];
      char                            mbr_num[3];
      char                            exp_dat[4];
      char                            user_fld3;
      char                            amt_1[19];
      char                            amt_2[19];
      union
      {
         struct
         {
            char                            auth_crncy_cde[3];
            char                            setl_crncy_cde[3];
            char                            auth_conv_rate[8];
            char                            setl_conv_rate[8];
            char                            conv_dat_tim[19];
         } mult_crncy;
         char                            user_fld0[41];
      } u_mult_crncy;
      char                            apprv_cde[10];
      char                            dft_capture_flg;
      char                            setl_flg;
   } tran;
   struct
   {
      char                            srv[2];
      char                            iss[2];
      char                            pri[16];
      char                            alt1[16];
      char                            alt2[16];
      char                            authr;
      char                            dflt;
   } rte;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } tran_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } tran_tim;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } acq_ichg_setl_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } iss_ichg_setl_dat;
   char                            rvsl_cde[2];
   char                            pt_srv_cond_cde[2];
   char                            pt_srv_entry_mde[3];
   char                            crd_iss_id_num[11];
   char                            msg_orig_ind;
   char                            addr_vrfy_stat;
   struct
   {
      char                            lgth[5];
      char                            info[200];
   } product;
} pos_d_def;
#define pos_d_def_Size 710
#pragma section ilfx
/* Definition ILFX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ilfx
typedef struct __ilfx
{
   struct
   {
      char                            byte[55];
   } prikey;
   char                            user_fldb;
   char                            substate[5];
   char                            rec_typ[5];
   char                            orig_net_pro[16];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cur_dat_add;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } cur_tim_add;
   char                            last_update[19];
   struct
   {
      char                            tran_typ[4];
      char                            resp_cde[8];
      char                            rvsl_cde[4];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } swi_dat;
      struct
      {
         char                            hh[2];
         char                            mm[2];
         char                            ss[2];
         char                            tt[2];
      } swi_tim;
      char                            trace_num[6];
      char                            user_fld[16];
   } sem;
   char                            intrn_msg_savearea_lgth[5];
   union
   {
      struct
      {
         char                            typ[4];
         char                            tran_cde[2];
         char                            from_acct_typ[2];
         char                            to_acct_typ[2];
         struct
         {
            char                            orig_pro_name[16];
            char                            originator;
            char                            responder;
         } rte;
         char                            crd_ln[4];
         char                            crd_fiid[4];
         char                            rcv_inst_id_num[11];
         char                            crd_iss_id_num[11];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } tran_dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tran_tim;
         char                            tim_ofst[5];
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } post_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } acq_ichg_setl_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } iss_ichg_setl_dat;
         char                            term_fiid[4];
         char                            term_id[16];
         char                            term_ln[4];
         char                            seq_num[12];
         struct
         {
            char                            track2[40];
            char                            mbr_num[3];
            char                            orig_crncy_cde[3];
            union
            {
               struct
               {
                  char                            auth_crncy_cde[3];
                  char                            setl_crncy_cde[3];
                  char                            auth_conv_rate[8];
                  char                            setl_conv_rate[8];
                  char                            conv_dat_tim[19];
               } mult_crncy;
               char                            user_fld1[41];
            } u_mult_crncy;
            char                            acq_inst_id_num[11];
            char                            user_fld2;
            char                            rvsl_cde[2];
            char                            from_acct[28];
            char                            user_fld3;
            char                            to_acct[28];
            char                            user_fld4;
            char                            amt_1[19];
            char                            amt_2[19];
            char                            dep_bal_cr[10];
            char                            compl_req;
            char                            resp[3];
            char                            term_name_loc[25];
            char                            term_owner_name[22];
            char                            term_city[13];
            char                            term_st_x[3];
            char                            term_cntry_x[2];
            char                            auth_id_resp[6];
            char                            auth_dest[16];
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } orig_dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } orig_tim;
            char                            user_fld4a;
            char                            amt_3[19];
            char                            rte_grp[11];
         } rqst;
         char                            user_fld5[236];
      } atm_d;
      struct
      {
         union
         {
            char                            typ[4];
            char                            msg_typ[4];
         } u_typ;
         char                            orig_pro_name[16];
         char                            ast_rtn_pro_name[16];
         char                            originator;
         char                            responder;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } post_dat;
         char                            term_ln[4];
         char                            term_fiid[4];
         char                            term_id[16];
         char                            term_name_loc[25];
         char                            term_owner_name[22];
         char                            term_city[13];
         char                            term_st_x[3];
         char                            term_cntry_x[2];
         char                            orig_crncy_cde[3];
         char                            tim_ofst[5];
         char                            seq_num[12];
         char                            invoice_num[10];
         char                            orig_invoice_num[10];
         char                            retl_id[19];
         char                            acq_inst_id_num[11];
         char                            rcv_inst_id_num[11];
         char                            auth_ind2;
         struct
         {
            char                            compl_req;
            struct
            {
               char                            cc[2];
               char                            t;
               char                            aa[2];
               char                            c;
            } tran_cde;
            char                            dest[4];
            char                            crd_ln[4];
            char                            crd_fiid[4];
            char                            user_fld2;
            char                            from_acct[28];
            char                            resp[3];
            char                            track2[40];
            char                            mbr_num[3];
            char                            exp_dat[4];
            char                            user_fld3;
            char                            amt_1[19];
            char                            amt_2[19];
            union
            {
               struct
               {
                  char                            auth_crncy_cde[3];
                  char                            setl_crncy_cde[3];
                  char                            auth_conv_rate[8];
                  char                            setl_conv_rate[8];
                  char                            conv_dat_tim[19];
               } mult_crncy;
               char                            user_fld0[41];
            } u_mult_crncy;
            char                            apprv_cde[10];
            char                            dft_capture_flg;
            char                            setl_flg;
         } tran;
         struct
         {
            char                            srv[2];
            char                            iss[2];
            char                            pri[16];
            char                            alt1[16];
            char                            alt2[16];
            char                            authr;
            char                            dflt;
         } rte;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } tran_dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tran_tim;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } acq_ichg_setl_dat;
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } iss_ichg_setl_dat;
         char                            rvsl_cde[2];
         char                            pt_srv_cond_cde[2];
         char                            pt_srv_entry_mde[3];
         char                            crd_iss_id_num[11];
         char                            msg_orig_ind;
         char                            addr_vrfy_stat;
         struct
         {
            char                            lgth[5];
            char                            info[200];
         } product;
      } pos_d;
   } u_atm_d;
   char                            extrn_msg_lgth[4];
   struct
   {
      char                            savearea[3254];
   } extrn_msg;
} ilfx_def;
#define ilfx_def_Size 4140
#pragma section key6
/* Record KEY6 created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __key6
typedef struct __key6
{
   union
   {
      char                            prikey[22];
      struct
      {
         char                            rec_typ;
         char                            fiid[4];
         char                            swi_pro[16];
         char                            user_fld1;
      } prikey_icf;
      struct
      {
         char                            rec_typ;
         char                            dpc_num[4];
         char                            hisf_pro[16];
         char                            user_fld2;
      } prikey_hcf;
   } u_prikey;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      char                            mac_typ;
      char                            encrypt_typ;
      char                            b24_encrypt_typ;
      char                            pin_blk;
      char                            ansi_pan;
      char                            pinpad_char;
      struct
      {
         char                            key_clear[8];
         char                            key_encrypt[8];
      } interm;
      struct
      {
         struct
         {
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key1;
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key2;
            char                            curr_indx;
            char                            user_fld4[23];
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } pin;
         struct
         {
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key1;
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key2;
            char                            curr_indx;
            char                            user_fld5[23];
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } mac;
      } outbound;
      struct
      {
         struct
         {
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key1;
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key2;
            char                            curr_indx;
            char                            user_fld6[23];
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } pin;
         struct
         {
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key1;
            struct
            {
               char                            part1[8];
               char                            part2[8];
            } key2;
            char                            curr_indx;
            char                            user_fld7[23];
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } mac;
      } inbound;
      char                            exchng_key[8];
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      __int32_t                       old_key_timer_lmt;
      char                            user_fld9a[177];
      char                            rcv_id[16];
      char                            org_id[16];
      char                            notarize_flg;
      char                            mac_data_typ;
      char                            full_msg_mac;
      char                            user_fld10;
      char                            pin_key_variant;
      char                            mac_key_variant;
      char                            key_proc_typ;
      char                            num_keys;
      char                            key_lgth;
      char                            mac_key_lgth;
      char                            user_fld8;
      __int32_t                       pin_key_timer_lmt;
      __int32_t                       mac_key_timer_lmt;
      __int32_t                       pin_key_tran_lmt;
      short                           pin_err_lmt;
      short                           cons_pin_err_lmt;
      __int32_t                       mac_key_tran_lmt;
      short                           mac_err_lmt;
      short                           cons_mac_err_lmt;
      short                           kmac_sync_err_lmt;
      char                            mac_exchng_key[8];
      char                            mac_exchng_key_extnd[8];
      char                            mac_exchng_key_chk_values[3];
      char                            exchng_key_chk_values[3];
      char                            exchng_key_extnd[8];
      char                            interm_key_chk_values[3];
      char                            user_fld11;
   } interface;
} key6_def;
#define key6_def_Size 628
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:47:12 */
#pragma section keya
/* Record KEYA created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __keya
typedef struct __keya
{
   struct
   {
      char                            rec_typ[2];
      char                            grp[4];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   char                            fiid[4];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      union
      {
         struct
         {
            char                            dnt[64][4];
            short                           dnt_rel_loc;
            char                            key_clear[8];
            char                            key_encrypt[8];
            char                            algo_num[2];
            char                            user_fld1[36];
         } diebold;
         struct
         {
            char                            bnk_id[8];
            short                           id_lgth;
            char                            partial_pan_ofst[2];
            char                            partial_pan_lgth[2];
            char                            compare_ind;
            char                            user_fld3;
            char                            user_fld2[296];
         } idkey;
         struct
         {
            char                            dec_tbl[16];
            char                            pan_pad;
            char                            pan_vfy_ofst[2];
            char                            pan_vfy_lgth[2];
            char                            key_clear[8];
            char                            key_encrypt[8];
            char                            key_encrypt_chk_values[3];
            char                            user_fld3[272];
         } ibm_des;
         struct
         {
            char                            key_clear[12][8];
            char                            key_encrypt[12][8];
            char                            key_encrypt_chk_values[12][3];
            char                            user_fld4[84];
         } aba_visa;
         struct
         {
            char                            encrypt_typ[2];
            char                            key_clear[2][8];
            char                            key_encrypt[2][8];
            char                            key_encrypt_chk_values[2][3];
            char                            user_fld5[272];
         } cv;
         struct
         {
            char                            key_clear[8];
            char                            decryp_flag;
            char                            user_fld_italian_area[303];
         } italian_area;
      } u_diebold;
   } verify;
} keya_def;
#define keya_def_Size 352
#pragma section keyd
/* Record KEYD created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __keyd
typedef struct __keyd
{
   struct
   {
      char                            retl_id[19];
      char                            keyd_grp[4];
      char                            term_id[16];
   } prikey;
   char                            derivation_key[32];
   char                            chk_values[4];
   char                            user_fld[40];
   char                            filler_0;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} keyd_def;
#define keyd_def_Size 134
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:47:13 */
#pragma section keyf
/* Record KEYF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __keyf
typedef struct __keyf
{
   union
   {
      char                            prikey[22];
      struct
      {
         char                            rec_typ;
         char                            fiid[4];
         char                            swi_pro[16];
         char                            user_fld1;
      } prikey_icf;
      struct
      {
         char                            rec_typ;
         char                            dpc_num[4];
         char                            hisf_pro[16];
         char                            user_fld2;
      } prikey_hcf;
   } u_prikey;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      char                            mac_typ;
      char                            encrypt_typ;
      char                            b24_encrypt_typ;
      char                            pin_blk;
      char                            ansi_pan;
      char                            pinpad_char;
      struct
      {
         char                            key_clear[8];
         char                            key_encrypt[8];
      } interm;
      struct
      {
         struct
         {
            char                            key1[8];
            char                            key2[8];
            char                            curr_indx;
            char                            user_fld4[7];
            long long                       key1_cntr;
            long long                       key2_cntr;
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } pin;
         struct
         {
            char                            key1[8];
            char                            key2[8];
            char                            curr_indx;
            char                            user_fld5[7];
            long long                       key1_cntr;
            long long                       key2_cntr;
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } mac;
      } outbound;
      struct
      {
         struct
         {
            char                            key1[8];
            char                            key2[8];
            char                            curr_indx;
            char                            user_fld6[7];
            long long                       key1_cntr;
            long long                       key2_cntr;
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } pin;
         struct
         {
            char                            key1[8];
            char                            key2[8];
            char                            curr_indx;
            char                            user_fld7[7];
            long long                       key1_cntr;
            long long                       key2_cntr;
            __int32_t                       key_cntr;
            char                            key_chk_value1[3];
            char                            key_chk_value2[3];
         } mac;
      } inbound;
      char                            exchng_key[8];
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      __int32_t                       old_key_timer_lmt;
      long long                       kek_seq_num_out;
      long long                       kek_seq_num_in;
      struct
      {
         char                            curr_indx;
         char                            user_fld8a;
         long long                       key1_cntr;
         long long                       key2_cntr;
      } outbound_kme;
      struct
      {
         char                            curr_indx;
         char                            user_fld8b;
         long long                       key1_cntr;
         long long                       key2_cntr;
      } inbound_kme;
      struct
      {
         char                            full_encrypt;
         char                            encrypt_typ_msg;
         char                            key_chk_value[3];
         char                            user_fld8c;
         __int32_t                       inbnd_key_cntr;
         __int32_t                       outbnd_key_cntr;
         __int32_t                       key_timer_lmt;
         __int32_t                       key_tran_lmt;
         short                           err_lmt;
         short                           cons_err_lmt;
      } msg;
      char                            user_fld9a[99];
      char                            rcv_id[16];
      char                            org_id[16];
      char                            notarize_flg;
      char                            mac_data_typ;
      char                            full_msg_mac;
      char                            user_fld10;
      char                            pin_key_variant;
      char                            mac_key_variant;
      char                            key_proc_typ;
      char                            num_keys;
      char                            key_lgth;
      __int32_t                       pin_key_timer_lmt;
      __int32_t                       mac_key_timer_lmt;
      __int32_t                       pin_key_tran_lmt;
      short                           pin_err_lmt;
      short                           cons_pin_err_lmt;
      __int32_t                       mac_key_tran_lmt;
      short                           mac_err_lmt;
      short                           cons_mac_err_lmt;
      short                           kmac_sync_err_lmt;
      char                            mac_exchng_key[8];
      char                            mac_exchng_key_extnd[8];
      char                            mac_exchng_key_chk_values[3];
      char                            exchng_key_chk_values[3];
      char                            exchng_key_extnd[8];
      char                            interm_key_chk_values[3];
      char                            user_fld11;
   } interface;
} keyf_def;
#define keyf_def_Size 562
#pragma section keyicc_prikey
/* Definition KEYICC-PRIKEY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __keyicc_prikey
typedef struct __keyicc_prikey
{
   char                            keyi_grp[32];
   char                            beg_dat[6];
   char                            end_dat[6];
} keyicc_prikey_def;
#define keyicc_prikey_def_Size 44
#pragma section keyicc
/* Record KEYICC created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __keyicc
typedef struct __keyicc
{
   struct
   {
      char                            keyi_grp[32];
      char                            beg_dat[6];
      char                            end_dat[6];
   } prikey;
   char                            fiid[4];
   char                            sm_key[16];
   char                            sm_conf_key[16];
   char                            emv_sec_scheme;
   char                            user_fld1[23];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   unsigned short                  num_crypto_keys;
   char                            crypto_keys[24][16];
} keyicc_def;
#define keyicc_def_Size 508
#pragma section lconf_history
#pragma section lconf_key
/* Definition LCONF-KEY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __lconf_key
typedef struct __lconf_key
{
   char                            item_typ;
   char                            user_fld1;
   union
   {
      char                            pro_name[16];
      char                            pro_nam[16];
   } u_pro_name;
   union
   {
      char                            item_name[32];
      char                            item_nam[32];
   } u_item_name;
} lconf_key_def;
#define lconf_key_def_Size 50
#pragma section lconf
/* Record LCONF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __lconf
typedef struct __lconf
{
   struct
   {
      char                            item_typ;
      char                            user_fld1;
      union
      {
         char                            pro_name[16];
         char                            pro_nam[16];
      } u_pro_name;
      union
      {
         char                            item_name[32];
         char                            item_nam[32];
      } u_item_name;
   } prikey;
   char                            prod_ind[32];
   struct
   {
      char                            txt_line[64];
   } comments[4];
   short                           last_chng_time[3];
   union
   {
      struct
      {
         char                            item_txt[120];
      } lconf_item;
      struct
      {
         union
         {
            char                            file_name[35];
            char                            fname[35];
         } u_file_name;
         union
         {
            char                            template[35];
            char                            tplt[35];
         } u_template;
         char                            user_field[35];
         char                            user_fld2[15];
      } assign_msg;
      struct
      {
         short                           plgth;
         char                            ptxt[70];
         char                            user_fld3[48];
      } param_msg;
   } u_lconf_item;
   char                            prod_ind_adnl[224];
   char                            user_fld4[6];
   struct
   {
      struct
      {
         long long                       afm_ts;
         short                           updt_typ;
         struct
         {
            short                           grp_num;
            __int32_t                       user_num;
         } user_id;
         char                            term_nam[24];
      } fm;
   } last_afm;
} lconf_def;
#define lconf_def_Size 734
#pragma section negbase
/* Definition NEGBASE created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __negbase
typedef struct __negbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      struct
      {
         char                            num[19];
      } pan;
      char                            mbr_num[3];
   } prikey;
   char                            crd_typ[2];
   char                            fiid[4];
   char                            rsn_cde[2];
   char                            capture_cde;
   char                            add_dat[6];
   char                            exp_dat[4];
   char                            user_fld1;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            user_fld2[24];
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
} negbase_def;
#define negbase_def_Size 100
#pragma section ssbbneg
/* Definition SSBBNEG created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbbneg
typedef struct __ssbbneg
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            super_tlr_term_id[10][16];
   char                            user_fld[20];
} ssbbneg_def;
#define ssbbneg_def_Size 188
#pragma section ssbcneg
/* Definition SSBCNEG created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbcneg
typedef struct __ssbcneg
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            corp_num[10];
} ssbcneg_def;
#define ssbcneg_def_Size 18
#pragma section neg
/* Record NEG created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __neg
typedef struct __neg
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         struct
         {
            char                            num[19];
         } pan;
         char                            mbr_num[3];
      } prikey;
      char                            crd_typ[2];
      char                            fiid[4];
      char                            rsn_cde[2];
      char                            capture_cde;
      char                            add_dat[6];
      char                            exp_dat[4];
      char                            user_fld1;
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      char                            user_fld2[24];
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            super_tlr_term_id[10][16];
      char                            user_fld[20];
   } seg17;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            corp_num[10];
   } seg18;
} neg_def;
#define neg_def_Size 306
#pragma section negxbase_display
/* Definition NEGXBASE-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __negxbase_display
typedef struct __negxbase_display
{
   char                            lgth[4];
   char                            cnt[9];
   struct
   {
      char                            pan[19];
      char                            mbr_num[3];
   } prikey;
   char                            rec_typ;
   char                            crd_typ[2];
   char                            fiid[4];
   char                            rsn_cde[2];
   char                            capture_cde;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } add_dat;
   char                            exp_dat[4];
   char                            user_fld1;
} negxbase_display_def;
#define negxbase_display_def_Size 56
#pragma section ssbbnegx_display
/* Definition SSBBNEGX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbbnegx_display
typedef struct __ssbbnegx_display
{
   char                            lgth[4];
   char                            super_tlr_term_id[10][16];
   char                            user_fld[20];
} ssbbnegx_display_def;
#define ssbbnegx_display_def_Size 184
#pragma section ssbcnegx_display
/* Definition SSBCNEGX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ssbcnegx_display
typedef struct __ssbcnegx_display
{
   char                            lgth[4];
   char                            corp_num[10];
} ssbcnegx_display_def;
#define ssbcnegx_display_def_Size 14
#pragma section negxd
/* Definition NEGXD created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __negxd
typedef struct __negxd
{
   struct
   {
      char                            lgth[4];
      char                            cnt[9];
      struct
      {
         char                            pan[19];
         char                            mbr_num[3];
      } prikey;
      char                            rec_typ;
      char                            crd_typ[2];
      char                            fiid[4];
      char                            rsn_cde[2];
      char                            capture_cde;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } add_dat;
      char                            exp_dat[4];
      char                            user_fld1;
   } seg0;
   struct
   {
      char                            lgth[4];
      char                            super_tlr_term_id[10][16];
      char                            user_fld[20];
   } seg17;
   struct
   {
      char                            lgth[4];
      char                            corp_num[10];
   } seg18;
} negxd_def;
#define negxd_def_Size 254
#pragma section omf_header
/* Definition OMF-HEADER created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __omf_header
typedef struct __omf_header
{
   char                            appl_cde[2];
   char                            fm_typ;
   char                            fm_dat[16];
   char                            lnet[4];
   char                            fiid[4];
   char                            regn[4];
   char                            brch[4];
   char                            term_id[16];
   char                            filler_0;
   short                           user_grp;
   __int32_t                       user_num;
} omf_header_def;
#define omf_header_def_Size 58
#pragma section omf
/* Record OMF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __omf
typedef struct __omf
{
   struct
   {
      char                            appl_cde[2];
      char                            fm_typ;
      char                            fm_dat[16];
      char                            lnet[4];
      char                            fiid[4];
      char                            regn[4];
      char                            brch[4];
      char                            term_id[16];
      char                            filler_0;
      short                           user_grp;
      __int32_t                       user_num;
   } omf_header;
   unsigned short                  rec_image_len;
   struct
   {
      char                            rec_image_var[4010];
   } rec_image;
} omf_def;
#define omf_def_Size 4070
#pragma section omf_appl_cde_constants
/* Constant MSG-SEC-00-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MSG_SEC_00_APPL_CDE_L "00"
/* Constant CSM-TCOM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSM_TCOM_APPL_CDE_L "01"
/* Constant CSM-TCOM-APPL-CDE-D created on 10/18/2023 at 17:47 */
#define CSM_TCOM_APPL_CDE_D "01"
/* Constant CUSTOMER-RSRVD-02-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_02_APPL_CDE_L "02"
/* Constant CUSTOMER-RSRVD-03-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_03_APPL_CDE_L "03"
/* Constant CUSTOMER-RSRVD-04-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_04_APPL_CDE_L "04"
/* Constant CUSTOMER-RSRVD-05-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_05_APPL_CDE_L "05"
/* Constant CUSTOMER-RSRVD-06-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_06_APPL_CDE_L "06"
/* Constant AFTER-LOGON-SEC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AFTER_LOGON_SEC_APPL_CDE_L "07"
/* Constant CUSTOMER-RSRVD-08-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_08_APPL_CDE_L "08"
/* Constant CUSTOMER-RSRVD-09-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_09_APPL_CDE_L "09"
/* Constant KEYF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define KEYF_APPL_CDE_L "0A"
/* Constant EMF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define EMF_APPL_CDE_L "0B"
/* Constant APPL-EMF-D created on 10/18/2023 at 17:47 */
#define APPL_EMF_D "0B"
/* Constant ECF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ECF_APPL_CDE_L "0C"
/* Constant ITS-MLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ITS_MLF_APPL_CDE_L "0D"
/* Constant SWITCH-MLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SWITCH_MLF_APPL_CDE_L "0E"
/* Constant KEY6-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define KEY6_APPL_CDE_L "0F"
/* Constant SEC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SEC_APPL_CDE_L "10"
/* Constant UNUSED-11-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_11_APPL_CDE_L "11"
/* Constant UNUSED-12-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_12_APPL_CDE_L "12"
/* Constant UNUSED-13-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_13_APPL_CDE_L "13"
/* Constant UNUSED-14-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_14_APPL_CDE_L "14"
/* Constant UNUSED-15-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_15_APPL_CDE_L "15"
/* Constant UNUSED-16-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_16_APPL_CDE_L "16"
/* Constant UNUSED-17-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_17_APPL_CDE_L "17"
/* Constant UNUSED-18-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_18_APPL_CDE_L "18"
/* Constant UNUSED-19-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_19_APPL_CDE_L "19"
/* Constant UNUSED-1A-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_1A_APPL_CDE_L "1A"
/* Constant UNUSED-1B-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_1B_APPL_CDE_L "1B"
/* Constant OIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define OIF_APPL_CDE_L "1C"
/* Constant UFIR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UFIR_APPL_CDE_L "1E"
/* Constant APPL-UFIR-D created on 10/18/2023 at 17:47 */
#define APPL_UFIR_D "1E"
/* Constant UPFR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UPFR_APPL_CDE_L "1F"
/* Constant CSEC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSEC_APPL_CDE_L "1G"
/* Constant IDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IDF_APPL_CDE_L "20"
/* Constant APPL-IDF-D created on 10/18/2023 at 17:47 */
#define APPL_IDF_D "20"
/* Constant TDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TDF_APPL_CDE_L "21"
/* Constant TTDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TTDF_APPL_CDE_L "22"
/* Constant PTDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PTDF_APPL_CDE_L "23"
/* Constant PRDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PRDF_APPL_CDE_L "24"
/* Constant TTF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TTF_APPL_CDE_L "25"
/* Constant ORF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ORF_APPL_CDE_L "26"
/* Constant TRF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TRF_APPL_CDE_L "27"
/* Constant ATDD1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ATDD1_APPL_CDE_L "28"
/* Constant MBAF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MBAF_APPL_CDE_L "29"
/* Constant AIRS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AIRS_APPL_CDE_L "2A"
/* Constant ATDS1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ATDS1_APPL_CDE_L "2B"
/* Constant ERF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ERF_APPL_CDE_L "2C"
/* Constant PTDD1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PTDD1_APPL_CDE_L "2E"
/* Constant PTDS1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PTDS1_APPL_CDE_L "2F"
/* Constant TLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TLF_APPL_CDE_L "30"
/* Constant ARPTS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ARPTS_APPL_CDE_L "31"
/* Constant TTLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TTLF_APPL_CDE_L "32"
/* Constant PTLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PTLF_APPL_CDE_L "33"
/* Constant CHF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CHF_APPL_CDE_L "35"
/* Constant CAPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CAPF_APPL_CDE_L "36"
/* Constant BSF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BSF_APPL_CDE_L "37"
/* Constant CCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CCF_APPL_CDE_L "38"
/* Constant CSF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSF_APPL_CDE_L "39"
/* Constant KEYA-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define KEYA_APPL_CDE_L "3A"
/* Constant APPL-KEYA-D created on 10/18/2023 at 17:47 */
#define APPL_KEYA_D "3A"
/* Constant KEYI-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define KEYI_APPL_CDE_L "3B"
/* Constant CPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CPF_APPL_CDE_L "40"
/* Constant IPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IPF_APPL_CDE_L "41"
/* Constant ICF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ICF_APPL_CDE_L "42"
/* Constant IIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IIF_APPL_CDE_L "43"
/* Constant VVT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VVT_APPL_CDE_L "44"
/* Constant VVC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VVC_APPL_CDE_L "45"
/* Constant BBF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BBF_APPL_CDE_L "46"
/* Constant UNUSED-47-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_47_APPL_CDE_L "47"
/* Constant HPTC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define HPTC_APPL_CDE_L "48"
/* Constant UNUSED-49-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_49_APPL_CDE_L "49"
/* Constant NEG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NEG_APPL_CDE_L "50"
/* Constant NNF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NNF_APPL_CDE_L "51"
/* Constant HCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define HCF_APPL_CDE_L "52"
/* Constant UNUSED-53-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_53_APPL_CDE_L "53"
/* Constant TKN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TKN_APPL_CDE_L "54"
/* Constant APPL-TKN-D created on 10/18/2023 at 17:47 */
#define APPL_TKN_D "54"
/* Constant UAF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UAF_APPL_CDE_L "55"
/* Constant RCPT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RCPT_APPL_CDE_L "56"
/* Constant HPCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define HPCF_APPL_CDE_L "57"
/* Constant SURF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SURF_APPL_CDE_L "58"
/* Constant ICFE-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ICFE_APPL_CDE_L "59"
/* Constant PBF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PBF_APPL_CDE_L "60"
/* Constant APPL-PBF-D created on 10/18/2023 at 17:47 */
#define APPL_PBF_D "60"
/* Constant SPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SPF_APPL_CDE_L "61"
/* Constant NBF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NBF_APPL_CDE_L "62"
/* Constant WHFF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define WHFF_APPL_CDE_L "63"
/* Constant ARF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ARF_APPL_CDE_L "64"
/* Constant DEST-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DEST_APPL_CDE_L "65"
/* Constant APPL-DEST-D created on 10/18/2023 at 17:47 */
#define APPL_DEST_D "65"
/* Constant SCM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SCM_APPL_CDE_L "66"
/* Constant APPL-SCM-D created on 10/18/2023 at 17:47 */
#define APPL_SCM_D "66"
/* Constant OBJ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define OBJ_APPL_CDE_L "67"
/* Constant APPL-OBJ-D created on 10/18/2023 at 17:47 */
#define APPL_OBJ_D "67"
/* Constant EMT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define EMT_APPL_CDE_L "68"
/* Constant APPL-EMT-D created on 10/18/2023 at 17:47 */
#define APPL_EMT_D "68"
/* Constant EORF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define EORF_APPL_CDE_L "69"
/* Constant APPL-EORF-D created on 10/18/2023 at 17:47 */
#define APPL_EORF_D "69"
/* Constant CAF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CAF_APPL_CDE_L "70"
/* Constant AST-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AST_APPL_CDE_L "71"
/* Constant RTBL-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RTBL_APPL_CDE_L "72"
/* Constant ADMN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ADMN_APPL_CDE_L "73"
/* Constant CART-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CART_APPL_CDE_L "74"
/* Constant PRF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PRF_APPL_CDE_L "75"
/* Constant TQF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TQF_APPL_CDE_L "76"
/* Constant CRUF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CRUF_APPL_CDE_L "77"
/* Constant QASW-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define QASW_APPL_CDE_L "78"
/* Constant STF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define STF_APPL_CDE_L "79"
/* Constant ACNF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ACNF_APPL_CDE_L "7A"
/* Constant ARSP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ARSP_APPL_CDE_L "7B"
/* Constant MCNF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MCNF_APPL_CDE_L "7C"
/* Constant MHCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MHCF_APPL_CDE_L "7D"
/* Constant MRSP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MRSP_APPL_CDE_L "7E"
/* Constant MTCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MTCF_APPL_CDE_L "7F"
/* Constant MREG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MREG_APPL_CDE_L "7G"
/* Constant KEYD-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define KEYD_APPL_CDE_L "7H"
/* Constant RCDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RCDF_APPL_CDE_L "80"
/* Constant UNUSED-81-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_81_APPL_CDE_L "81"
/* Constant UNUSED-82-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_82_APPL_CDE_L "82"
/* Constant UNUSED-83-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_83_APPL_CDE_L "83"
/* Constant UNUSED-84-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_84_APPL_CDE_L "84"
/* Constant UNUSED-85-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_85_APPL_CDE_L "85"
/* Constant UNUSED-86-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define UNUSED_86_APPL_CDE_L "86"
/* Constant AORF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AORF_APPL_CDE_L "87"
/* Constant APPL-AORF-D created on 10/18/2023 at 17:47 */
#define APPL_AORF_D "87"
/* Constant APRF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define APRF_APPL_CDE_L "88"
/* Constant APPL-APRF-D created on 10/18/2023 at 17:47 */
#define APPL_APRF_D "88"
/* Constant ASGN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ASGN_APPL_CDE_L "89"
/* Constant APPL-ASGN-D created on 10/18/2023 at 17:47 */
#define APPL_ASGN_D "89"
/* Constant EPRF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define EPRF_APPL_CDE_L "8A"
/* Constant APPL-EPRF-D created on 10/18/2023 at 17:47 */
#define APPL_EPRF_D "8A"
/* Constant PORF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PORF_APPL_CDE_L "90"
/* Constant APPL-PORF-D created on 10/18/2023 at 17:47 */
#define APPL_PORF_D "90"
/* Constant PRO-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PRO_APPL_CDE_L "91"
/* Constant APPL-PRO-D created on 10/18/2023 at 17:47 */
#define APPL_PRO_D "91"
/* Constant SPRF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SPRF_APPL_CDE_L "92"
/* Constant APPL-SPRF-D created on 10/18/2023 at 17:47 */
#define APPL_SPRF_D "92"
/* Constant PTF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PTF_APPL_CDE_L "93"
/* Constant APPL-PTF-D created on 10/18/2023 at 17:47 */
#define APPL_PTF_D "93"
/* Constant SCT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SCT_APPL_CDE_L "94"
/* Constant APPL-SCT-D created on 10/18/2023 at 17:47 */
#define APPL_SCT_D "94"
/* Constant CUSTOMER-RSRVD-95-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_95_APPL_CDE_L "95"
/* Constant CUSTOMER-RSRVD-96-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_96_APPL_CDE_L "96"
/* Constant CUSTOMER-RSRVD-97-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_97_APPL_CDE_L "97"
/* Constant CUSTOMER-RSRVD-98-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_98_APPL_CDE_L "98"
/* Constant CUSTOMER-RSRVD-99-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CUSTOMER_RSRVD_99_APPL_CDE_L "99"
/* Constant ESF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ESF_APPL_CDE_L "9A"
/* Constant APPL-ESF-D created on 10/18/2023 at 17:47 */
#define APPL_ESF_D "9A"
/* Constant LPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define LPF_APPL_CDE_L "9B"
/* Constant APPL-LPF-D created on 10/18/2023 at 17:47 */
#define APPL_LPF_D "9B"
/* Constant BANK-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BANK_APPL_CDE_L "A0"
/* Constant BKBR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BKBR_APPL_CDE_L "A1"
/* Constant BKNT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BKNT_APPL_CDE_L "A2"
/* Constant BKAV-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BKAV_APPL_CDE_L "A3"
/* Constant VBUD-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VBUD_APPL_CDE_L "A4"
/* Constant CLPT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CLPT_APPL_CDE_L "A5"
/* Constant CBPT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CBPT_APPL_CDE_L "A6"
/* Constant CVND-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CVND_APPL_CDE_L "A7"
/* Constant BILLPAY-RSRVD-A8-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_A8_APPL_CDE_L "A8"
/* Constant BILLPAY-RSRVD-A9-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_A9_APPL_CDE_L "A9"
/* Constant HIST-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define HIST_APPL_CDE_L "AA"
/* Constant BILLPAY-RSRVD-AB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AB_APPL_CDE_L "AB"
/* Constant BILLPAY-RSRVD-AC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AC_APPL_CDE_L "AC"
/* Constant BILLPAY-RSRVD-AD-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AD_APPL_CDE_L "AD"
/* Constant BILLPAY-RSRVD-AE-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AE_APPL_CDE_L "AE"
/* Constant BILLPAY-RSRVD-AF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AF_APPL_CDE_L "AF"
/* Constant RTXT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RTXT_APPL_CDE_L "AG"
/* Constant RTRY-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RTRY_APPL_CDE_L "AH"
/* Constant VNDR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VNDR_APPL_CDE_L "AI"
/* Constant VNDB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VNDB_APPL_CDE_L "AJ"
/* Constant VNDM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VNDM_APPL_CDE_L "AK"
/* Constant BILLPAY-RSRVD-AL-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AL_APPL_CDE_L "AL"
/* Constant BLG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BLG_APPL_CDE_L "AM"
/* Constant BLRT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BLRT_APPL_CDE_L "AN"
/* Constant BLTY-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BLTY_APPL_CDE_L "AO"
/* Constant BILLPAY-RSRVD-AP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AP_APPL_CDE_L "AP"
/* Constant RATE-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RATE_APPL_CDE_L "AQ"
/* Constant RATG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RATG_APPL_CDE_L "AR"
/* Constant SVPT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SVPT_APPL_CDE_L "AS"
/* Constant BILLPAY-RSRVD-AT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AT_APPL_CDE_L "AT"
/* Constant BILLPAY-RSRVD-AU-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AU_APPL_CDE_L "AU"
/* Constant BILLPAY-RSRVD-AV-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AV_APPL_CDE_L "AV"
/* Constant BILLPAY-RSRVD-AW-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AW_APPL_CDE_L "AW"
/* Constant BILLPAY-RSRVD-AX-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AX_APPL_CDE_L "AX"
/* Constant BILLPAY-RSRVD-AY-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AY_APPL_CDE_L "AY"
/* Constant BILLPAY-RSRVD-AZ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BILLPAY_RSRVD_AZ_APPL_CDE_L "AZ"
/* Constant CNRF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CNRF_APPL_CDE_L "B0"
/* Constant CCIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CCIF_APPL_CDE_L "CI"
/* Constant APPL-CCIF-D created on 10/18/2023 at 17:47 */
#define APPL_CCIF_D "CI"
/* Constant CCMF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CCMF_APPL_CDE_L "CM"
/* Constant APPL-CCMF-D created on 10/18/2023 at 17:47 */
#define APPL_CCMF_D "CM"
/* Constant CIS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CIS_APPL_CDE_L "CS"
/* Constant APPL-CIS-D created on 10/18/2023 at 17:47 */
#define APPL_CIS_D "CS"
/* Constant CSTP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSTP_APPL_CDE_L "CT"
/* Constant APPL-CSTP-D created on 10/18/2023 at 17:47 */
#define APPL_CSTP_D "CT"
/* Constant FAPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define FAPF_APPL_CDE_L "FA"
/* Constant APPL-FAPF-D created on 10/18/2023 at 17:47 */
#define APPL_FAPF_D "FA"
/* Constant PTBL-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PTBL_APPL_CDE_L "FB"
/* Constant SEMF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SEMF_APPL_CDE_L "FC"
/* Constant MSG-SEC-FF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define MSG_SEC_FF_APPL_CDE_L "FF"
/* Constant FPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define FPF_APPL_CDE_L "FP"
/* Constant APPL-FPF-D created on 10/18/2023 at 17:47 */
#define APPL_FPF_D "FP"
/* Constant FSF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define FSF_APPL_CDE_L "FS"
/* Constant APPL-FSF-D created on 10/18/2023 at 17:47 */
#define APPL_FSF_D "FS"
/* Constant DIST-RSRVD-G0-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G0_APPL_CDE_L "G0"
/* Constant DIST-RSRVD-G1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G1_APPL_CDE_L "G1"
/* Constant DIST-RSRVD-G2-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G2_APPL_CDE_L "G2"
/* Constant DIST-RSRVD-G3-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G3_APPL_CDE_L "G3"
/* Constant DIST-RSRVD-G4-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G4_APPL_CDE_L "G4"
/* Constant DIST-RSRVD-G5-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G5_APPL_CDE_L "G5"
/* Constant DIST-RSRVD-G6-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G6_APPL_CDE_L "G6"
/* Constant DIST-RSRVD-G7-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G7_APPL_CDE_L "G7"
/* Constant DIST-RSRVD-G8-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G8_APPL_CDE_L "G8"
/* Constant DIST-RSRVD-G9-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_G9_APPL_CDE_L "G9"
/* Constant DIST-RSRVD-GA-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GA_APPL_CDE_L "GA"
/* Constant DIST-RSRVD-GB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GB_APPL_CDE_L "GB"
/* Constant DIST-RSRVD-GC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GC_APPL_CDE_L "GC"
/* Constant DIST-RSRVD-GD-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GD_APPL_CDE_L "GD"
/* Constant DIST-RSRVD-GE-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GE_APPL_CDE_L "GE"
/* Constant DIST-RSRVD-GF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GF_APPL_CDE_L "GF"
/* Constant DIST-RSRVD-GG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GG_APPL_CDE_L "GG"
/* Constant DIST-RSRVD-GH-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GH_APPL_CDE_L "GH"
/* Constant DIST-RSRVD-GI-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GI_APPL_CDE_L "GI"
/* Constant DIST-RSRVD-GJ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GJ_APPL_CDE_L "GJ"
/* Constant DIST-RSRVD-GK-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GK_APPL_CDE_L "GK"
/* Constant DIST-RSRVD-GL-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GL_APPL_CDE_L "GL"
/* Constant DIST-RSRVD-GM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GM_APPL_CDE_L "GM"
/* Constant DIST-RSRVD-GN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GN_APPL_CDE_L "GN"
/* Constant DIST-RSRVD-GO-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GO_APPL_CDE_L "GO"
/* Constant DIST-RSRVD-GP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GP_APPL_CDE_L "GP"
/* Constant DIST-RSRVD-GQ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GQ_APPL_CDE_L "GQ"
/* Constant DIST-RSRVD-GR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GR_APPL_CDE_L "GR"
/* Constant DIST-RSRVD-GS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GS_APPL_CDE_L "GS"
/* Constant DIST-RSRVD-GT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GT_APPL_CDE_L "GT"
/* Constant DIST-RSRVD-GU-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GU_APPL_CDE_L "GU"
/* Constant DIST-RSRVD-GV-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GV_APPL_CDE_L "GV"
/* Constant DIST-RSRVD-GW-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GW_APPL_CDE_L "GW"
/* Constant DIST-RSRVD-GX-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GX_APPL_CDE_L "GX"
/* Constant DIST-RSRVD-GY-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GY_APPL_CDE_L "GY"
/* Constant DIST-RSRVD-GZ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_GZ_APPL_CDE_L "GZ"
/* Constant DIST-RSRVD-H0-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H0_APPL_CDE_L "H0"
/* Constant DIST-RSRVD-H1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H1_APPL_CDE_L "H1"
/* Constant DIST-RSRVD-H2-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H2_APPL_CDE_L "H2"
/* Constant DIST-RSRVD-H3-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H3_APPL_CDE_L "H3"
/* Constant DIST-RSRVD-H4-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H4_APPL_CDE_L "H4"
/* Constant DIST-RSRVD-H5-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H5_APPL_CDE_L "H5"
/* Constant DIST-RSRVD-H6-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H6_APPL_CDE_L "H6"
/* Constant DIST-RSRVD-H7-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H7_APPL_CDE_L "H7"
/* Constant DIST-RSRVD-H8-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H8_APPL_CDE_L "H8"
/* Constant DIST-RSRVD-H9-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_H9_APPL_CDE_L "H9"
/* Constant DIST-RSRVD-HA-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HA_APPL_CDE_L "HA"
/* Constant DIST-RSRVD-HB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HB_APPL_CDE_L "HB"
/* Constant DIST-RSRVD-HC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HC_APPL_CDE_L "HC"
/* Constant DIST-RSRVD-HD-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HD_APPL_CDE_L "HD"
/* Constant DIST-RSRVD-HE-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HE_APPL_CDE_L "HE"
/* Constant DIST-RSRVD-HF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HF_APPL_CDE_L "HF"
/* Constant DIST-RSRVD-HG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HG_APPL_CDE_L "HG"
/* Constant DIST-RSRVD-HH-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HH_APPL_CDE_L "HH"
/* Constant DIST-RSRVD-HI-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HI_APPL_CDE_L "HI"
/* Constant DIST-RSRVD-HJ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HJ_APPL_CDE_L "HJ"
/* Constant DIST-RSRVD-HK-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HK_APPL_CDE_L "HK"
/* Constant DIST-RSRVD-HL-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HL_APPL_CDE_L "HL"
/* Constant DIST-RSRVD-HM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HM_APPL_CDE_L "HM"
/* Constant DIST-RSRVD-HN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HN_APPL_CDE_L "HN"
/* Constant DIST-RSRVD-HO-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HO_APPL_CDE_L "HO"
/* Constant DIST-RSRVD-HP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HP_APPL_CDE_L "HP"
/* Constant DIST-RSRVD-HQ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HQ_APPL_CDE_L "HQ"
/* Constant DIST-RSRVD-HR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HR_APPL_CDE_L "HR"
/* Constant DIST-RSRVD-HS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HS_APPL_CDE_L "HS"
/* Constant DIST-RSRVD-HT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HT_APPL_CDE_L "HT"
/* Constant DIST-RSRVD-HU-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HU_APPL_CDE_L "HU"
/* Constant DIST-RSRVD-HV-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HV_APPL_CDE_L "HV"
/* Constant DIST-RSRVD-HW-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HW_APPL_CDE_L "HW"
/* Constant DIST-RSRVD-HX-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HX_APPL_CDE_L "HX"
/* Constant DIST-RSRVD-HY-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HY_APPL_CDE_L "HY"
/* Constant DIST-RSRVD-HZ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define DIST_RSRVD_HZ_APPL_CDE_L "HZ"
/* Constant BASE-BBF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BASE_BBF_APPL_CDE_L "I0"
/* Constant BASE-IIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BASE_IIF_APPL_CDE_L "I1"
/* Constant PLUS-PPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PLUS_PPF_APPL_CDE_L "I2"
/* Constant VISA-BBF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VISA_BBF_APPL_CDE_L "I3"
/* Constant VISA-IIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VISA_IIF_APPL_CDE_L "I4"
/* Constant BNET-IIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define BNET_IIF_APPL_CDE_L "I5"
/* Constant INTF-ISF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define INTF_ISF_APPL_CDE_L "I6"
/* Constant SDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define SDF_APPL_CDE_L "I7"
/* Constant AOS82-ODCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AOS82_ODCF_APPL_CDE_L "I8"
/* Constant AOS82-MLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AOS82_MLF_APPL_CDE_L "I9"
/* Constant AOS82-NIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define AOS82_NIF_APPL_CDE_L "IA"
/* Constant INTF-SNF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define INTF_SNF_APPL_CDE_L "IC"
/* Constant VISA-PLUS-ISO-VPPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define VISA_PLUS_ISO_VPPF_APPL_CDE_L "ID"
/* Constant PLUS-ISO-PPF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PLUS_ISO_PPF_APPL_CDE_L "IE"
/* Constant ADP-ETF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ADP_ETF_APPL_CDE_L "IF"
/* Constant INTF-ADMN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define INTF_ADMN_APPL_CDE_L "IG"
/* Constant INTF-RLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define INTF_RLF_APPL_CDE_L "IH"
/* Constant INTF-IIF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define INTF_IIF_APPL_CDE_L "II"
/* Constant PLUS-ISO-PAC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PLUS_ISO_PAC_APPL_CDE_L "IJ"
/* Constant NCS-NCSS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NCS_NCSS_APPL_CDE_L "L1"
/* Constant NCS-NCSP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NCS_NCSP_APPL_CDE_L "L2"
/* Constant NCS-RSRVD-L3-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NCS_RSRVD_L3_APPL_CDE_L "L3"
/* Constant NCS-RSRVD-L4-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NCS_RSRVD_L4_APPL_CDE_L "L4"
/* Constant NCS-RSRVD-L5-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define NCS_RSRVD_L5_APPL_CDE_L "L5"
/* Constant ADRT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ADRT_APPL_CDE_L "M0"
/* Constant APPL-ADRT-D created on 10/18/2023 at 17:47 */
#define APPL_ADRT_D "M0"
/* Constant IMTF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IMTF_APPL_CDE_L "M1"
/* Constant APPL-IMTF-D created on 10/18/2023 at 17:47 */
#define APPL_IMTF_D "M0"
/* Constant IFCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IFCF_APPL_CDE_L "M2"
/* Constant APPL-IFCF-D created on 10/18/2023 at 17:47 */
#define APPL_IFCF_D "M2"
/* Constant IST-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IST_APPL_CDE_L "M3"
/* Constant APPL-IST-D created on 10/18/2023 at 17:47 */
#define APPL_IST_D "M3"
/* Constant IRCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IRCF_APPL_CDE_L "M4"
/* Constant APPL-IRCF-D created on 10/18/2023 at 17:47 */
#define APPL_IRCF_D "M4"
/* Constant PCDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PCDF_APPL_CDE_L "M5"
/* Constant APPL-PCDF-D created on 10/18/2023 at 17:47 */
#define APPL_PCDF_D "M5"
/* Constant ITLF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ITLF_APPL_CDE_L "M6"
/* Constant APPL-TLF-D created on 10/18/2023 at 17:47 */
#define APPL_TLF_D "M6"
/* Constant THF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define THF_APPL_CDE_L "M7"
/* Constant APPL-THF-D created on 10/18/2023 at 17:47 */
#define APPL_THF_D "M7"
/* Constant ISF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ISF_APPL_CDE_L "M8"
/* Constant APPL-ISF-D created on 10/18/2023 at 17:47 */
#define APPL_ISF_D "M8"
/* Constant ATT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ATT_APPL_CDE_L "M9"
/* Constant APPL-ATT-D created on 10/18/2023 at 17:47 */
#define APPL_ATT_D "M9"
/* Constant LCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define LCF_APPL_CDE_L "MA"
/* Constant APPL-LCF-D created on 10/18/2023 at 17:47 */
#define APPL_LCF_D "MA"
/* Constant ELF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define ELF_APPL_CDE_L "MB"
/* Constant APPL-ELF-D created on 10/18/2023 at 17:47 */
#define APPL_ELF_D "MB"
/* Constant FCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define FCF_APPL_CDE_L "MC"
/* Constant APPL-FCF-D created on 10/18/2023 at 17:47 */
#define APPL_FCF_D "MC"
/* Constant THCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define THCF_APPL_CDE_L "MD"
/* Constant APPL-THCF-D created on 10/18/2023 at 17:47 */
#define APPL_THCF_D "MD"
/* Constant CACT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CACT_APPL_CDE_L "NO"
/* Constant APPL-CACT-D created on 10/18/2023 at 17:47 */
#define APPL_CACT_D "NO"
/* Constant CATT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CATT_APPL_CDE_L "N1"
/* Constant APPL-CATT-D created on 10/18/2023 at 17:47 */
#define APPL_CATT_D "N1"
/* Constant CSTT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSTT_APPL_CDE_L "N2"
/* Constant APPL-CSTT-D created on 10/18/2023 at 17:47 */
#define APPL_CSTT_D "N2"
/* Constant CSR-UNUSED-N3-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSR_UNUSED_N3_APPL_CDE_L "N3"
/* Constant PIT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PIT_APPL_CDE_L "N4"
/* Constant APPL-PIT-D created on 10/18/2023 at 17:47 */
#define APPL_PIT_D "N4"
/* Constant CPIT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CPIT_APPL_CDE_L "N5"
/* Constant APPL-CPIT-D created on 10/18/2023 at 17:47 */
#define APPL_CPIT_D "N5"
/* Constant TTSC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TTSC_APPL_CDE_L "N6"
/* Constant APPL-TTSC-D created on 10/18/2023 at 17:47 */
#define APPL_TTSC_D "N6"
/* Constant CSR-UNUSED-N7-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSR_UNUSED_N7_APPL_CDE_L "N7"
/* Constant CSR-UNUSED-N8-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSR_UNUSED_N8_APPL_CDE_L "N8"
/* Constant CSR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CSR_APPL_CDE_L "N9"
/* Constant APPL-CSR-D created on 10/18/2023 at 17:47 */
#define APPL_CSR_D "N9"
/* Constant APPL-AWB-D created on 10/18/2023 at 17:47 */
#define APPL_AWB_D "P0"
/* Constant CS-AWB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_AWB_APPL_CDE_L "P0"
/* Constant APPL-CCS-D created on 10/18/2023 at 17:47 */
#define APPL_CCS_D "P1"
/* Constant CS-CCS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_CCS_APPL_CDE_L "P1"
/* Constant APPL-DBG-D created on 10/18/2023 at 17:47 */
#define APPL_DBG_D "P2"
/* Constant CS-DBG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_DBG_APPL_CDE_L "P2"
/* Constant APPL-EWB-D created on 10/18/2023 at 17:47 */
#define APPL_EWB_D "P3"
/* Constant CS-EWB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_EWB_APPL_CDE_L "P3"
/* Constant APPL-LWB-D created on 10/18/2023 at 17:47 */
#define APPL_LWB_D "P4"
/* Constant CS-LWB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_LWB_APPL_CDE_L "P4"
/* Constant APPL-PWB-D created on 10/18/2023 at 17:47 */
#define APPL_PWB_D "P5"
/* Constant CS-PWB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_PWB_APPL_CDE_L "P5"
/* Constant APPL-SCS-D created on 10/18/2023 at 17:47 */
#define APPL_SCS_D "P6"
/* Constant CS-SCS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_SCS_APPL_CDE_L "P6"
/* Constant APPL-STAT-D created on 10/18/2023 at 17:47 */
#define APPL_STAT_D "P7"
/* Constant CS-STAT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_STAT_APPL_CDE_L "P7"
/* Constant APPL-TRC-D created on 10/18/2023 at 17:47 */
#define APPL_TRC_D "P8"
/* Constant CS-TRC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_TRC_APPL_CDE_L "P8"
/* Constant APPL-ISCF-D created on 10/18/2023 at 17:47 */
#define APPL_ISCF_D "P9"
/* Constant CS-ISCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_ISCF_APPL_CDE_L "P9"
/* Constant APPL-LCONF-D created on 10/18/2023 at 17:47 */
#define APPL_LCONF_D "Q0"
/* Constant CS-LNCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_LNCF_APPL_CDE_L "Q0"
/* Constant APPL-SSM-D created on 10/18/2023 at 17:47 */
#define APPL_SSM_D "Q1"
/* Constant CS-SSM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_SSM_APPL_CDE_L "Q1"
/* Constant APPL-LEX-D created on 10/18/2023 at 17:47 */
#define APPL_LEX_D "Q2"
/* Constant CS-LEX-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define CS_LEX_APPL_CDE_L "Q2"
/* Constant RPQ-RSRVD-R0-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R0_APPL_CDE_L "R0"
/* Constant RPQ-RSRVD-R1-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R1_APPL_CDE_L "R1"
/* Constant RPQ-RSRVD-R2-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R2_APPL_CDE_L "R2"
/* Constant RPQ-RSRVD-R3-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R3_APPL_CDE_L "R3"
/* Constant RPQ-RSRVD-R4-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R4_APPL_CDE_L "R4"
/* Constant RPQ-RSRVD-R5-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R5_APPL_CDE_L "R5"
/* Constant RPQ-RSRVD-R6-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R6_APPL_CDE_L "R6"
/* Constant RPQ-RSRVD-R7-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R7_APPL_CDE_L "R7"
/* Constant RPQ-RSRVD-R8-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R8_APPL_CDE_L "R8"
/* Constant RPQ-RSRVD-R9-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_R9_APPL_CDE_L "R9"
/* Constant RPQ-RSRVD-RA-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RA_APPL_CDE_L "RA"
/* Constant RPQ-RSRVD-RB-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RB_APPL_CDE_L "RB"
/* Constant RPQ-RSRVD-RC-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RC_APPL_CDE_L "RC"
/* Constant RPQ-RSRVD-RD-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RD_APPL_CDE_L "RD"
/* Constant RPQ-RSRVD-RE-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RE_APPL_CDE_L "RE"
/* Constant RPQ-RSRVD-RF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RF_APPL_CDE_L "RF"
/* Constant RPQ-RSRVD-RG-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RG_APPL_CDE_L "RG"
/* Constant RPQ-RSRVD-RH-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RH_APPL_CDE_L "RH"
/* Constant RPQ-RSRVD-RI-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RI_APPL_CDE_L "RI"
/* Constant RPQ-RSRVD-RJ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RJ_APPL_CDE_L "RJ"
/* Constant RPQ-RSRVD-RK-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RK_APPL_CDE_L "RK"
/* Constant RPQ-RSRVD-RL-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RL_APPL_CDE_L "RL"
/* Constant RPQ-RSRVD-RM-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RM_APPL_CDE_L "RM"
/* Constant RPQ-RSRVD-RN-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RN_APPL_CDE_L "RN"
/* Constant RPQ-RSRVD-RO-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RO_APPL_CDE_L "RO"
/* Constant RPQ-RSRVD-RP-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RP_APPL_CDE_L "RP"
/* Constant RPQ-RSRVD-RQ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RQ_APPL_CDE_L "RQ"
/* Constant RPQ-RSRVD-RR-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RR_APPL_CDE_L "RR"
/* Constant RPQ-RSRVD-RS-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RS_APPL_CDE_L "RS"
/* Constant RPQ-RSRVD-RT-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RT_APPL_CDE_L "RT"
/* Constant RPQ-RSRVD-RU-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RU_APPL_CDE_L "RU"
/* Constant RPQ-RSRVD-RV-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RV_APPL_CDE_L "RV"
/* Constant RPQ-RSRVD-RW-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RW_APPL_CDE_L "RW"
/* Constant RPQ-RSRVD-RX-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RX_APPL_CDE_L "RX"
/* Constant RPQ-RSRVD-RY-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RY_APPL_CDE_L "RY"
/* Constant RPQ-RSRVD-RZ-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define RPQ_RSRVD_RZ_APPL_CDE_L "RZ"
/* Constant APPL-IPCF-D created on 10/18/2023 at 17:47 */
#define APPL_IPCF_D "UA"
/* Constant IPCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define IPCF_APPL_CDE_L "UA"
/* Constant APPL-PDF-D created on 10/18/2023 at 17:47 */
#define APPL_PDF_D "UT"
/* Constant PDF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define PDF_APPL_CDE_L "UT"
/* Constant APPL-TCF-D created on 10/18/2023 at 17:47 */
#define APPL_TCF_D "UU"
/* Constant TCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define TCF_APPL_CDE_L "UU"
/* Constant APPL-APCF-D created on 10/18/2023 at 17:47 */
#define APPL_APCF_D "UX"
/* Constant APCF-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define APCF_APPL_CDE_L "UX"
/* Constant EMF5-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define EMF5_APPL_CDE_L "XX"
/* Constant KEY5-APPL-CDE-L created on 10/18/2023 at 17:47 */
#define KEY5_APPL_CDE_L "ZZ"
/* SCHEMA PRODUCED DATE - TIME :10/18/2023 - 17:47:17 */
#pragma section omfx
/* Definition OMFX created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __omfx
typedef struct __omfx
{
   char                            appl_cde[2];
   char                            fm_typ;
   char                            fm_dat[16];
   char                            lnet[4];
   char                            fiid[4];
   char                            regn[4];
   char                            brch[4];
   char                            term_id[16];
   char                            filler_0;
   char                            user_grpx[4];
   char                            user_numx[9];
   char                            rec_image[4010];
} omfx_def;
#define omfx_def_Size 4075
#pragma section pbfbase
/* Definition PBFBASE created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __pbfbase
typedef struct __pbfbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      char                            fiid[4];
      struct
      {
         char                            acct_num[19];
      } num;
      char                            typ[2];
   } prikey;
   char                            acct_stat;
   char                            user_fld1[2];
   union
   {
      long long                       avail_bal;
      long long                       avail_cr;
   } u_avail_bal;
   union
   {
      long long                       ledg_bal;
      long long                       cr_lmt;
   } u_ledg_bal;
   union
   {
      long long                       amt_on_hld;
      long long                       cr_bal;
   } u_amt_on_hld;
   __int32_t                       ovrdrft_lmt;
   union
   {
      struct
      {
         long long                       lim_adelanto_efectivo;
         short                           top_adelanto_efectivo;
         long long                       lim_contado;
         short                           top_contado;
         long long                       lim_cuotas;
         short                           top_cuotas;
         long long                       lim_prest_consumo;
         short                           top_prest_consumo;
         long long                       lim_prest_financia;
         short                           top_prest_financia;
      } csm_nuevos_limites;
      struct
      {
         long long                       monto;
         short                           tope;
      } csm_limite[5];
   } u_csm_nuevos_limites;
   struct
   {
      long long                       min_payment;
      long long                       min_payment_uss;
      long long                       payment;
      long long                       payment_uss;
      char                            uso_futuro[16];
      char                            user_fld[12];
      char                            payment_date[6];
   } csm_p_res;
   char                            csm_cash_fee[8];
   char                            csm_interest_rate[6];
   char                            csm_interest_rate_uss[6];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_dep_dat;
   long long                       last_dep_amt;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_wdl_dat;
   long long                       last_wdl_amt;
   long long                       cash_out_today;
   long long                       cash_in_today;
   char                            crncy_cde[3];
   char                            user_fld2[17];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
   char                            user_fld_aci[50];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
} pbfbase_def;
#define pbfbase_def_Size 440
#pragma section pospbf
/* Definition POSPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __pospbf
typedef struct __pospbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   long long                       ttl_float;
   long long                       cur_float;
   short                           days_delinq;
   short                           months_active;
   short                           cycle_1;
   short                           cycle_2;
   short                           cycle_3;
   char                            user_fld3[20];
} pospbf_def;
#define pospbf_def_Size 54
#pragma section tlrpbf
/* Definition TLRPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __tlrpbf
typedef struct __tlrpbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            confidential_flg;
   char                            sp_stat;
   long long                       accrued_interest_ytd;
   long long                       amt_dep_cr;
   short                           num_of_dep;
   long long                       ttl_dep_amt;
   long long                       strt_bal;
   long long                       passbook_bal;
   short                           nbf_rec_cnt;
   char                            sig_crd_loc[9];
   char                            passbook_ind;
   char                            cust_class;
   char                            user_fld4;
   short                           cashout_lmt;
   short                           cashin_lmt;
   char                            cntr_cnt;
   char                            user_fld5[29];
} tlrpbf_def;
#define tlrpbf_def_Size 100
#pragma section tbpbf
/* Definition TBPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __tbpbf
typedef struct __tbpbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   long long                       cash_adv_min;
   long long                       cash_adv_incr;
   struct
   {
      struct
      {
         long long                       amt;
         short                           cnt;
      } xfer;
   } prd_lmt;
   struct
   {
      struct
      {
         long long                       amt;
         short                           cnt;
      } xfer;
   } cyc_lmt;
   struct
   {
      struct
      {
         long long                       amt;
         short                           cnt;
      } xfer;
   } prd_use;
   struct
   {
      struct
      {
         long long                       amt;
         short                           cnt;
      } xfer;
   } cyc_use;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_prd_reset_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_cyc_reset_dat;
} tbpbf_def;
#define tbpbf_def_Size 76
#pragma section crlinepbf
/* Definition CRLINEPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __crlinepbf
typedef struct __crlinepbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            cr_line_acct_typ[2];
   char                            cr_line_acct[19];
   char                            user_fld;
} crlinepbf_def;
#define crlinepbf_def_Size 30
#pragma section nampbf
/* Definition NAMPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __nampbf
typedef struct __nampbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   char                            cust_short_nam[40];
} nampbf_def;
#define nampbf_def_Size 48
#pragma section csfcpbf
/* Definition CSFCPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __csfcpbf
typedef struct __csfcpbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   long long                       prior_ytd_intrst;
   char                            cur_intrst_rate[8];
   char                            cash_adv_intrst_rate[8];
   long long                       min_amt_due;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } next_pmnt_due_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cr_ovrdft_lmt_chng_dat;
   unsigned short                  cyc_cnt;
   struct
   {
      union
      {
         char                            db_cr_hist[10];
         struct
         {
            char                            nsf[5];
            char                            ovrdft[5];
         } db_hist;
         struct
         {
            char                            num_delinq[5];
            char                            num_cr_lmt_exceed[5];
         } cr_hist;
      } u_db_cr_hist;
      long long                       acct_bal;
      char                            acct_stat;
      char                            user_fld1;
   } cyc_data[12];
} csfcpbf_def;
#define csfcpbf_def_Size 294
#pragma section preauthpbf
/* Definition PREAUTHPBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __preauthpbf
typedef struct __preauthpbf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   struct
   {
      char                            seq_num[12];
      long long                       hold_amt;
      short                           pr_timestamp[3];
      char                            user_fld6[2];
   } pre_auth[10];
} preauthpbf_def;
#define preauthpbf_def_Size 288
#pragma section pbf
/* Record PBF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __pbf
typedef struct __pbf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         char                            fiid[4];
         struct
         {
            char                            acct_num[19];
         } num;
         char                            typ[2];
      } prikey;
      char                            acct_stat;
      char                            user_fld1[2];
      union
      {
         long long                       avail_bal;
         long long                       avail_cr;
      } u_avail_bal;
      union
      {
         long long                       ledg_bal;
         long long                       cr_lmt;
      } u_ledg_bal;
      union
      {
         long long                       amt_on_hld;
         long long                       cr_bal;
      } u_amt_on_hld;
      __int32_t                       ovrdrft_lmt;
      union
      {
         struct
         {
            long long                       lim_adelanto_efectivo;
            short                           top_adelanto_efectivo;
            long long                       lim_contado;
            short                           top_contado;
            long long                       lim_cuotas;
            short                           top_cuotas;
            long long                       lim_prest_consumo;
            short                           top_prest_consumo;
            long long                       lim_prest_financia;
            short                           top_prest_financia;
         } csm_nuevos_limites;
         struct
         {
            long long                       monto;
            short                           tope;
         } csm_limite[5];
      } u_csm_nuevos_limites;
      struct
      {
         long long                       min_payment;
         long long                       min_payment_uss;
         long long                       payment;
         long long                       payment_uss;
         char                            uso_futuro[16];
         char                            user_fld[12];
         char                            payment_date[6];
      } csm_p_res;
      char                            csm_cash_fee[8];
      char                            csm_interest_rate[6];
      char                            csm_interest_rate_uss[6];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_dep_dat;
      long long                       last_dep_amt;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_wdl_dat;
      long long                       last_wdl_amt;
      long long                       cash_out_today;
      long long                       cash_in_today;
      char                            crncy_cde[3];
      char                            user_fld2[17];
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      long long                       ttl_float;
      long long                       cur_float;
      short                           days_delinq;
      short                           months_active;
      short                           cycle_1;
      short                           cycle_2;
      short                           cycle_3;
      char                            user_fld3[20];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            confidential_flg;
      char                            sp_stat;
      long long                       accrued_interest_ytd;
      long long                       amt_dep_cr;
      short                           num_of_dep;
      long long                       ttl_dep_amt;
      long long                       strt_bal;
      long long                       passbook_bal;
      short                           nbf_rec_cnt;
      char                            sig_crd_loc[9];
      char                            passbook_ind;
      char                            cust_class;
      char                            user_fld4;
      short                           cashout_lmt;
      short                           cashin_lmt;
      char                            cntr_cnt;
      char                            user_fld5[29];
   } seg3;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      long long                       cash_adv_min;
      long long                       cash_adv_incr;
      struct
      {
         struct
         {
            long long                       amt;
            short                           cnt;
         } xfer;
      } prd_lmt;
      struct
      {
         struct
         {
            long long                       amt;
            short                           cnt;
         } xfer;
      } cyc_lmt;
      struct
      {
         struct
         {
            long long                       amt;
            short                           cnt;
         } xfer;
      } prd_use;
      struct
      {
         struct
         {
            long long                       amt;
            short                           cnt;
         } xfer;
      } cyc_use;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_prd_reset_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_cyc_reset_dat;
   } seg14;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            cr_line_acct_typ[2];
      char                            cr_line_acct[19];
      char                            user_fld;
   } seg15;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      char                            cust_short_nam[40];
   } seg16;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      long long                       prior_ytd_intrst;
      char                            cur_intrst_rate[8];
      char                            cash_adv_intrst_rate[8];
      long long                       min_amt_due;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } next_pmnt_due_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cr_ovrdft_lmt_chng_dat;
      unsigned short                  cyc_cnt;
      struct
      {
         union
         {
            char                            db_cr_hist[10];
            struct
            {
               char                            nsf[5];
               char                            ovrdft[5];
            } db_hist;
            struct
            {
               char                            num_delinq[5];
               char                            num_cr_lmt_exceed[5];
            } cr_hist;
         } u_db_cr_hist;
         long long                       acct_bal;
         char                            acct_stat;
         char                            user_fld1;
      } cyc_data[12];
   } seg21;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         char                            user_fld6[2];
      } pre_auth[10];
   } seg22;
} pbf_def;
#define pbf_def_Size 1330
#pragma section pbfxbase_display
/* Definition PBFXBASE-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pbfxbase_display
typedef struct __pbfxbase_display
{
   char                            lgth[4];
   char                            cnt[9];
   struct
   {
      char                            fiid[4];
      char                            num[19];
      char                            typ[2];
   } prikey;
   char                            acct_stat;
   char                            rec_typ;
   char                            avail_bal[18];
   char                            ledg_bal[18];
   char                            amt_on_hld[18];
   char                            ovrdrft_lmt[10];
   struct
   {
      char                            monto[18];
      char                            tope[2];
   } csm_limite[5];
   struct
   {
      char                            min_payment[12];
      char                            min_payment_uss[12];
      char                            payment[12];
      char                            payment_uss[12];
      char                            user_fld[12];
      char                            payment_date[6];
   } csm_p_res;
   char                            csm_cash_fee[8];
   char                            csm_interest_rate[6];
   char                            csm_interest_rate_uss[6];
   char                            last_dep_dat[6];
   char                            last_dep_amt[15];
   char                            last_wdl_dat[6];
   char                            last_wdl_amt[15];
   char                            crncy_cde[3];
   char                            user_fld1;
   char                            user_fld_aci[50];
   char                            user_fld_regn[50];
   char                            user_fld_cust[50];
} pbfxbase_display_def;
#define pbfxbase_display_def_Size 486
#pragma section pospbfx_display
/* Definition POSPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pospbfx_display
typedef struct __pospbfx_display
{
   struct
   {
      char                            lgth[4];
      struct
      {
         char                            id[4];
         char                            b24_rsrvd[8];
      } seg_data;
   } segx_lgth;
   char                            ttl_float[15];
   char                            days_delinq[2];
   char                            months_active[2];
   char                            cycle_1[2];
   char                            cycle_2[2];
   char                            cycle_3[2];
   char                            user_fld2;
} pospbfx_display_def;
#define pospbfx_display_def_Size 42
#pragma section tlrpbfx_display
/* Definition TLRPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __tlrpbfx_display
typedef struct __tlrpbfx_display
{
   char                            lgth[4];
   char                            confidential_flg;
   char                            sp_stat;
   char                            accrued_interest_ytd[18];
   char                            strt_bal[18];
   char                            passbook_bal[18];
   char                            nbf_rec_cnt[4];
   char                            sig_crd_loc[9];
   char                            passbook_ind;
   char                            cust_class;
   char                            cashout_lmt[4];
   char                            cashin_lmt[4];
   char                            user_fld1;
} tlrpbfx_display_def;
#define tlrpbfx_display_def_Size 84
#pragma section tbpbfx_display
/* Definition TBPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __tbpbfx_display
typedef struct __tbpbfx_display
{
   char                            lgth[4];
   char                            cash_adv_min[15];
   char                            cash_adv_incr[15];
   struct
   {
      struct
      {
         char                            amt[15];
         char                            cnt[4];
      } xfer;
   } prd_lmt;
   struct
   {
      struct
      {
         char                            amt[15];
         char                            cnt[4];
      } xfer;
   } cyc_lmt;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_prd_reset_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_cyc_reset_dat;
} tbpbfx_display_def;
#define tbpbfx_display_def_Size 84
#pragma section crlinepbfx_display
/* Definition CRLINEPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __crlinepbfx_display
typedef struct __crlinepbfx_display
{
   char                            lgth[4];
   char                            cr_line_acct_typ[2];
   char                            cr_line_acct[19];
   char                            user_fld;
} crlinepbfx_display_def;
#define crlinepbfx_display_def_Size 26
#pragma section nampbfx_display
/* Definition NAMPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __nampbfx_display
typedef struct __nampbfx_display
{
   char                            lgth[4];
   char                            cust_short_nam[40];
} nampbfx_display_def;
#define nampbfx_display_def_Size 44
#pragma section csfcpbfx_display
/* Definition CSFCPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __csfcpbfx_display
typedef struct __csfcpbfx_display
{
   char                            lgth[4];
   char                            prior_ytd_intrst[18];
   char                            cur_intrst_rate[8];
   char                            cash_adv_intrst_rate[8];
   char                            min_amt_due[18];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } next_pmnt_due_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } cr_ovrdft_lmt_chng_dat;
   char                            cyc_cnt[2];
   struct
   {
      union
      {
         char                            db_cr_hist[10];
         struct
         {
            char                            nsf[5];
            char                            ovrdft[5];
         } db_hist;
         struct
         {
            char                            num_delinq[5];
            char                            num_cr_lmt_exceed[5];
         } cr_hist;
      } u_db_cr_hist;
      char                            acct_bal[18];
      char                            acct_stat;
      char                            user_fld1;
   } cyc_data[12];
} csfcpbfx_display_def;
#define csfcpbfx_display_def_Size 430
#pragma section preauthpbfx_display
/* Definition PREAUTHPBFX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __preauthpbfx_display
typedef struct __preauthpbfx_display
{
   char                            lgth[4];
   char                            pre_auth_cnt[2];
   struct
   {
      char                            seq_num[12];
      char                            hold_amt[18];
      struct
      {
         struct
         {
            char                            yy[2];
            char                            mm[2];
            char                            dd[2];
         } dat;
         struct
         {
            char                            hh[2];
            char                            mm[2];
            char                            ss[2];
            char                            tt[2];
         } tim;
      } pr_ts;
   } pre_auth[10];
} preauthpbfx_display_def;
#define preauthpbfx_display_def_Size 446
#pragma section pbfxd
/* Definition PBFXD created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pbfxd
typedef struct __pbfxd
{
   struct
   {
      char                            lgth[4];
      char                            cnt[9];
      struct
      {
         char                            fiid[4];
         char                            num[19];
         char                            typ[2];
      } prikey;
      char                            acct_stat;
      char                            rec_typ;
      char                            avail_bal[18];
      char                            ledg_bal[18];
      char                            amt_on_hld[18];
      char                            ovrdrft_lmt[10];
      struct
      {
         char                            monto[18];
         char                            tope[2];
      } csm_limite[5];
      struct
      {
         char                            min_payment[12];
         char                            min_payment_uss[12];
         char                            payment[12];
         char                            payment_uss[12];
         char                            user_fld[12];
         char                            payment_date[6];
      } csm_p_res;
      char                            csm_cash_fee[8];
      char                            csm_interest_rate[6];
      char                            csm_interest_rate_uss[6];
      char                            last_dep_dat[6];
      char                            last_dep_amt[15];
      char                            last_wdl_dat[6];
      char                            last_wdl_amt[15];
      char                            crncy_cde[3];
      char                            user_fld1;
      char                            user_fld_aci[50];
      char                            user_fld_regn[50];
      char                            user_fld_cust[50];
   } seg0;
   struct
   {
      struct
      {
         char                            lgth[4];
         struct
         {
            char                            id[4];
            char                            b24_rsrvd[8];
         } seg_data;
      } segx_lgth;
      char                            ttl_float[15];
      char                            days_delinq[2];
      char                            months_active[2];
      char                            cycle_1[2];
      char                            cycle_2[2];
      char                            cycle_3[2];
      char                            user_fld2;
   } seg2;
   struct
   {
      char                            lgth[4];
      char                            confidential_flg;
      char                            sp_stat;
      char                            accrued_interest_ytd[18];
      char                            strt_bal[18];
      char                            passbook_bal[18];
      char                            nbf_rec_cnt[4];
      char                            sig_crd_loc[9];
      char                            passbook_ind;
      char                            cust_class;
      char                            cashout_lmt[4];
      char                            cashin_lmt[4];
      char                            user_fld1;
   } seg3;
   struct
   {
      char                            lgth[4];
      char                            cash_adv_min[15];
      char                            cash_adv_incr[15];
      struct
      {
         struct
         {
            char                            amt[15];
            char                            cnt[4];
         } xfer;
      } prd_lmt;
      struct
      {
         struct
         {
            char                            amt[15];
            char                            cnt[4];
         } xfer;
      } cyc_lmt;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_prd_reset_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_cyc_reset_dat;
   } seg14;
   struct
   {
      char                            lgth[4];
      char                            cr_line_acct_typ[2];
      char                            cr_line_acct[19];
      char                            user_fld;
   } seg15;
   struct
   {
      char                            lgth[4];
      char                            cust_short_nam[40];
   } seg16;
   struct
   {
      char                            lgth[4];
      char                            prior_ytd_intrst[18];
      char                            cur_intrst_rate[8];
      char                            cash_adv_intrst_rate[8];
      char                            min_amt_due[18];
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } next_pmnt_due_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } cr_ovrdft_lmt_chng_dat;
      char                            cyc_cnt[2];
      struct
      {
         union
         {
            char                            db_cr_hist[10];
            struct
            {
               char                            nsf[5];
               char                            ovrdft[5];
            } db_hist;
            struct
            {
               char                            num_delinq[5];
               char                            num_cr_lmt_exceed[5];
            } cr_hist;
         } u_db_cr_hist;
         char                            acct_bal[18];
         char                            acct_stat;
         char                            user_fld1;
      } cyc_data[12];
   } seg21;
   struct
   {
      char                            lgth[4];
      char                            pre_auth_cnt[2];
      struct
      {
         char                            seq_num[12];
         char                            hold_amt[18];
         struct
         {
            struct
            {
               char                            yy[2];
               char                            mm[2];
               char                            dd[2];
            } dat;
            struct
            {
               char                            hh[2];
               char                            mm[2];
               char                            ss[2];
               char                            tt[2];
            } tim;
         } pr_ts;
      } pre_auth[10];
   } seg22;
} pbfxd_def;
#define pbfxd_def_Size 1642
#pragma section pdf_prikey
/* Definition PDF-PRIKEY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __pdf_prikey
typedef struct __pdf_prikey
{
   char                            descr_tag[30];
} pdf_prikey_def;
#define pdf_prikey_def_Size 30
#pragma section pdf
/* Record PDF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __pdf
typedef struct __pdf
{
   struct
   {
      char                            descr_tag[30];
   } prikey;
   char                            proc_cde_descr_long[30];
   char                            proc_cde_descr_short[6];
   struct
   {
      struct
      {
         long long                       afm_ts;
         short                           updt_typ;
         struct
         {
            short                           grp_num;
            __int32_t                       user_num;
         } user_id;
         char                            term_nam[24];
      } fm;
   } last_afm;
} pdf_def;
#define pdf_def_Size 106
#pragma section rfh
/* Record RFH created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rfh
typedef struct __rfh
{
   char                            rec_cnt[9];
   char                            rec_typ[2];
   char                            ref_typ;
   char                            appl[2];
   char                            grp[4];
   char                            tape_dat[8];
   char                            tape_tim[4];
   char                            ln[4];
   char                            rel_num[2];
   char                            part_num[2];
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
   } atm;
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
   } pos;
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
   } tlr;
   char                            imp_typ;
   char                            caf_expnt;
   char                            pre_auth_support;
   char                            user_fld2[5];
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
   } tb;
} rfh_def;
#define rfh_def_Size 150
#pragma section rbh
/* Record RBH created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rbh
typedef struct __rbh
{
   char                            rec_cnt[9];
   char                            rec_typ[2];
   char                            crd_iss[4];
   char                            end_range[28];
   char                            user_fld;
} rbh_def;
#define rbh_def_Size 44
#pragma section rbt
/* Record RBT created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rbt
typedef struct __rbt
{
   char                            rec_cnt[9];
   char                            rec_typ[2];
   char                            amt[18];
   char                            num_recs[9];
} rbt_def;
#define rbt_def_Size 38
#pragma section rft
/* Record RFT created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rft
typedef struct __rft
{
   char                            rec_cnt[9];
   char                            rec_typ[2];
   char                            num_recs[9];
   char                            nxt_file_ind;
   char                            user_fld1[3];
} rft_def;
#define rft_def_Size 24
#pragma section spx_display
/* Definition SPX-DISPLAY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __spx_display
typedef struct __spx_display
{
   char                            sx_cnt[9];
   char                            sx_rec_typ;
   char                            sx_fiid[4];
   char                            sx_acct_num[19];
   char                            sx_acct_typ[2];
   char                            sx_hi_chk_num[11];
   char                            sx_lo_chk_num[11];
   char                            sx_amt[15];
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } sx_dat;
   struct
   {
      char                            hh[2];
      char                            mm[2];
      char                            ss[2];
      char                            tt[2];
   } sx_tim;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } sx_exp_dat;
   char                            sx_descr[35];
   char                            user_fld1[5];
} spx_display_def;
#define spx_display_def_Size 132
#pragma section rgcf
/* Record RGCF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __rgcf
typedef struct __rgcf
{
   struct
   {
      char                            tape_dat[8];
      char                            tape_tim[4];
      char                            grp[32];
      char                            appl[2];
      char                            part_num[2];
   } pkey;
   char                            refr_grp[4];
   __int32_t                       last_rec_num;
   long long                       restart_rba;
   short                           suspend_blk_rec_num;
   short                           part_num;
   __int32_t                       ttl_num_batch_recs;
   union
   {
      long long                       ttl_batch_amt;
      long long                       ttl_batch_dda_amt;
   } u_ttl_batch_amt;
   long long                       ttl_batch_sav_amt;
   long long                       ttl_batch_dda_amt2;
   long long                       ttl_batch_sav_amt2;
   long long                       ttl_batch_entry_hash;
   long long                       ttl_file_dda_amt;
   long long                       ttl_file_sav_amt;
   long long                       ttl_file_dda_amt2;
   long long                       ttl_file_sav_amt2;
   long long                       ttl_file_entry_hash;
   __int32_t                       ttl_num_recs;
   __int32_t                       ttl_num_batches;
   char                            batch_num[7];
   char                            service_class_cde[3];
   char                            immediate_dest[10];
   char                            immediate_origin[10];
   char                            stat[2];
   char                            refr_typ;
   char                            rel_num[2];
   char                            len_data_frmt;
   char                            imp_typ;
   char                            mount_msg[25];
   char                            file_id[17];
   char                            vol_ids[35][6];
   char                            data_frmt;
   char                            file_nam[35];
   char                            base24_tape_lbl_proc_used;
   char                            labels[3];
   char                            bypass_num[5];
   char                            user_fld1[2];
   char                            all_files_processed;
   char                            resume_flg;
   char                            caf_expnt;
   char                            pre_auth_support;
   char                            rbh_crd_iss[4];
   short                           block_lgth;
   short                           tot_rec_lgth;
   char                            first_block_rec_cnt[9];
   char                            user_fld2;
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } cur;
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } nxt;
   } atm;
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } cur;
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } nxt;
   } pos;
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } cur;
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } nxt;
   } tlr;
   struct
   {
      char                            lst_extr_dat[6];
      char                            imp_strt_dat[8];
      char                            imp_strt_tim[12];
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } cur;
      struct
      {
         char                            suspend_file_dat[6];
         char                            suspend_rec_dat[8];
         char                            suspend_rec_tim[12];
         __int32_t                       suspend_num_recs;
         long long                       restart_rba;
         short                           suspend_blk_rec_num;
         short                           part_num;
      } nxt;
   } tb;
   char                            user_fld3[92];
} rgcf_def;
#define rgcf_def_Size 1050
#pragma section rpt
/* Record RPT created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __rpt
typedef struct __rpt
{
   struct
   {
      struct
      {
         char                            ln[4];
         char                            fiid[4];
      } part_key;
      char                            rpt_id[5];
   } prikey;
   char                            spcl_line;
   union
   {
      char                            printer_control;
      struct
      {
         char                            ctl;
      } printer_control_r;
   } u_printer_control;
   char                            print_line[80];
} rpt_def;
#define rpt_def_Size 95
#pragma section sclr
/* Record SCLR created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __sclr
typedef struct __sclr
{
   struct
   {
      char                            rpt_ln[4];
      char                            shrg_ln[4];
      char                            line_num;
   } sclr_key;
   char                            filler_0;
   long long                       debit;
   long long                       credit;
   long long                       net;
} sclr_def;
#define sclr_def_Size 34
#pragma section sec
/* Record SEC created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __sec
typedef struct __sec
{
   struct
   {
      char                            alias[16];
      char                            file_id[4];
   } prikey;
   struct
   {
      short                           user_grp;
      __int32_t                       user_num;
   } altkey;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   unsigned short                  sec_data_len;
   struct
   {
      char                            sec_data_x[756];
   } sec_data;
} sec_def;
#define sec_def_Size 802
#pragma section ufir
/* Record UFIR created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ufir
typedef struct __ufir
{
   struct
   {
      char                            alias[16];
      struct
      {
         char                            fiid[4];
         char                            regn[4];
         char                            brch[4];
      } fi_info;
   } prikey;
} ufir_def;
#define ufir_def_Size 28
#pragma section upfr
/* Record UPFR created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __upfr
typedef struct __upfr
{
   struct
   {
      char                            alias[16];
      short                           prod_id;
   } prikey;
   unsigned short                  num_files;
   struct
   {
      char                            file_id[4];
   } file_list[96];
} upfr_def;
#define upfr_def_Size 404
#pragma section stf
/* Record STF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __stf
typedef struct __stf
{
   struct
   {
      char                            swi_fiid[4];
      char                            term_fiid[4];
      char                            merch_id[19];
      char                            term_id[16];
      char                            prod_id[2];
   } prikey;
   struct
   {
      char                            id[19];
      short                           ofst;
      short                           lgth;
   } swi_merch;
   struct
   {
      char                            id[16];
      short                           ofst;
      short                           lgth;
   } swi_term;
   short                           on_premise_flg;
   short                           emv_certified_flg;
   char                            crdhldr_actvt_term_ind;
   char                            term_input_cap_ind;
   char                            alt_mrch_id[15];
   char                            alt_term_id[20];
   union
   {
      char                            mrch_phn_num[20];
      char                            mrch_cust_srvc_phn_num[20];
   } u_mrch_phn_num;
   char                            mrch_email_addr[40];
   char                            send_pre_auth;
   short                           tle_certified_flg;
   short                           ukpt_certified_flg;
   char                            user_fld1[20];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} stf_def;
#define stf_def_Size 232
#pragma section surf_prikey_cpf
/* Definition SURF-PRIKEY-CPF created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __surf_prikey_cpf
typedef struct __surf_prikey_cpf
{
   char                            rec_typ[2];
   char                            prod_id[2];
   char                            term_sur_profile[4];
   char                            card_fiid[4];
   char                            card_profile[2];
   char                            txn_crncy_cde[3];
   char                            user_fld1[13];
} surf_prikey_cpf_def;
#define surf_prikey_cpf_def_Size 30
#pragma section surf_prikey_sproute
/* Definition SURF-PRIKEY-SPROUTE created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __surf_prikey_sproute
typedef struct __surf_prikey_sproute
{
   char                            rec_typ[2];
   char                            prod_id[2];
   char                            term_sur_profile[4];
   char                            sym_dest[16];
   char                            card_typ[2];
   char                            txn_crncy_cde[3];
   char                            user_fld3;
} surf_prikey_sproute_def;
#define surf_prikey_sproute_def_Size 30
#pragma section surf
/* Record SURF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __surf
typedef struct __surf
{
   union
   {
      char                            prikey[30];
      struct
      {
         char                            rec_typ[2];
         char                            prod_id[2];
         char                            term_sur_profile[4];
         char                            card_fiid[4];
         char                            card_profile[2];
         char                            txn_crncy_cde[3];
         char                            user_fld1[13];
      } cpf;
      struct
      {
         char                            rec_typ[2];
         char                            prod_id[2];
         char                            term_sur_profile[4];
         char                            sym_dest[16];
         char                            card_typ[2];
         char                            txn_crncy_cde[3];
         char                            user_fld3;
      } sproute;
   } u_prikey;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      char                            rvsl_cde;
      char                            ncd_flg;
      struct
      {
         union
         {
            char                            tran_cde[6];
            struct
            {
               char                            t_cde[2];
               char                            t_from[2];
               char                            t_to[2];
            } tran_cde_r;
         } u_tran_cde;
         long long                       flat_fee;
         short                           pcnt_fee;
         char                            min_max;
         char                            user_fld2;
      } tran[10];
   } atm;
} surf_def;
#define surf_def_Size 230
#pragma section tcf_prikey
/* Definition TCF-PRIKEY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __tcf_prikey
typedef struct __tcf_prikey
{
   char                            txn_cde[2];
} tcf_prikey_def;
#define tcf_prikey_def_Size 2
#pragma section tcf
/* Record TCF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __tcf
typedef struct __tcf
{
   struct
   {
      char                            txn_cde[2];
   } prikey;
   char                            txn_cde_descr[30];
   struct
   {
      struct
      {
         long long                       afm_ts;
         short                           updt_typ;
         struct
         {
            short                           grp_num;
            __int32_t                       user_num;
         } user_id;
         char                            term_nam[24];
      } fm;
   } last_afm;
} tcf_def;
#define tcf_def_Size 72
#pragma section uafbase
/* Definition UAFBASE created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __uafbase
typedef struct __uafbase
{
   struct
   {
      short                           lgth;
      union
      {
         struct
         {
            short                           left_word;
            short                           right_word;
         } seg_map_r;
         __int32_t                       seg_map;
      } u_seg_map_r;
   } base_seg;
   struct
   {
      struct
      {
         char                            num[19];
      } pan;
      char                            mbr_num[3];
   } prikey;
   short                           bad_pin_tries;
   union
   {
      struct
      {
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
      } grp_prd;
      long long                       wdl_prd[4];
   } u_grp_prd;
   char                            fiid[4];
   char                            tran_ind[16];
   char                            tran_seq_num[12];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
} uafbase_def;
#define uafbase_def_Size 122
#pragma section atmuaf
/* Definition ATMUAF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __atmuaf
typedef struct __atmuaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           used_prd;
   union
   {
      struct
      {
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
      } grp_prd;
      long long                       wdl_prd[4];
   } u_grp_prd;
} atmuaf_def;
#define atmuaf_def_Size 42
#pragma section posuaf
/* Definition POSUAF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __posuaf
typedef struct __posuaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   union
   {
      struct
      {
         long long                       ttl_pur_prd;
         long long                       offl_pur_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       csm_ttl_pur_cuo_prd;
         long long                       csm_offl_pur_cuo_prd;
         long long                       csm_ttl_prest_fin_prd;
         long long                       csm_offl_prest_fin_prd;
         long long                       csm_ttl_prest_con_prd;
         long long                       csm_offl_prest_con_prd;
      } grp_prd;
      long long                       wdl_pur_prd[12];
   } u_grp_prd;
   short                           used_prd;
   long long                       ttl_rfnd_cr_prd;
   long long                       offl_rfnd_cr_prd;
   short                           num_rfnd_cr_prd;
   char                            tran_tc[2];
} posuaf_def;
#define posuaf_def_Size 126
#pragma section ssbcuaf
/* Definition SSBCUAF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __ssbcuaf
typedef struct __ssbcuaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           csf_chk_used_prd;
   union
   {
      struct
      {
         long long                       ttl_chk_prd;
         long long                       offl_chk_prd;
         long long                       ttl_csf_chk_prd;
         long long                       offl_csf_chk_prd;
      } grp_prd;
      long long                       chk_prd[4];
   } u_grp_prd;
} ssbcuaf_def;
#define ssbcuaf_def_Size 42
#pragma section ncduaf
/* Definition NCDUAF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __ncduaf
typedef struct __ncduaf
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   short                           used_prd;
   union
   {
      struct
      {
         long long                       ttl_wdl_prd;
         long long                       offl_wdl_prd;
         long long                       ttl_cca_prd;
         long long                       offl_cca_prd;
      } cash_val_prd;
      long long                       cash_val_wdl_prd[4];
   } u_cash_val_prd;
   struct
   {
      char                            ncd_cde[2];
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
         } ncd_prd;
         long long                       ncd_wdl_prd[4];
      } u_ncd_prd;
   } ncd[2];
} ncduaf_def;
#define ncduaf_def_Size 110
#pragma section onl_rec_maint
/* Definition ONL-REC-MAINT created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __onl_rec_maint
typedef struct __onl_rec_maint
{
   struct
   {
      short                           lgth;
      struct
      {
         short                           id;
         __int32_t                       b24_rsrvd;
      } seg_data;
   } seg_lgth;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } last_reset_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } atm_last_used_dat;
   struct
   {
      char                            yy[2];
      char                            mm[2];
      char                            dd[2];
   } pos_last_used_dat;
} onl_rec_maint_def;
#define onl_rec_maint_def_Size 26
#pragma section uaf
/* Record UAF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __uaf
typedef struct __uaf
{
   struct
   {
      struct
      {
         short                           lgth;
         union
         {
            struct
            {
               short                           left_word;
               short                           right_word;
            } seg_map_r;
            __int32_t                       seg_map;
         } u_seg_map_r;
      } base_seg;
      struct
      {
         struct
         {
            char                            num[19];
         } pan;
         char                            mbr_num[3];
      } prikey;
      short                           bad_pin_tries;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
         } grp_prd;
         long long                       wdl_prd[4];
      } u_grp_prd;
      char                            fiid[4];
      char                            tran_ind[16];
      char                            tran_seq_num[12];
      struct
      {
         short                           fm_timestamp[3];
         short                           fm_user_grp;
         __int32_t                       fm_user_num;
         char                            updt_typ;
         char                            sta_num[4];
         char                            fill1;
      } last_fm;
      struct
      {
         short                           lt_timestamp[3];
         short                           nonstop_id;
         short                           pro_num;
      } last_tran;
   } seg0;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           used_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
         } grp_prd;
         long long                       wdl_prd[4];
      } u_grp_prd;
   } seg1;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      union
      {
         struct
         {
            long long                       ttl_pur_prd;
            long long                       offl_pur_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       csm_ttl_pur_cuo_prd;
            long long                       csm_offl_pur_cuo_prd;
            long long                       csm_ttl_prest_fin_prd;
            long long                       csm_offl_prest_fin_prd;
            long long                       csm_ttl_prest_con_prd;
            long long                       csm_offl_prest_con_prd;
         } grp_prd;
         long long                       wdl_pur_prd[12];
      } u_grp_prd;
      short                           used_prd;
      long long                       ttl_rfnd_cr_prd;
      long long                       offl_rfnd_cr_prd;
      short                           num_rfnd_cr_prd;
      char                            tran_tc[2];
   } seg2;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           csf_chk_used_prd;
      union
      {
         struct
         {
            long long                       ttl_chk_prd;
            long long                       offl_chk_prd;
            long long                       ttl_csf_chk_prd;
            long long                       offl_csf_chk_prd;
         } grp_prd;
         long long                       chk_prd[4];
      } u_grp_prd;
   } seg18;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         short                           acct_typ;
         struct
         {
            char                            acct_num[19];
         } acct;
         char                            user_fld1;
      } pre_auth[10];
   } seg22;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      short                           used_prd;
      union
      {
         struct
         {
            long long                       ttl_wdl_prd;
            long long                       offl_wdl_prd;
            long long                       ttl_cca_prd;
            long long                       offl_cca_prd;
         } cash_val_prd;
         long long                       cash_val_wdl_prd[4];
      } u_cash_val_prd;
      struct
      {
         char                            ncd_cde[2];
         union
         {
            struct
            {
               long long                       ttl_wdl_prd;
               long long                       offl_wdl_prd;
               long long                       ttl_cca_prd;
               long long                       offl_cca_prd;
            } ncd_prd;
            long long                       ncd_wdl_prd[4];
         } u_ncd_prd;
      } ncd[2];
   } seg23;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            seq_num[12];
         long long                       hold_amt;
         short                           pr_timestamp[3];
         char                            apprv_cde[8];
         short                           pr_txn_timestamp[3];
         char                            term_id[16];
         short                           acct_typ;
         struct
         {
            char                            acct_num[19];
         } acct;
         char                            hold_flg;
      } enhnc_pre_auth[10];
   } seg25;
   struct
   {
      struct
      {
         short                           lgth;
         struct
         {
            short                           id;
            __int32_t                       b24_rsrvd;
         } seg_data;
      } seg_lgth;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } last_reset_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } atm_last_used_dat;
      struct
      {
         char                            yy[2];
         char                            mm[2];
         char                            dd[2];
      } pos_last_used_dat;
   } seg26;
} uaf_def;
#define uaf_def_Size 1744
#pragma section apcf_prikey
/* Definition APCF-PRIKEY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __apcf_prikey
typedef struct __apcf_prikey
{
   char                            acq_txn_prfl[16];
   char                            msg_cat;
   struct
   {
      char                            txn_cde[2];
      char                            acct1_typ[2];
      char                            acct2_typ[2];
   } proc_cde;
   char                            user_fld1;
} apcf_prikey_def;
#define apcf_prikey_def_Size 24
#pragma section apcf
/* Record APCF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __apcf
typedef struct __apcf
{
   struct
   {
      char                            acq_txn_prfl[16];
      char                            msg_cat;
      struct
      {
         char                            txn_cde[2];
         char                            acct1_typ[2];
         char                            acct2_typ[2];
      } proc_cde;
      char                            user_fld1;
   } prikey;
   struct
   {
      struct
      {
         long long                       afm_ts;
         short                           updt_typ;
         struct
         {
            short                           grp_num;
            __int32_t                       user_num;
         } user_id;
         char                            term_nam[24];
      } fm;
   } last_afm;
   char                            txn_alwd;
   char                            log_auth_dest_resp;
   char                            auth_dest[16];
   char                            descr_tag[30];
} apcf_def;
#define apcf_def_Size 112
#pragma section ipcf_prikey
/* Definition IPCF-PRIKEY created on 10/18/2023 at 17:47 */
#pragma fieldalign shared2 __ipcf_prikey
typedef struct __ipcf_prikey
{
   char                            iss_txn_prfl[16];
   char                            msg_cat;
   struct
   {
      char                            txn_cde[2];
      char                            acct1_typ[2];
      char                            acct2_typ[2];
   } proc_cde;
   char                            user_fld1;
} ipcf_prikey_def;
#define ipcf_prikey_def_Size 24
#pragma section ipcf
/* Record IPCF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __ipcf
typedef struct __ipcf
{
   struct
   {
      char                            iss_txn_prfl[16];
      char                            msg_cat;
      struct
      {
         char                            txn_cde[2];
         char                            acct1_typ[2];
         char                            acct2_typ[2];
      } proc_cde;
      char                            user_fld1;
   } prikey;
   struct
   {
      struct
      {
         long long                       afm_ts;
         short                           updt_typ;
         struct
         {
            short                           grp_num;
            __int32_t                       user_num;
         } user_id;
         char                            term_nam[24];
      } fm;
   } last_afm;
   char                            txn_alwd_on_us;
   char                            txn_alwd_not_on_us;
   char                            discrd_rvsl_flg;
   char                            compl_req;
   char                            descr_tag[30];
   char                            csm_habil_tran_on;
   char                            csm_habil_tran_off;
   char                            csm_habil_reversos;
   char                            csm_rechazo_saf;
   char                            csm_impac_saldo;
   char                            csm_uso_futuro;
   char                            csm_flag_captura;
   char                            csm_auth_dest[16];
   char                            uso_futuro;
} ipcf_def;
#define ipcf_def_Size 122
#pragma section testdata
/* Record TESTDATA created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __testdata
typedef struct __testdata
{
   struct
   {
      char                            switch_typ[4];
      short                           rec_num;
   } prikey;
   char                            typ[4];
   char                            prod_id[2];
   short                           dpc_num;
   char                            term_owner_fiid[4];
   char                            term_ln[4];
   char                            term_id[16];
   char                            acq_inst_id_num[11];
   char                            term_st[2];
   char                            term_cnty[3];
   char                            term_cntry[3];
   char                            track2[40];
   char                            tran_cde[6];
   char                            crncy_cde[3];
   char                            pin[16];
   char                            pin_key[16];
   char                            pin_frmt;
   char                            pinpad_char;
   long long                       amt_1;
   long long                       amt_2;
   char                            shrg_grp[24];
   char                            term_tran_allowed;
   char                            term_name_loc[25];
   char                            term_owner_name[22];
   char                            term_city[13];
   char                            term_st_x[3];
   char                            term_cntry_x[2];
   short                           ansi_ofst;
   char                            rte_grp[11];
   char                            user_fld[29];
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
} testdata_def;
#define testdata_def_Size 306
#pragma section bicf
/* Record BICF created on 10/18/2023 at 17:47 */
#include <tnsint.h>
#pragma fieldalign shared2 __bicf
typedef struct __bicf
{
   struct
   {
      char                            bic[15];
      char                            prefijo[11];
   } prikey;
   struct
   {
      struct
      {
         char                            cod_orig[2];
         char                            cod_tx_orig[2];
      } tran_codes[10];
   } tc_conversion;
   struct
   {
      short                           lt_timestamp[3];
      short                           nonstop_id;
      short                           pro_num;
   } last_tran;
   struct
   {
      short                           fm_timestamp[3];
      short                           fm_user_grp;
      __int32_t                       fm_user_num;
      char                            updt_typ;
      char                            sta_num[4];
      char                            fill1;
   } last_fm;
   char                            uso_futuro[247];
} bicf_def;
#define bicf_def_Size 341
